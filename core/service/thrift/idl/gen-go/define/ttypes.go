// Autogenerated by Thrift Compiler (0.9.3)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package define

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

// Attributes:
//  - ID
//  - Result_
//  - Code
//  - Message
type Result_ struct {
	ID      int32  `thrift:"Id,1" json:"Id"`
	Result_ bool   `thrift:"Result,2" json:"Result"`
	Code    int32  `thrift:"Code,3" json:"Code"`
	Message string `thrift:"Message,4" json:"Message"`
}

func NewResult_() *Result_ {
	return &Result_{}
}

func (p *Result_) GetID() int32 {
	return p.ID
}

func (p *Result_) GetResult_() bool {
	return p.Result_
}

func (p *Result_) GetCode() int32 {
	return p.Code
}

func (p *Result_) GetMessage() string {
	return p.Message
}
func (p *Result_) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *Result_) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *Result_) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Result_ = v
	}
	return nil
}

func (p *Result_) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Code = v
	}
	return nil
}

func (p *Result_) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Message = v
	}
	return nil
}

func (p *Result_) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *Result_) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Id: ", p), err)
	}
	return err
}

func (p *Result_) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Result", thrift.BOOL, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Result: ", p), err)
	}
	if err := oprot.WriteBool(bool(p.Result_)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Result (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Result: ", p), err)
	}
	return err
}

func (p *Result_) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Code", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:Code: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Code)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Code (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:Code: ", p), err)
	}
	return err
}

func (p *Result_) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Message", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:Message: ", p), err)
	}
	if err := oprot.WriteString(string(p.Message)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Message (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:Message: ", p), err)
	}
	return err
}

func (p *Result_) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Result_(%+v)", *p)
}

// Attributes:
//  - Data
//  - Result_
//  - Message
type DResult_ struct {
	Data    float64 `thrift:"Data,1" json:"Data"`
	Result_ bool    `thrift:"Result,2" json:"Result"`
	Message string  `thrift:"Message,3" json:"Message"`
}

func NewDResult_() *DResult_ {
	return &DResult_{}
}

func (p *DResult_) GetData() float64 {
	return p.Data
}

func (p *DResult_) GetResult_() bool {
	return p.Result_
}

func (p *DResult_) GetMessage() string {
	return p.Message
}
func (p *DResult_) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *DResult_) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Data = v
	}
	return nil
}

func (p *DResult_) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Result_ = v
	}
	return nil
}

func (p *DResult_) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Message = v
	}
	return nil
}

func (p *DResult_) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("DResult"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *DResult_) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Data", thrift.DOUBLE, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Data: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.Data)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Data (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Data: ", p), err)
	}
	return err
}

func (p *DResult_) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Result", thrift.BOOL, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Result: ", p), err)
	}
	if err := oprot.WriteBool(bool(p.Result_)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Result (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Result: ", p), err)
	}
	return err
}

func (p *DResult_) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Message", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:Message: ", p), err)
	}
	if err := oprot.WriteString(string(p.Message)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Message (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:Message: ", p), err)
	}
	return err
}

func (p *DResult_) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DResult_(%+v)", *p)
}

// Attributes:
//  - ID
//  - Usr
//  - Pwd
//  - TradePwd
//  - Exp
//  - Level
//  - InvitationCode
//  - RegFrom
//  - RegIp
//  - RegTime
//  - CheckCode
//  - CheckExpires
//  - State
//  - LoginTime
//  - LastLoginTime
//  - UpdateTime
//  - DynamicToken
//  - TimeoutTime
type Member struct {
	ID             int32  `thrift:"Id,1" json:"Id"`
	Usr            string `thrift:"Usr,2" json:"Usr"`
	Pwd            string `thrift:"Pwd,3" json:"Pwd"`
	TradePwd       string `thrift:"TradePwd,4" json:"TradePwd"`
	Exp            int32  `thrift:"Exp,5" json:"Exp"`
	Level          int32  `thrift:"Level,6" json:"Level"`
	InvitationCode string `thrift:"InvitationCode,7" json:"InvitationCode"`
	RegFrom        string `thrift:"RegFrom,8" json:"RegFrom"`
	RegIp          string `thrift:"RegIp,9" json:"RegIp"`
	RegTime        int64  `thrift:"RegTime,10" json:"RegTime"`
	CheckCode      string `thrift:"CheckCode,11" json:"CheckCode"`
	CheckExpires   int64  `thrift:"CheckExpires,12" json:"CheckExpires"`
	State          int32  `thrift:"State,13" json:"State"`
	LoginTime      int64  `thrift:"LoginTime,14" json:"LoginTime"`
	LastLoginTime  int64  `thrift:"LastLoginTime,15" json:"LastLoginTime"`
	UpdateTime     int64  `thrift:"UpdateTime,16" json:"UpdateTime"`
	DynamicToken   string `thrift:"DynamicToken,17" json:"DynamicToken"`
	TimeoutTime    int64  `thrift:"TimeoutTime,18" json:"TimeoutTime"`
}

func NewMember() *Member {
	return &Member{}
}

func (p *Member) GetID() int32 {
	return p.ID
}

func (p *Member) GetUsr() string {
	return p.Usr
}

func (p *Member) GetPwd() string {
	return p.Pwd
}

func (p *Member) GetTradePwd() string {
	return p.TradePwd
}

func (p *Member) GetExp() int32 {
	return p.Exp
}

func (p *Member) GetLevel() int32 {
	return p.Level
}

func (p *Member) GetInvitationCode() string {
	return p.InvitationCode
}

func (p *Member) GetRegFrom() string {
	return p.RegFrom
}

func (p *Member) GetRegIp() string {
	return p.RegIp
}

func (p *Member) GetRegTime() int64 {
	return p.RegTime
}

func (p *Member) GetCheckCode() string {
	return p.CheckCode
}

func (p *Member) GetCheckExpires() int64 {
	return p.CheckExpires
}

func (p *Member) GetState() int32 {
	return p.State
}

func (p *Member) GetLoginTime() int64 {
	return p.LoginTime
}

func (p *Member) GetLastLoginTime() int64 {
	return p.LastLoginTime
}

func (p *Member) GetUpdateTime() int64 {
	return p.UpdateTime
}

func (p *Member) GetDynamicToken() string {
	return p.DynamicToken
}

func (p *Member) GetTimeoutTime() int64 {
	return p.TimeoutTime
}
func (p *Member) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.readField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.readField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.readField18(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *Member) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *Member) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Usr = v
	}
	return nil
}

func (p *Member) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Pwd = v
	}
	return nil
}

func (p *Member) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.TradePwd = v
	}
	return nil
}

func (p *Member) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Exp = v
	}
	return nil
}

func (p *Member) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Level = v
	}
	return nil
}

func (p *Member) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.InvitationCode = v
	}
	return nil
}

func (p *Member) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.RegFrom = v
	}
	return nil
}

func (p *Member) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.RegIp = v
	}
	return nil
}

func (p *Member) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.RegTime = v
	}
	return nil
}

func (p *Member) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.CheckCode = v
	}
	return nil
}

func (p *Member) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.CheckExpires = v
	}
	return nil
}

func (p *Member) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.State = v
	}
	return nil
}

func (p *Member) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.LoginTime = v
	}
	return nil
}

func (p *Member) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.LastLoginTime = v
	}
	return nil
}

func (p *Member) readField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.UpdateTime = v
	}
	return nil
}

func (p *Member) readField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.DynamicToken = v
	}
	return nil
}

func (p *Member) readField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.TimeoutTime = v
	}
	return nil
}

func (p *Member) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Member"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := p.writeField16(oprot); err != nil {
		return err
	}
	if err := p.writeField17(oprot); err != nil {
		return err
	}
	if err := p.writeField18(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *Member) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Id: ", p), err)
	}
	return err
}

func (p *Member) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Usr", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Usr: ", p), err)
	}
	if err := oprot.WriteString(string(p.Usr)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Usr (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Usr: ", p), err)
	}
	return err
}

func (p *Member) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Pwd", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:Pwd: ", p), err)
	}
	if err := oprot.WriteString(string(p.Pwd)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Pwd (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:Pwd: ", p), err)
	}
	return err
}

func (p *Member) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TradePwd", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:TradePwd: ", p), err)
	}
	if err := oprot.WriteString(string(p.TradePwd)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TradePwd (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:TradePwd: ", p), err)
	}
	return err
}

func (p *Member) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Exp", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:Exp: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Exp)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Exp (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:Exp: ", p), err)
	}
	return err
}

func (p *Member) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Level", thrift.I32, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:Level: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Level)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Level (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:Level: ", p), err)
	}
	return err
}

func (p *Member) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("InvitationCode", thrift.STRING, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:InvitationCode: ", p), err)
	}
	if err := oprot.WriteString(string(p.InvitationCode)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.InvitationCode (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:InvitationCode: ", p), err)
	}
	return err
}

func (p *Member) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RegFrom", thrift.STRING, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:RegFrom: ", p), err)
	}
	if err := oprot.WriteString(string(p.RegFrom)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.RegFrom (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:RegFrom: ", p), err)
	}
	return err
}

func (p *Member) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RegIp", thrift.STRING, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:RegIp: ", p), err)
	}
	if err := oprot.WriteString(string(p.RegIp)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.RegIp (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:RegIp: ", p), err)
	}
	return err
}

func (p *Member) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RegTime", thrift.I64, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:RegTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.RegTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.RegTime (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:RegTime: ", p), err)
	}
	return err
}

func (p *Member) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CheckCode", thrift.STRING, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:CheckCode: ", p), err)
	}
	if err := oprot.WriteString(string(p.CheckCode)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.CheckCode (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:CheckCode: ", p), err)
	}
	return err
}

func (p *Member) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CheckExpires", thrift.I64, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:CheckExpires: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.CheckExpires)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.CheckExpires (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:CheckExpires: ", p), err)
	}
	return err
}

func (p *Member) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("State", thrift.I32, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:State: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.State)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.State (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:State: ", p), err)
	}
	return err
}

func (p *Member) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("LoginTime", thrift.I64, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:LoginTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.LoginTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.LoginTime (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:LoginTime: ", p), err)
	}
	return err
}

func (p *Member) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("LastLoginTime", thrift.I64, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:LastLoginTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.LastLoginTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.LastLoginTime (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:LastLoginTime: ", p), err)
	}
	return err
}

func (p *Member) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("UpdateTime", thrift.I64, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:UpdateTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.UpdateTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.UpdateTime (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:UpdateTime: ", p), err)
	}
	return err
}

func (p *Member) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("DynamicToken", thrift.STRING, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:DynamicToken: ", p), err)
	}
	if err := oprot.WriteString(string(p.DynamicToken)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.DynamicToken (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:DynamicToken: ", p), err)
	}
	return err
}

func (p *Member) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TimeoutTime", thrift.I64, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:TimeoutTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.TimeoutTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TimeoutTime (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:TimeoutTime: ", p), err)
	}
	return err
}

func (p *Member) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Member(%+v)", *p)
}

// Attributes:
//  - MemberId
//  - Name
//  - Avatar
//  - Sex
//  - BirthDay
//  - Phone
//  - Address
//  - Im
//  - Email
//  - Province
//  - City
//  - District
//  - Remark
//  - Ext1
//  - Ext2
//  - Ext3
//  - Ext4
//  - Ext5
//  - Ext6
//  - UpdateTime
type Profile struct {
	MemberId   int32  `thrift:"MemberId,1" json:"MemberId"`
	Name       string `thrift:"Name,2" json:"Name"`
	Avatar     string `thrift:"Avatar,3" json:"Avatar"`
	Sex        int32  `thrift:"Sex,4" json:"Sex"`
	BirthDay   string `thrift:"BirthDay,5" json:"BirthDay"`
	Phone      string `thrift:"Phone,6" json:"Phone"`
	Address    string `thrift:"Address,7" json:"Address"`
	Im         string `thrift:"Im,8" json:"Im"`
	Email      string `thrift:"Email,9" json:"Email"`
	Province   int32  `thrift:"Province,10" json:"Province"`
	City       int32  `thrift:"City,11" json:"City"`
	District   int32  `thrift:"District,12" json:"District"`
	Remark     string `thrift:"Remark,13" json:"Remark"`
	Ext1       string `thrift:"Ext1,14" json:"Ext1"`
	Ext2       string `thrift:"Ext2,15" json:"Ext2"`
	Ext3       string `thrift:"Ext3,16" json:"Ext3"`
	Ext4       string `thrift:"Ext4,17" json:"Ext4"`
	Ext5       string `thrift:"Ext5,18" json:"Ext5"`
	Ext6       string `thrift:"Ext6,19" json:"Ext6"`
	UpdateTime int64  `thrift:"UpdateTime,20" json:"UpdateTime"`
}

func NewProfile() *Profile {
	return &Profile{}
}

func (p *Profile) GetMemberId() int32 {
	return p.MemberId
}

func (p *Profile) GetName() string {
	return p.Name
}

func (p *Profile) GetAvatar() string {
	return p.Avatar
}

func (p *Profile) GetSex() int32 {
	return p.Sex
}

func (p *Profile) GetBirthDay() string {
	return p.BirthDay
}

func (p *Profile) GetPhone() string {
	return p.Phone
}

func (p *Profile) GetAddress() string {
	return p.Address
}

func (p *Profile) GetIm() string {
	return p.Im
}

func (p *Profile) GetEmail() string {
	return p.Email
}

func (p *Profile) GetProvince() int32 {
	return p.Province
}

func (p *Profile) GetCity() int32 {
	return p.City
}

func (p *Profile) GetDistrict() int32 {
	return p.District
}

func (p *Profile) GetRemark() string {
	return p.Remark
}

func (p *Profile) GetExt1() string {
	return p.Ext1
}

func (p *Profile) GetExt2() string {
	return p.Ext2
}

func (p *Profile) GetExt3() string {
	return p.Ext3
}

func (p *Profile) GetExt4() string {
	return p.Ext4
}

func (p *Profile) GetExt5() string {
	return p.Ext5
}

func (p *Profile) GetExt6() string {
	return p.Ext6
}

func (p *Profile) GetUpdateTime() int64 {
	return p.UpdateTime
}
func (p *Profile) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.readField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.readField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.readField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.readField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.readField20(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *Profile) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.MemberId = v
	}
	return nil
}

func (p *Profile) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *Profile) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Avatar = v
	}
	return nil
}

func (p *Profile) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Sex = v
	}
	return nil
}

func (p *Profile) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.BirthDay = v
	}
	return nil
}

func (p *Profile) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Phone = v
	}
	return nil
}

func (p *Profile) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.Address = v
	}
	return nil
}

func (p *Profile) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.Im = v
	}
	return nil
}

func (p *Profile) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *Profile) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.Province = v
	}
	return nil
}

func (p *Profile) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.City = v
	}
	return nil
}

func (p *Profile) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.District = v
	}
	return nil
}

func (p *Profile) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.Remark = v
	}
	return nil
}

func (p *Profile) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.Ext1 = v
	}
	return nil
}

func (p *Profile) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.Ext2 = v
	}
	return nil
}

func (p *Profile) readField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.Ext3 = v
	}
	return nil
}

func (p *Profile) readField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.Ext4 = v
	}
	return nil
}

func (p *Profile) readField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.Ext5 = v
	}
	return nil
}

func (p *Profile) readField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.Ext6 = v
	}
	return nil
}

func (p *Profile) readField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.UpdateTime = v
	}
	return nil
}

func (p *Profile) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Profile"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := p.writeField16(oprot); err != nil {
		return err
	}
	if err := p.writeField17(oprot); err != nil {
		return err
	}
	if err := p.writeField18(oprot); err != nil {
		return err
	}
	if err := p.writeField19(oprot); err != nil {
		return err
	}
	if err := p.writeField20(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *Profile) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MemberId", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:MemberId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.MemberId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MemberId (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:MemberId: ", p), err)
	}
	return err
}

func (p *Profile) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Name", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Name: ", p), err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Name (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Name: ", p), err)
	}
	return err
}

func (p *Profile) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Avatar", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:Avatar: ", p), err)
	}
	if err := oprot.WriteString(string(p.Avatar)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Avatar (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:Avatar: ", p), err)
	}
	return err
}

func (p *Profile) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Sex", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:Sex: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Sex)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Sex (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:Sex: ", p), err)
	}
	return err
}

func (p *Profile) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("BirthDay", thrift.STRING, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:BirthDay: ", p), err)
	}
	if err := oprot.WriteString(string(p.BirthDay)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.BirthDay (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:BirthDay: ", p), err)
	}
	return err
}

func (p *Profile) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Phone", thrift.STRING, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:Phone: ", p), err)
	}
	if err := oprot.WriteString(string(p.Phone)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Phone (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:Phone: ", p), err)
	}
	return err
}

func (p *Profile) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Address", thrift.STRING, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:Address: ", p), err)
	}
	if err := oprot.WriteString(string(p.Address)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Address (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:Address: ", p), err)
	}
	return err
}

func (p *Profile) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Im", thrift.STRING, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:Im: ", p), err)
	}
	if err := oprot.WriteString(string(p.Im)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Im (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:Im: ", p), err)
	}
	return err
}

func (p *Profile) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Email", thrift.STRING, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:Email: ", p), err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Email (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:Email: ", p), err)
	}
	return err
}

func (p *Profile) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Province", thrift.I32, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:Province: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Province)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Province (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:Province: ", p), err)
	}
	return err
}

func (p *Profile) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("City", thrift.I32, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:City: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.City)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.City (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:City: ", p), err)
	}
	return err
}

func (p *Profile) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("District", thrift.I32, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:District: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.District)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.District (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:District: ", p), err)
	}
	return err
}

func (p *Profile) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Remark", thrift.STRING, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:Remark: ", p), err)
	}
	if err := oprot.WriteString(string(p.Remark)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Remark (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:Remark: ", p), err)
	}
	return err
}

func (p *Profile) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Ext1", thrift.STRING, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:Ext1: ", p), err)
	}
	if err := oprot.WriteString(string(p.Ext1)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Ext1 (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:Ext1: ", p), err)
	}
	return err
}

func (p *Profile) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Ext2", thrift.STRING, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:Ext2: ", p), err)
	}
	if err := oprot.WriteString(string(p.Ext2)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Ext2 (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:Ext2: ", p), err)
	}
	return err
}

func (p *Profile) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Ext3", thrift.STRING, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:Ext3: ", p), err)
	}
	if err := oprot.WriteString(string(p.Ext3)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Ext3 (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:Ext3: ", p), err)
	}
	return err
}

func (p *Profile) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Ext4", thrift.STRING, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:Ext4: ", p), err)
	}
	if err := oprot.WriteString(string(p.Ext4)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Ext4 (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:Ext4: ", p), err)
	}
	return err
}

func (p *Profile) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Ext5", thrift.STRING, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:Ext5: ", p), err)
	}
	if err := oprot.WriteString(string(p.Ext5)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Ext5 (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:Ext5: ", p), err)
	}
	return err
}

func (p *Profile) writeField19(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Ext6", thrift.STRING, 19); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:Ext6: ", p), err)
	}
	if err := oprot.WriteString(string(p.Ext6)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Ext6 (19) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 19:Ext6: ", p), err)
	}
	return err
}

func (p *Profile) writeField20(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("UpdateTime", thrift.I64, 20); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:UpdateTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.UpdateTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.UpdateTime (20) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 20:UpdateTime: ", p), err)
	}
	return err
}

func (p *Profile) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Profile(%+v)", *p)
}

// Attributes:
//  - MemberId
//  - Integral
//  - FreezeIntegral
//  - Balance
//  - FreezeBalance
//  - ExpiredBalance
//  - PresentBalance
//  - FreezePresent
//  - ExpiredPresent
//  - TotalPresentFee
//  - FlowBalance
//  - GrowBalance
//  - GrowAmount
//  - GrowEarnings
//  - GrowTotalEarnings
//  - TotalConsumption
//  - TotalCharge
//  - TotalPay
//  - PriorityPay
//  - UpdateTime
type Account struct {
	MemberId          int32   `thrift:"MemberId,1" json:"MemberId"`
	Integral          int64   `thrift:"Integral,2" json:"Integral"`
	FreezeIntegral    int64   `thrift:"FreezeIntegral,3" json:"FreezeIntegral"`
	Balance           float64 `thrift:"Balance,4" json:"Balance"`
	FreezeBalance     float64 `thrift:"FreezeBalance,5" json:"FreezeBalance"`
	ExpiredBalance    float64 `thrift:"ExpiredBalance,6" json:"ExpiredBalance"`
	PresentBalance    float64 `thrift:"PresentBalance,7" json:"PresentBalance"`
	FreezePresent     float64 `thrift:"FreezePresent,8" json:"FreezePresent"`
	ExpiredPresent    float64 `thrift:"ExpiredPresent,9" json:"ExpiredPresent"`
	TotalPresentFee   float64 `thrift:"TotalPresentFee,10" json:"TotalPresentFee"`
	FlowBalance       float64 `thrift:"FlowBalance,11" json:"FlowBalance"`
	GrowBalance       float64 `thrift:"GrowBalance,12" json:"GrowBalance"`
	GrowAmount        float64 `thrift:"GrowAmount,13" json:"GrowAmount"`
	GrowEarnings      float64 `thrift:"GrowEarnings,14" json:"GrowEarnings"`
	GrowTotalEarnings float64 `thrift:"GrowTotalEarnings,15" json:"GrowTotalEarnings"`
	TotalConsumption  float64 `thrift:"TotalConsumption,16" json:"TotalConsumption"`
	TotalCharge       float64 `thrift:"TotalCharge,17" json:"TotalCharge"`
	TotalPay          float64 `thrift:"TotalPay,18" json:"TotalPay"`
	PriorityPay       int64   `thrift:"PriorityPay,19" json:"PriorityPay"`
	UpdateTime        int64   `thrift:"UpdateTime,20" json:"UpdateTime"`
}

func NewAccount() *Account {
	return &Account{}
}

func (p *Account) GetMemberId() int32 {
	return p.MemberId
}

func (p *Account) GetIntegral() int64 {
	return p.Integral
}

func (p *Account) GetFreezeIntegral() int64 {
	return p.FreezeIntegral
}

func (p *Account) GetBalance() float64 {
	return p.Balance
}

func (p *Account) GetFreezeBalance() float64 {
	return p.FreezeBalance
}

func (p *Account) GetExpiredBalance() float64 {
	return p.ExpiredBalance
}

func (p *Account) GetPresentBalance() float64 {
	return p.PresentBalance
}

func (p *Account) GetFreezePresent() float64 {
	return p.FreezePresent
}

func (p *Account) GetExpiredPresent() float64 {
	return p.ExpiredPresent
}

func (p *Account) GetTotalPresentFee() float64 {
	return p.TotalPresentFee
}

func (p *Account) GetFlowBalance() float64 {
	return p.FlowBalance
}

func (p *Account) GetGrowBalance() float64 {
	return p.GrowBalance
}

func (p *Account) GetGrowAmount() float64 {
	return p.GrowAmount
}

func (p *Account) GetGrowEarnings() float64 {
	return p.GrowEarnings
}

func (p *Account) GetGrowTotalEarnings() float64 {
	return p.GrowTotalEarnings
}

func (p *Account) GetTotalConsumption() float64 {
	return p.TotalConsumption
}

func (p *Account) GetTotalCharge() float64 {
	return p.TotalCharge
}

func (p *Account) GetTotalPay() float64 {
	return p.TotalPay
}

func (p *Account) GetPriorityPay() int64 {
	return p.PriorityPay
}

func (p *Account) GetUpdateTime() int64 {
	return p.UpdateTime
}
func (p *Account) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.readField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.readField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.readField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.readField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.readField20(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *Account) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.MemberId = v
	}
	return nil
}

func (p *Account) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Integral = v
	}
	return nil
}

func (p *Account) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.FreezeIntegral = v
	}
	return nil
}

func (p *Account) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Balance = v
	}
	return nil
}

func (p *Account) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.FreezeBalance = v
	}
	return nil
}

func (p *Account) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.ExpiredBalance = v
	}
	return nil
}

func (p *Account) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.PresentBalance = v
	}
	return nil
}

func (p *Account) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.FreezePresent = v
	}
	return nil
}

func (p *Account) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.ExpiredPresent = v
	}
	return nil
}

func (p *Account) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.TotalPresentFee = v
	}
	return nil
}

func (p *Account) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.FlowBalance = v
	}
	return nil
}

func (p *Account) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.GrowBalance = v
	}
	return nil
}

func (p *Account) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.GrowAmount = v
	}
	return nil
}

func (p *Account) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.GrowEarnings = v
	}
	return nil
}

func (p *Account) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.GrowTotalEarnings = v
	}
	return nil
}

func (p *Account) readField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.TotalConsumption = v
	}
	return nil
}

func (p *Account) readField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.TotalCharge = v
	}
	return nil
}

func (p *Account) readField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.TotalPay = v
	}
	return nil
}

func (p *Account) readField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.PriorityPay = v
	}
	return nil
}

func (p *Account) readField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.UpdateTime = v
	}
	return nil
}

func (p *Account) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Account"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := p.writeField16(oprot); err != nil {
		return err
	}
	if err := p.writeField17(oprot); err != nil {
		return err
	}
	if err := p.writeField18(oprot); err != nil {
		return err
	}
	if err := p.writeField19(oprot); err != nil {
		return err
	}
	if err := p.writeField20(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *Account) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MemberId", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:MemberId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.MemberId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MemberId (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:MemberId: ", p), err)
	}
	return err
}

func (p *Account) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Integral", thrift.I64, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Integral: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.Integral)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Integral (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Integral: ", p), err)
	}
	return err
}

func (p *Account) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("FreezeIntegral", thrift.I64, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:FreezeIntegral: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.FreezeIntegral)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.FreezeIntegral (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:FreezeIntegral: ", p), err)
	}
	return err
}

func (p *Account) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Balance", thrift.DOUBLE, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:Balance: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.Balance)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Balance (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:Balance: ", p), err)
	}
	return err
}

func (p *Account) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("FreezeBalance", thrift.DOUBLE, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:FreezeBalance: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.FreezeBalance)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.FreezeBalance (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:FreezeBalance: ", p), err)
	}
	return err
}

func (p *Account) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ExpiredBalance", thrift.DOUBLE, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:ExpiredBalance: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.ExpiredBalance)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.ExpiredBalance (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:ExpiredBalance: ", p), err)
	}
	return err
}

func (p *Account) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PresentBalance", thrift.DOUBLE, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:PresentBalance: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.PresentBalance)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.PresentBalance (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:PresentBalance: ", p), err)
	}
	return err
}

func (p *Account) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("FreezePresent", thrift.DOUBLE, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:FreezePresent: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.FreezePresent)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.FreezePresent (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:FreezePresent: ", p), err)
	}
	return err
}

func (p *Account) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ExpiredPresent", thrift.DOUBLE, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:ExpiredPresent: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.ExpiredPresent)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.ExpiredPresent (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:ExpiredPresent: ", p), err)
	}
	return err
}

func (p *Account) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TotalPresentFee", thrift.DOUBLE, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:TotalPresentFee: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.TotalPresentFee)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TotalPresentFee (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:TotalPresentFee: ", p), err)
	}
	return err
}

func (p *Account) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("FlowBalance", thrift.DOUBLE, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:FlowBalance: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.FlowBalance)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.FlowBalance (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:FlowBalance: ", p), err)
	}
	return err
}

func (p *Account) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("GrowBalance", thrift.DOUBLE, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:GrowBalance: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.GrowBalance)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.GrowBalance (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:GrowBalance: ", p), err)
	}
	return err
}

func (p *Account) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("GrowAmount", thrift.DOUBLE, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:GrowAmount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.GrowAmount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.GrowAmount (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:GrowAmount: ", p), err)
	}
	return err
}

func (p *Account) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("GrowEarnings", thrift.DOUBLE, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:GrowEarnings: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.GrowEarnings)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.GrowEarnings (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:GrowEarnings: ", p), err)
	}
	return err
}

func (p *Account) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("GrowTotalEarnings", thrift.DOUBLE, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:GrowTotalEarnings: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.GrowTotalEarnings)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.GrowTotalEarnings (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:GrowTotalEarnings: ", p), err)
	}
	return err
}

func (p *Account) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TotalConsumption", thrift.DOUBLE, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:TotalConsumption: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.TotalConsumption)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TotalConsumption (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:TotalConsumption: ", p), err)
	}
	return err
}

func (p *Account) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TotalCharge", thrift.DOUBLE, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:TotalCharge: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.TotalCharge)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TotalCharge (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:TotalCharge: ", p), err)
	}
	return err
}

func (p *Account) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TotalPay", thrift.DOUBLE, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:TotalPay: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.TotalPay)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TotalPay (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:TotalPay: ", p), err)
	}
	return err
}

func (p *Account) writeField19(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PriorityPay", thrift.I64, 19); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:PriorityPay: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.PriorityPay)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.PriorityPay (19) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 19:PriorityPay: ", p), err)
	}
	return err
}

func (p *Account) writeField20(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("UpdateTime", thrift.I64, 20); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:UpdateTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.UpdateTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.UpdateTime (20) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 20:UpdateTime: ", p), err)
	}
	return err
}

func (p *Account) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Account(%+v)", *p)
}

// Attributes:
//  - MemberId
//  - CardId
//  - InviterId
//  - InviterStr
//  - RegisterMchId
type MemberRelation struct {
	MemberId      int32  `thrift:"MemberId,1" json:"MemberId"`
	CardId        string `thrift:"CardId,2" json:"CardId"`
	InviterId     int32  `thrift:"InviterId,3" json:"InviterId"`
	InviterStr    string `thrift:"InviterStr,4" json:"InviterStr"`
	RegisterMchId int32  `thrift:"RegisterMchId,5" json:"RegisterMchId"`
}

func NewMemberRelation() *MemberRelation {
	return &MemberRelation{}
}

func (p *MemberRelation) GetMemberId() int32 {
	return p.MemberId
}

func (p *MemberRelation) GetCardId() string {
	return p.CardId
}

func (p *MemberRelation) GetInviterId() int32 {
	return p.InviterId
}

func (p *MemberRelation) GetInviterStr() string {
	return p.InviterStr
}

func (p *MemberRelation) GetRegisterMchId() int32 {
	return p.RegisterMchId
}
func (p *MemberRelation) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *MemberRelation) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.MemberId = v
	}
	return nil
}

func (p *MemberRelation) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.CardId = v
	}
	return nil
}

func (p *MemberRelation) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.InviterId = v
	}
	return nil
}

func (p *MemberRelation) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.InviterStr = v
	}
	return nil
}

func (p *MemberRelation) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.RegisterMchId = v
	}
	return nil
}

func (p *MemberRelation) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("MemberRelation"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *MemberRelation) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MemberId", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:MemberId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.MemberId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MemberId (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:MemberId: ", p), err)
	}
	return err
}

func (p *MemberRelation) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CardId", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:CardId: ", p), err)
	}
	if err := oprot.WriteString(string(p.CardId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.CardId (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:CardId: ", p), err)
	}
	return err
}

func (p *MemberRelation) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("InviterId", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:InviterId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.InviterId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.InviterId (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:InviterId: ", p), err)
	}
	return err
}

func (p *MemberRelation) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("InviterStr", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:InviterStr: ", p), err)
	}
	if err := oprot.WriteString(string(p.InviterStr)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.InviterStr (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:InviterStr: ", p), err)
	}
	return err
}

func (p *MemberRelation) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RegisterMchId", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:RegisterMchId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RegisterMchId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.RegisterMchId (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:RegisterMchId: ", p), err)
	}
	return err
}

func (p *MemberRelation) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MemberRelation(%+v)", *p)
}

// Attributes:
//  - MemberId
//  - RealName
//  - CardId
//  - TrustImage
//  - Reviewed
//  - ReviewTime
//  - Remark
//  - UpdateTime
type TrustedInfo struct {
	MemberId   int32  `thrift:"MemberId,1" json:"MemberId"`
	RealName   string `thrift:"RealName,2" json:"RealName"`
	CardId     string `thrift:"CardId,3" json:"CardId"`
	TrustImage string `thrift:"TrustImage,4" json:"TrustImage"`
	Reviewed   int32  `thrift:"Reviewed,5" json:"Reviewed"`
	ReviewTime int64  `thrift:"ReviewTime,6" json:"ReviewTime"`
	Remark     string `thrift:"Remark,7" json:"Remark"`
	UpdateTime int64  `thrift:"UpdateTime,8" json:"UpdateTime"`
}

func NewTrustedInfo() *TrustedInfo {
	return &TrustedInfo{}
}

func (p *TrustedInfo) GetMemberId() int32 {
	return p.MemberId
}

func (p *TrustedInfo) GetRealName() string {
	return p.RealName
}

func (p *TrustedInfo) GetCardId() string {
	return p.CardId
}

func (p *TrustedInfo) GetTrustImage() string {
	return p.TrustImage
}

func (p *TrustedInfo) GetReviewed() int32 {
	return p.Reviewed
}

func (p *TrustedInfo) GetReviewTime() int64 {
	return p.ReviewTime
}

func (p *TrustedInfo) GetRemark() string {
	return p.Remark
}

func (p *TrustedInfo) GetUpdateTime() int64 {
	return p.UpdateTime
}
func (p *TrustedInfo) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *TrustedInfo) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.MemberId = v
	}
	return nil
}

func (p *TrustedInfo) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.RealName = v
	}
	return nil
}

func (p *TrustedInfo) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.CardId = v
	}
	return nil
}

func (p *TrustedInfo) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.TrustImage = v
	}
	return nil
}

func (p *TrustedInfo) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Reviewed = v
	}
	return nil
}

func (p *TrustedInfo) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.ReviewTime = v
	}
	return nil
}

func (p *TrustedInfo) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.Remark = v
	}
	return nil
}

func (p *TrustedInfo) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.UpdateTime = v
	}
	return nil
}

func (p *TrustedInfo) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("TrustedInfo"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *TrustedInfo) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MemberId", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:MemberId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.MemberId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MemberId (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:MemberId: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RealName", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:RealName: ", p), err)
	}
	if err := oprot.WriteString(string(p.RealName)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.RealName (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:RealName: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CardId", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:CardId: ", p), err)
	}
	if err := oprot.WriteString(string(p.CardId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.CardId (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:CardId: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TrustImage", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:TrustImage: ", p), err)
	}
	if err := oprot.WriteString(string(p.TrustImage)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TrustImage (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:TrustImage: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Reviewed", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:Reviewed: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Reviewed)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Reviewed (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:Reviewed: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ReviewTime", thrift.I64, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:ReviewTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.ReviewTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.ReviewTime (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:ReviewTime: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Remark", thrift.STRING, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:Remark: ", p), err)
	}
	if err := oprot.WriteString(string(p.Remark)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Remark (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:Remark: ", p), err)
	}
	return err
}

func (p *TrustedInfo) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("UpdateTime", thrift.I64, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:UpdateTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.UpdateTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.UpdateTime (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:UpdateTime: ", p), err)
	}
	return err
}

func (p *TrustedInfo) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("TrustedInfo(%+v)", *p)
}

// Attributes:
//  - ID
//  - MemberId
//  - RealName
//  - Phone
//  - Province
//  - City
//  - District
//  - Area
//  - Address
//  - IsDefault
type Address struct {
	ID        int32  `thrift:"Id,1" json:"Id"`
	MemberId  int32  `thrift:"MemberId,2" json:"MemberId"`
	RealName  string `thrift:"RealName,3" json:"RealName"`
	Phone     string `thrift:"Phone,4" json:"Phone"`
	Province  int32  `thrift:"Province,5" json:"Province"`
	City      int32  `thrift:"City,6" json:"City"`
	District  int32  `thrift:"District,7" json:"District"`
	Area      string `thrift:"Area,8" json:"Area"`
	Address   string `thrift:"Address,9" json:"Address"`
	IsDefault int32  `thrift:"IsDefault,10" json:"IsDefault"`
}

func NewAddress() *Address {
	return &Address{}
}

func (p *Address) GetID() int32 {
	return p.ID
}

func (p *Address) GetMemberId() int32 {
	return p.MemberId
}

func (p *Address) GetRealName() string {
	return p.RealName
}

func (p *Address) GetPhone() string {
	return p.Phone
}

func (p *Address) GetProvince() int32 {
	return p.Province
}

func (p *Address) GetCity() int32 {
	return p.City
}

func (p *Address) GetDistrict() int32 {
	return p.District
}

func (p *Address) GetArea() string {
	return p.Area
}

func (p *Address) GetAddress() string {
	return p.Address
}

func (p *Address) GetIsDefault() int32 {
	return p.IsDefault
}
func (p *Address) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *Address) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *Address) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.MemberId = v
	}
	return nil
}

func (p *Address) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.RealName = v
	}
	return nil
}

func (p *Address) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Phone = v
	}
	return nil
}

func (p *Address) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Province = v
	}
	return nil
}

func (p *Address) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.City = v
	}
	return nil
}

func (p *Address) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.District = v
	}
	return nil
}

func (p *Address) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.Area = v
	}
	return nil
}

func (p *Address) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.Address = v
	}
	return nil
}

func (p *Address) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.IsDefault = v
	}
	return nil
}

func (p *Address) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Address"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *Address) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Id: ", p), err)
	}
	return err
}

func (p *Address) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MemberId", thrift.I32, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:MemberId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.MemberId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MemberId (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:MemberId: ", p), err)
	}
	return err
}

func (p *Address) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RealName", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:RealName: ", p), err)
	}
	if err := oprot.WriteString(string(p.RealName)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.RealName (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:RealName: ", p), err)
	}
	return err
}

func (p *Address) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Phone", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:Phone: ", p), err)
	}
	if err := oprot.WriteString(string(p.Phone)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Phone (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:Phone: ", p), err)
	}
	return err
}

func (p *Address) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Province", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:Province: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Province)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Province (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:Province: ", p), err)
	}
	return err
}

func (p *Address) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("City", thrift.I32, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:City: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.City)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.City (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:City: ", p), err)
	}
	return err
}

func (p *Address) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("District", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:District: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.District)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.District (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:District: ", p), err)
	}
	return err
}

func (p *Address) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Area", thrift.STRING, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:Area: ", p), err)
	}
	if err := oprot.WriteString(string(p.Area)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Area (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:Area: ", p), err)
	}
	return err
}

func (p *Address) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Address", thrift.STRING, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:Address: ", p), err)
	}
	if err := oprot.WriteString(string(p.Address)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Address (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:Address: ", p), err)
	}
	return err
}

func (p *Address) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("IsDefault", thrift.I32, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:IsDefault: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsDefault)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.IsDefault (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:IsDefault: ", p), err)
	}
	return err
}

func (p *Address) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Address(%+v)", *p)
}

// Attributes:
//  - ID
//  - TradeNo
//  - VendorId
//  - Type
//  - OrderId
//  - Subject
//  - BuyUser
//  - PaymentUser
//  - TotalFee
//  - BalanceDiscount
//  - IntegralDiscount
//  - SystemDiscount
//  - CouponDiscount
//  - SubAmount
//  - AdjustmentAmount
//  - FinalAmount
//  - PaymentOptFlag
//  - PaymentSign
//  - OuterNo
//  - CreateTime
//  - PaidTime
//  - State
type PaymentOrder struct {
	ID               int32   `thrift:"Id,1" json:"Id"`
	TradeNo          string  `thrift:"TradeNo,2" json:"TradeNo"`
	VendorId         int32   `thrift:"VendorId,3" json:"VendorId"`
	Type             int32   `thrift:"Type,4" json:"Type"`
	OrderId          int32   `thrift:"OrderId,5" json:"OrderId"`
	Subject          string  `thrift:"Subject,6" json:"Subject"`
	BuyUser          int32   `thrift:"BuyUser,7" json:"BuyUser"`
	PaymentUser      int32   `thrift:"PaymentUser,8" json:"PaymentUser"`
	TotalFee         float64 `thrift:"TotalFee,9" json:"TotalFee"`
	BalanceDiscount  float64 `thrift:"BalanceDiscount,10" json:"BalanceDiscount"`
	IntegralDiscount float64 `thrift:"IntegralDiscount,11" json:"IntegralDiscount"`
	SystemDiscount   float64 `thrift:"SystemDiscount,12" json:"SystemDiscount"`
	CouponDiscount   float64 `thrift:"CouponDiscount,13" json:"CouponDiscount"`
	SubAmount        float64 `thrift:"SubAmount,14" json:"SubAmount"`
	AdjustmentAmount float64 `thrift:"AdjustmentAmount,15" json:"AdjustmentAmount"`
	FinalAmount      float64 `thrift:"FinalAmount,16" json:"FinalAmount"`
	PaymentOptFlag   int32   `thrift:"PaymentOptFlag,17" json:"PaymentOptFlag"`
	PaymentSign      int32   `thrift:"PaymentSign,18" json:"PaymentSign"`
	OuterNo          string  `thrift:"OuterNo,19" json:"OuterNo"`
	CreateTime       int64   `thrift:"CreateTime,20" json:"CreateTime"`
	PaidTime         int64   `thrift:"PaidTime,21" json:"PaidTime"`
	State            int32   `thrift:"State,22" json:"State"`
}

func NewPaymentOrder() *PaymentOrder {
	return &PaymentOrder{}
}

func (p *PaymentOrder) GetID() int32 {
	return p.ID
}

func (p *PaymentOrder) GetTradeNo() string {
	return p.TradeNo
}

func (p *PaymentOrder) GetVendorId() int32 {
	return p.VendorId
}

func (p *PaymentOrder) GetType() int32 {
	return p.Type
}

func (p *PaymentOrder) GetOrderId() int32 {
	return p.OrderId
}

func (p *PaymentOrder) GetSubject() string {
	return p.Subject
}

func (p *PaymentOrder) GetBuyUser() int32 {
	return p.BuyUser
}

func (p *PaymentOrder) GetPaymentUser() int32 {
	return p.PaymentUser
}

func (p *PaymentOrder) GetTotalFee() float64 {
	return p.TotalFee
}

func (p *PaymentOrder) GetBalanceDiscount() float64 {
	return p.BalanceDiscount
}

func (p *PaymentOrder) GetIntegralDiscount() float64 {
	return p.IntegralDiscount
}

func (p *PaymentOrder) GetSystemDiscount() float64 {
	return p.SystemDiscount
}

func (p *PaymentOrder) GetCouponDiscount() float64 {
	return p.CouponDiscount
}

func (p *PaymentOrder) GetSubAmount() float64 {
	return p.SubAmount
}

func (p *PaymentOrder) GetAdjustmentAmount() float64 {
	return p.AdjustmentAmount
}

func (p *PaymentOrder) GetFinalAmount() float64 {
	return p.FinalAmount
}

func (p *PaymentOrder) GetPaymentOptFlag() int32 {
	return p.PaymentOptFlag
}

func (p *PaymentOrder) GetPaymentSign() int32 {
	return p.PaymentSign
}

func (p *PaymentOrder) GetOuterNo() string {
	return p.OuterNo
}

func (p *PaymentOrder) GetCreateTime() int64 {
	return p.CreateTime
}

func (p *PaymentOrder) GetPaidTime() int64 {
	return p.PaidTime
}

func (p *PaymentOrder) GetState() int32 {
	return p.State
}
func (p *PaymentOrder) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.readField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.readField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.readField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.readField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.readField20(iprot); err != nil {
				return err
			}
		case 21:
			if err := p.readField21(iprot); err != nil {
				return err
			}
		case 22:
			if err := p.readField22(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *PaymentOrder) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *PaymentOrder) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.TradeNo = v
	}
	return nil
}

func (p *PaymentOrder) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.VendorId = v
	}
	return nil
}

func (p *PaymentOrder) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Type = v
	}
	return nil
}

func (p *PaymentOrder) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.OrderId = v
	}
	return nil
}

func (p *PaymentOrder) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Subject = v
	}
	return nil
}

func (p *PaymentOrder) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.BuyUser = v
	}
	return nil
}

func (p *PaymentOrder) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.PaymentUser = v
	}
	return nil
}

func (p *PaymentOrder) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.TotalFee = v
	}
	return nil
}

func (p *PaymentOrder) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.BalanceDiscount = v
	}
	return nil
}

func (p *PaymentOrder) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.IntegralDiscount = v
	}
	return nil
}

func (p *PaymentOrder) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.SystemDiscount = v
	}
	return nil
}

func (p *PaymentOrder) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.CouponDiscount = v
	}
	return nil
}

func (p *PaymentOrder) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.SubAmount = v
	}
	return nil
}

func (p *PaymentOrder) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.AdjustmentAmount = v
	}
	return nil
}

func (p *PaymentOrder) readField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.FinalAmount = v
	}
	return nil
}

func (p *PaymentOrder) readField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.PaymentOptFlag = v
	}
	return nil
}

func (p *PaymentOrder) readField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.PaymentSign = v
	}
	return nil
}

func (p *PaymentOrder) readField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.OuterNo = v
	}
	return nil
}

func (p *PaymentOrder) readField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.CreateTime = v
	}
	return nil
}

func (p *PaymentOrder) readField21(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 21: ", err)
	} else {
		p.PaidTime = v
	}
	return nil
}

func (p *PaymentOrder) readField22(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 22: ", err)
	} else {
		p.State = v
	}
	return nil
}

func (p *PaymentOrder) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PaymentOrder"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := p.writeField16(oprot); err != nil {
		return err
	}
	if err := p.writeField17(oprot); err != nil {
		return err
	}
	if err := p.writeField18(oprot); err != nil {
		return err
	}
	if err := p.writeField19(oprot); err != nil {
		return err
	}
	if err := p.writeField20(oprot); err != nil {
		return err
	}
	if err := p.writeField21(oprot); err != nil {
		return err
	}
	if err := p.writeField22(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *PaymentOrder) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Id: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TradeNo", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:TradeNo: ", p), err)
	}
	if err := oprot.WriteString(string(p.TradeNo)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TradeNo (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:TradeNo: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("VendorId", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:VendorId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VendorId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.VendorId (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:VendorId: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Type", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:Type: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Type)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Type (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:Type: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("OrderId", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:OrderId: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OrderId)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.OrderId (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:OrderId: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Subject", thrift.STRING, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:Subject: ", p), err)
	}
	if err := oprot.WriteString(string(p.Subject)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Subject (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:Subject: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("BuyUser", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:BuyUser: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BuyUser)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.BuyUser (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:BuyUser: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PaymentUser", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:PaymentUser: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.PaymentUser)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.PaymentUser (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:PaymentUser: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("TotalFee", thrift.DOUBLE, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:TotalFee: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.TotalFee)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.TotalFee (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:TotalFee: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("BalanceDiscount", thrift.DOUBLE, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:BalanceDiscount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.BalanceDiscount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.BalanceDiscount (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:BalanceDiscount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("IntegralDiscount", thrift.DOUBLE, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:IntegralDiscount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.IntegralDiscount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.IntegralDiscount (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:IntegralDiscount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("SystemDiscount", thrift.DOUBLE, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:SystemDiscount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.SystemDiscount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.SystemDiscount (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:SystemDiscount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CouponDiscount", thrift.DOUBLE, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:CouponDiscount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.CouponDiscount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.CouponDiscount (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:CouponDiscount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("SubAmount", thrift.DOUBLE, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:SubAmount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.SubAmount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.SubAmount (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:SubAmount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("AdjustmentAmount", thrift.DOUBLE, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:AdjustmentAmount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.AdjustmentAmount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.AdjustmentAmount (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:AdjustmentAmount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("FinalAmount", thrift.DOUBLE, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:FinalAmount: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.FinalAmount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.FinalAmount (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:FinalAmount: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PaymentOptFlag", thrift.I32, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:PaymentOptFlag: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.PaymentOptFlag)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.PaymentOptFlag (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:PaymentOptFlag: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PaymentSign", thrift.I32, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:PaymentSign: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.PaymentSign)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.PaymentSign (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:PaymentSign: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField19(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("OuterNo", thrift.STRING, 19); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:OuterNo: ", p), err)
	}
	if err := oprot.WriteString(string(p.OuterNo)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.OuterNo (19) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 19:OuterNo: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField20(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CreateTime", thrift.I64, 20); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:CreateTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.CreateTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.CreateTime (20) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 20:CreateTime: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField21(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PaidTime", thrift.I64, 21); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:PaidTime: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.PaidTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.PaidTime (21) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 21:PaidTime: ", p), err)
	}
	return err
}

func (p *PaymentOrder) writeField22(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("State", thrift.I32, 22); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:State: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.State)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.State (22) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 22:State: ", p), err)
	}
	return err
}

func (p *PaymentOrder) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PaymentOrder(%+v)", *p)
}

// Attributes:
//  - Name
//  - Logo
//  - Suspend
//  - SuspendMessage
//  - MchGoodsCategory
//  - MchPageCategory
type PlatformConf struct {
	Name             string `thrift:"Name,1" json:"Name"`
	Logo             string `thrift:"Logo,2" json:"Logo"`
	Suspend          bool   `thrift:"Suspend,3" json:"Suspend"`
	SuspendMessage   string `thrift:"SuspendMessage,4" json:"SuspendMessage"`
	MchGoodsCategory bool   `thrift:"MchGoodsCategory,5" json:"MchGoodsCategory"`
	MchPageCategory  bool   `thrift:"MchPageCategory,6" json:"MchPageCategory"`
}

func NewPlatformConf() *PlatformConf {
	return &PlatformConf{}
}

func (p *PlatformConf) GetName() string {
	return p.Name
}

func (p *PlatformConf) GetLogo() string {
	return p.Logo
}

func (p *PlatformConf) GetSuspend() bool {
	return p.Suspend
}

func (p *PlatformConf) GetSuspendMessage() string {
	return p.SuspendMessage
}

func (p *PlatformConf) GetMchGoodsCategory() bool {
	return p.MchGoodsCategory
}

func (p *PlatformConf) GetMchPageCategory() bool {
	return p.MchPageCategory
}
func (p *PlatformConf) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *PlatformConf) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *PlatformConf) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Logo = v
	}
	return nil
}

func (p *PlatformConf) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Suspend = v
	}
	return nil
}

func (p *PlatformConf) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.SuspendMessage = v
	}
	return nil
}

func (p *PlatformConf) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.MchGoodsCategory = v
	}
	return nil
}

func (p *PlatformConf) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.MchPageCategory = v
	}
	return nil
}

func (p *PlatformConf) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PlatformConf"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *PlatformConf) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Name", thrift.STRING, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Name: ", p), err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Name (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Name: ", p), err)
	}
	return err
}

func (p *PlatformConf) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Logo", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Logo: ", p), err)
	}
	if err := oprot.WriteString(string(p.Logo)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Logo (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Logo: ", p), err)
	}
	return err
}

func (p *PlatformConf) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Suspend", thrift.BOOL, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:Suspend: ", p), err)
	}
	if err := oprot.WriteBool(bool(p.Suspend)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Suspend (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:Suspend: ", p), err)
	}
	return err
}

func (p *PlatformConf) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("SuspendMessage", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:SuspendMessage: ", p), err)
	}
	if err := oprot.WriteString(string(p.SuspendMessage)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.SuspendMessage (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:SuspendMessage: ", p), err)
	}
	return err
}

func (p *PlatformConf) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MchGoodsCategory", thrift.BOOL, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:MchGoodsCategory: ", p), err)
	}
	if err := oprot.WriteBool(bool(p.MchGoodsCategory)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MchGoodsCategory (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:MchGoodsCategory: ", p), err)
	}
	return err
}

func (p *PlatformConf) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("MchPageCategory", thrift.BOOL, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:MchPageCategory: ", p), err)
	}
	if err := oprot.WriteBool(bool(p.MchPageCategory)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.MchPageCategory (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:MchPageCategory: ", p), err)
	}
	return err
}

func (p *PlatformConf) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PlatformConf(%+v)", *p)
}

// Attributes:
//  - ID
//  - Name
//  - ApiUrl
//  - Token
type SsoApp struct {
	ID     int32  `thrift:"Id,1" json:"Id"`
	Name   string `thrift:"Name,2" json:"Name"`
	ApiUrl string `thrift:"ApiUrl,3" json:"ApiUrl"`
	Token  string `thrift:"Token,4" json:"Token"`
}

func NewSsoApp() *SsoApp {
	return &SsoApp{}
}

func (p *SsoApp) GetID() int32 {
	return p.ID
}

func (p *SsoApp) GetName() string {
	return p.Name
}

func (p *SsoApp) GetApiUrl() string {
	return p.ApiUrl
}

func (p *SsoApp) GetToken() string {
	return p.Token
}
func (p *SsoApp) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SsoApp) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *SsoApp) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *SsoApp) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.ApiUrl = v
	}
	return nil
}

func (p *SsoApp) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Token = v
	}
	return nil
}

func (p *SsoApp) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SsoApp"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SsoApp) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Id: ", p), err)
	}
	return err
}

func (p *SsoApp) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Name", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Name: ", p), err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Name (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Name: ", p), err)
	}
	return err
}

func (p *SsoApp) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ApiUrl", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:ApiUrl: ", p), err)
	}
	if err := oprot.WriteString(string(p.ApiUrl)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.ApiUrl (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:ApiUrl: ", p), err)
	}
	return err
}

func (p *SsoApp) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Token", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:Token: ", p), err)
	}
	if err := oprot.WriteString(string(p.Token)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.Token (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:Token: ", p), err)
	}
	return err
}

func (p *SsoApp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SsoApp(%+v)", *p)
}
