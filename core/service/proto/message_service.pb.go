// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// * 消息方式
type EMessageChannel int32

const (
	EMessageChannel__2 EMessageChannel = 0
	// * 站内信
	EMessageChannel_SiteMessage  EMessageChannel = 1
	EMessageChannel_EmailMessage EMessageChannel = 2
	EMessageChannel_SmsMessage   EMessageChannel = 3
)

var EMessageChannel_name = map[int32]string{
	0: "_2",
	1: "SiteMessage",
	2: "EmailMessage",
	3: "SmsMessage",
}
var EMessageChannel_value = map[string]int32{
	"_2":           0,
	"SiteMessage":  1,
	"EmailMessage": 2,
	"SmsMessage":   3,
}

func (x EMessageChannel) String() string {
	return proto.EnumName(EMessageChannel_name, int32(x))
}
func (EMessageChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_service_e27ec06652586b64, []int{0}
}

type SendMessageRequest struct {
	Account              string            `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_service_e27ec06652586b64, []int{0}
}
func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (dst *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(dst, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *SendMessageRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SendMessageRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

// * 通知项
type SNotifyItem struct {
	// * 键
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	// * 发送方式
	NotifyBy int32 `protobuf:"zigzag32,2,opt,name=NotifyBy,proto3" json:"NotifyBy,omitempty"`
	// * 不允许修改发送方式
	ReadonlyBy bool `protobuf:"varint,3,opt,name=ReadonlyBy,proto3" json:"ReadonlyBy,omitempty"`
	// * 模板编号
	TplId int32 `protobuf:"zigzag32,4,opt,name=TplId,proto3" json:"TplId,omitempty"`
	// * 内容
	Content string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	// * 模板包含的标签
	Tags                 map[string]string `protobuf:"bytes,6,rep,name=Tags,proto3" json:"Tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SNotifyItem) Reset()         { *m = SNotifyItem{} }
func (m *SNotifyItem) String() string { return proto.CompactTextString(m) }
func (*SNotifyItem) ProtoMessage()    {}
func (*SNotifyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_service_e27ec06652586b64, []int{1}
}
func (m *SNotifyItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SNotifyItem.Unmarshal(m, b)
}
func (m *SNotifyItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SNotifyItem.Marshal(b, m, deterministic)
}
func (dst *SNotifyItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SNotifyItem.Merge(dst, src)
}
func (m *SNotifyItem) XXX_Size() int {
	return xxx_messageInfo_SNotifyItem.Size(m)
}
func (m *SNotifyItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SNotifyItem.DiscardUnknown(m)
}

var xxx_messageInfo_SNotifyItem proto.InternalMessageInfo

func (m *SNotifyItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SNotifyItem) GetNotifyBy() int32 {
	if m != nil {
		return m.NotifyBy
	}
	return 0
}

func (m *SNotifyItem) GetReadonlyBy() bool {
	if m != nil {
		return m.ReadonlyBy
	}
	return false
}

func (m *SNotifyItem) GetTplId() int32 {
	if m != nil {
		return m.TplId
	}
	return 0
}

func (m *SNotifyItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *SNotifyItem) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*SendMessageRequest)(nil), "SendMessageRequest")
	proto.RegisterMapType((map[string]string)(nil), "SendMessageRequest.DataEntry")
	proto.RegisterType((*SNotifyItem)(nil), "SNotifyItem")
	proto.RegisterMapType((map[string]string)(nil), "SNotifyItem.TagsEntry")
	proto.RegisterEnum("EMessageChannel", EMessageChannel_name, EMessageChannel_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageServiceClient is the client API for MessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageServiceClient interface {
	// * 获取通知项,key
	GetNotifyItem(ctx context.Context, in *String, opts ...grpc.CallOption) (*SNotifyItem, error)
	// * 发送短信
	SendPhoneMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*Result, error)
}

type messageServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageServiceClient(cc *grpc.ClientConn) MessageServiceClient {
	return &messageServiceClient{cc}
}

func (c *messageServiceClient) GetNotifyItem(ctx context.Context, in *String, opts ...grpc.CallOption) (*SNotifyItem, error) {
	out := new(SNotifyItem)
	err := c.cc.Invoke(ctx, "/MessageService/GetNotifyItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) SendPhoneMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MessageService/SendPhoneMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageServiceServer is the server API for MessageService service.
type MessageServiceServer interface {
	// * 获取通知项,key
	GetNotifyItem(context.Context, *String) (*SNotifyItem, error)
	// * 发送短信
	SendPhoneMessage(context.Context, *SendMessageRequest) (*Result, error)
}

func RegisterMessageServiceServer(s *grpc.Server, srv MessageServiceServer) {
	s.RegisterService(&_MessageService_serviceDesc, srv)
}

func _MessageService_GetNotifyItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).GetNotifyItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MessageService/GetNotifyItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).GetNotifyItem(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_SendPhoneMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).SendPhoneMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MessageService/SendPhoneMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).SendPhoneMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MessageService",
	HandlerType: (*MessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNotifyItem",
			Handler:    _MessageService_GetNotifyItem_Handler,
		},
		{
			MethodName: "SendPhoneMessage",
			Handler:    _MessageService_SendPhoneMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message_service.proto",
}

func init() {
	proto.RegisterFile("message_service.proto", fileDescriptor_message_service_e27ec06652586b64)
}

var fileDescriptor_message_service_e27ec06652586b64 = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0xae, 0x93, 0x40,
	0x14, 0xc6, 0x0b, 0xf4, 0x96, 0xdb, 0xc3, 0xf5, 0x5e, 0x1c, 0xff, 0x84, 0x90, 0x68, 0x1a, 0x56,
	0xe4, 0x2e, 0x26, 0x11, 0x17, 0x1a, 0xdd, 0xdd, 0x6b, 0x63, 0x9a, 0xaa, 0x31, 0xd0, 0x95, 0x9b,
	0x66, 0x2c, 0xc7, 0x96, 0x08, 0x43, 0x85, 0x43, 0x13, 0xde, 0xcb, 0x07, 0xf3, 0x11, 0xcc, 0xc0,
	0x50, 0x49, 0x74, 0xe3, 0x8a, 0xf9, 0x9d, 0x6f, 0xce, 0x7c, 0x7c, 0x33, 0x07, 0x9e, 0x14, 0x58,
	0xd7, 0x62, 0x8f, 0xdb, 0x1a, 0xab, 0x53, 0xb6, 0x43, 0x7e, 0xac, 0x4a, 0x2a, 0x7d, 0x87, 0xa8,
	0x3d, 0x6a, 0x08, 0x7e, 0x1a, 0xc0, 0x12, 0x94, 0xe9, 0xc7, 0x7e, 0x6b, 0x8c, 0x3f, 0x1a, 0xac,
	0x89, 0x79, 0x60, 0x8b, 0xdd, 0xae, 0x6c, 0x24, 0x79, 0xc6, 0xc2, 0x08, 0xe7, 0xf1, 0x80, 0x4a,
	0xd1, 0xc7, 0x7a, 0x66, 0xaf, 0x68, 0x64, 0x2f, 0x60, 0x9a, 0x0a, 0x12, 0x9e, 0xb5, 0xb0, 0x42,
	0x27, 0x7a, 0xc6, 0xff, 0x3e, 0x96, 0xbf, 0x13, 0x24, 0x96, 0x92, 0xaa, 0x36, 0xee, 0xb6, 0xfa,
	0xaf, 0x60, 0x7e, 0x2e, 0x31, 0x17, 0xac, 0xef, 0xd8, 0x6a, 0x3f, 0xb5, 0x64, 0x8f, 0xe1, 0xe2,
	0x24, 0xf2, 0x66, 0x70, 0xea, 0xe1, 0x8d, 0xf9, 0xda, 0x08, 0x7e, 0x19, 0xe0, 0x24, 0x9f, 0x4a,
	0xca, 0xbe, 0xb5, 0x2b, 0xc2, 0x42, 0xf5, 0xae, 0xff, 0xf4, 0xae, 0xb1, 0x65, 0x3e, 0x5c, 0xf6,
	0xfa, 0x5d, 0xdb, 0xb5, 0x3f, 0x8c, 0xcf, 0xcc, 0x9e, 0x03, 0xc4, 0x28, 0xd2, 0x52, 0xe6, 0x4a,
	0xb5, 0x16, 0x46, 0x78, 0x19, 0x8f, 0x2a, 0xca, 0x77, 0x73, 0xcc, 0x57, 0xa9, 0x37, 0xed, 0x1a,
	0x7b, 0x50, 0xc9, 0xef, 0x4b, 0x49, 0x28, 0xc9, 0xbb, 0xe8, 0x93, 0x6b, 0x64, 0xb7, 0x30, 0xdd,
	0x88, 0x7d, 0xed, 0xcd, 0xba, 0xe4, 0x4f, 0xf9, 0xe8, 0xcf, 0xb8, 0x12, 0x74, 0x64, 0xb5, 0x54,
	0x91, 0xcf, 0xa5, 0xff, 0x89, 0x7c, 0xfb, 0x01, 0x6e, 0x96, 0xfa, 0x3a, 0xef, 0x0f, 0x42, 0x4a,
	0xcc, 0xd9, 0x0c, 0xcc, 0x6d, 0xe4, 0x4e, 0xd8, 0x0d, 0x38, 0x49, 0x46, 0xa8, 0x55, 0xd7, 0x60,
	0x2e, 0x5c, 0x2d, 0x0b, 0x91, 0xe5, 0x43, 0xc5, 0x64, 0xd7, 0x00, 0x49, 0x51, 0x0f, 0x6c, 0x45,
	0x12, 0xae, 0x35, 0x24, 0xfd, 0x70, 0xb0, 0x10, 0x1e, 0xbc, 0x47, 0x1a, 0xdd, 0xa9, 0xcd, 0x13,
	0xaa, 0x32, 0xb9, 0xf7, 0xaf, 0xc6, 0x81, 0x82, 0x09, 0x8b, 0xc0, 0x55, 0x6f, 0xfb, 0xf9, 0x50,
	0xca, 0xc1, 0x93, 0x3d, 0xfa, 0xc7, 0x73, 0xfb, 0x36, 0x8f, 0xb1, 0x6e, 0x72, 0x0a, 0x26, 0x77,
	0xf3, 0x2f, 0x36, 0x7f, 0xdb, 0x8d, 0xdc, 0xd7, 0x59, 0xf7, 0x79, 0xf9, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0xf3, 0x33, 0x57, 0x9f, 0x02, 0x00, 0x00,
}
