// Code generated by protoc-gen-go. DO NOT EDIT.
// source: item_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SkuRequest struct {
	ItemId               int64    `protobuf:"zigzag64,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	SkuId                int64    `protobuf:"zigzag64,2,opt,name=skuId,proto3" json:"skuId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkuRequest) Reset()         { *m = SkuRequest{} }
func (m *SkuRequest) String() string { return proto.CompactTextString(m) }
func (*SkuRequest) ProtoMessage()    {}
func (*SkuRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_item_service_170a5c38934a4a6b, []int{0}
}
func (m *SkuRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkuRequest.Unmarshal(m, b)
}
func (m *SkuRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkuRequest.Marshal(b, m, deterministic)
}
func (dst *SkuRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkuRequest.Merge(dst, src)
}
func (m *SkuRequest) XXX_Size() int {
	return xxx_messageInfo_SkuRequest.Size(m)
}
func (m *SkuRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SkuRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SkuRequest proto.InternalMessageInfo

func (m *SkuRequest) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *SkuRequest) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

type ItemDetailRequest struct {
	ItemId               int64    `protobuf:"zigzag64,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	IType                int32    `protobuf:"zigzag32,2,opt,name=iType,proto3" json:"iType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemDetailRequest) Reset()         { *m = ItemDetailRequest{} }
func (m *ItemDetailRequest) String() string { return proto.CompactTextString(m) }
func (*ItemDetailRequest) ProtoMessage()    {}
func (*ItemDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_item_service_170a5c38934a4a6b, []int{1}
}
func (m *ItemDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemDetailRequest.Unmarshal(m, b)
}
func (m *ItemDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemDetailRequest.Marshal(b, m, deterministic)
}
func (dst *ItemDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemDetailRequest.Merge(dst, src)
}
func (m *ItemDetailRequest) XXX_Size() int {
	return xxx_messageInfo_ItemDetailRequest.Size(m)
}
func (m *ItemDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ItemDetailRequest proto.InternalMessageInfo

func (m *ItemDetailRequest) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ItemDetailRequest) GetIType() int32 {
	if m != nil {
		return m.IType
	}
	return 0
}

type SOldItem struct {
	ItemId               int64             `protobuf:"zigzag64,1,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	ProductId            int64             `protobuf:"zigzag64,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	PromFlag             int32             `protobuf:"zigzag32,3,opt,name=PromFlag,proto3" json:"PromFlag,omitempty"`
	CatId                int32             `protobuf:"zigzag32,4,opt,name=CatId,proto3" json:"CatId,omitempty"`
	VendorId             int64             `protobuf:"zigzag64,5,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	BrandId              int32             `protobuf:"zigzag32,6,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	ShopId               int64             `protobuf:"zigzag64,7,opt,name=ShopId,proto3" json:"ShopId,omitempty"`
	ShopCatId            int32             `protobuf:"zigzag32,8,opt,name=ShopCatId,proto3" json:"ShopCatId,omitempty"`
	ExpressTid           int32             `protobuf:"zigzag32,9,opt,name=ExpressTid,proto3" json:"ExpressTid,omitempty"`
	Title                string            `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title,omitempty"`
	ShortTitle           string            `protobuf:"bytes,11,opt,name=ShortTitle,proto3" json:"ShortTitle,omitempty"`
	Code                 string            `protobuf:"bytes,12,opt,name=Code,proto3" json:"Code,omitempty"`
	Image                string            `protobuf:"bytes,13,opt,name=Image,proto3" json:"Image,omitempty"`
	IsPresent            int32             `protobuf:"zigzag32,14,opt,name=IsPresent,proto3" json:"IsPresent,omitempty"`
	PriceRange           string            `protobuf:"bytes,15,opt,name=PriceRange,proto3" json:"PriceRange,omitempty"`
	StockNum             int32             `protobuf:"zigzag32,16,opt,name=StockNum,proto3" json:"StockNum,omitempty"`
	SaleNum              int32             `protobuf:"zigzag32,17,opt,name=SaleNum,proto3" json:"SaleNum,omitempty"`
	SkuNum               int32             `protobuf:"zigzag32,18,opt,name=SkuNum,proto3" json:"SkuNum,omitempty"`
	SkuId                int64             `protobuf:"zigzag64,19,opt,name=SkuId,proto3" json:"SkuId,omitempty"`
	Cost                 float64           `protobuf:"fixed64,20,opt,name=Cost,proto3" json:"Cost,omitempty"`
	Price                float64           `protobuf:"fixed64,21,opt,name=Price,proto3" json:"Price,omitempty"`
	RetailPrice          float64           `protobuf:"fixed64,22,opt,name=RetailPrice,proto3" json:"RetailPrice,omitempty"`
	Weight               int32             `protobuf:"zigzag32,23,opt,name=Weight,proto3" json:"Weight,omitempty"`
	Bulk                 int32             `protobuf:"zigzag32,24,opt,name=Bulk,proto3" json:"Bulk,omitempty"`
	ShelveState          int32             `protobuf:"zigzag32,25,opt,name=ShelveState,proto3" json:"ShelveState,omitempty"`
	ReviewState          int32             `protobuf:"zigzag32,26,opt,name=ReviewState,proto3" json:"ReviewState,omitempty"`
	ReviewRemark         string            `protobuf:"bytes,27,opt,name=ReviewRemark,proto3" json:"ReviewRemark,omitempty"`
	SortNum              int32             `protobuf:"zigzag32,28,opt,name=SortNum,proto3" json:"SortNum,omitempty"`
	CreateTime           int64             `protobuf:"zigzag64,29,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           int64             `protobuf:"zigzag64,30,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	PromPrice            float64           `protobuf:"fixed64,31,opt,name=PromPrice,proto3" json:"PromPrice,omitempty"`
	SkuArray             []*SSku           `protobuf:"bytes,32,rep,name=SkuArray,proto3" json:"SkuArray,omitempty"`
	Data                 map[string]string `protobuf:"bytes,33,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SOldItem) Reset()         { *m = SOldItem{} }
func (m *SOldItem) String() string { return proto.CompactTextString(m) }
func (*SOldItem) ProtoMessage()    {}
func (*SOldItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_item_service_170a5c38934a4a6b, []int{2}
}
func (m *SOldItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SOldItem.Unmarshal(m, b)
}
func (m *SOldItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SOldItem.Marshal(b, m, deterministic)
}
func (dst *SOldItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SOldItem.Merge(dst, src)
}
func (m *SOldItem) XXX_Size() int {
	return xxx_messageInfo_SOldItem.Size(m)
}
func (m *SOldItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SOldItem.DiscardUnknown(m)
}

var xxx_messageInfo_SOldItem proto.InternalMessageInfo

func (m *SOldItem) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *SOldItem) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *SOldItem) GetPromFlag() int32 {
	if m != nil {
		return m.PromFlag
	}
	return 0
}

func (m *SOldItem) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *SOldItem) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SOldItem) GetBrandId() int32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *SOldItem) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *SOldItem) GetShopCatId() int32 {
	if m != nil {
		return m.ShopCatId
	}
	return 0
}

func (m *SOldItem) GetExpressTid() int32 {
	if m != nil {
		return m.ExpressTid
	}
	return 0
}

func (m *SOldItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SOldItem) GetShortTitle() string {
	if m != nil {
		return m.ShortTitle
	}
	return ""
}

func (m *SOldItem) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SOldItem) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SOldItem) GetIsPresent() int32 {
	if m != nil {
		return m.IsPresent
	}
	return 0
}

func (m *SOldItem) GetPriceRange() string {
	if m != nil {
		return m.PriceRange
	}
	return ""
}

func (m *SOldItem) GetStockNum() int32 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *SOldItem) GetSaleNum() int32 {
	if m != nil {
		return m.SaleNum
	}
	return 0
}

func (m *SOldItem) GetSkuNum() int32 {
	if m != nil {
		return m.SkuNum
	}
	return 0
}

func (m *SOldItem) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SOldItem) GetCost() float64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *SOldItem) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *SOldItem) GetRetailPrice() float64 {
	if m != nil {
		return m.RetailPrice
	}
	return 0
}

func (m *SOldItem) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *SOldItem) GetBulk() int32 {
	if m != nil {
		return m.Bulk
	}
	return 0
}

func (m *SOldItem) GetShelveState() int32 {
	if m != nil {
		return m.ShelveState
	}
	return 0
}

func (m *SOldItem) GetReviewState() int32 {
	if m != nil {
		return m.ReviewState
	}
	return 0
}

func (m *SOldItem) GetReviewRemark() string {
	if m != nil {
		return m.ReviewRemark
	}
	return ""
}

func (m *SOldItem) GetSortNum() int32 {
	if m != nil {
		return m.SortNum
	}
	return 0
}

func (m *SOldItem) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *SOldItem) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *SOldItem) GetPromPrice() float64 {
	if m != nil {
		return m.PromPrice
	}
	return 0
}

func (m *SOldItem) GetSkuArray() []*SSku {
	if m != nil {
		return m.SkuArray
	}
	return nil
}

func (m *SOldItem) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

// * SKU
type SSku struct {
	SkuId                int64    `protobuf:"zigzag64,1,opt,name=SkuId,proto3" json:"SkuId,omitempty"`
	ItemId               int64    `protobuf:"zigzag64,2,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	ProductId            int64    `protobuf:"zigzag64,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Image                string   `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty"`
	SpecData             string   `protobuf:"bytes,6,opt,name=SpecData,proto3" json:"SpecData,omitempty"`
	SpecWord             string   `protobuf:"bytes,7,opt,name=SpecWord,proto3" json:"SpecWord,omitempty"`
	Code                 string   `protobuf:"bytes,8,opt,name=Code,proto3" json:"Code,omitempty"`
	RetailPrice          float64  `protobuf:"fixed64,9,opt,name=RetailPrice,proto3" json:"RetailPrice,omitempty"`
	Price                float64  `protobuf:"fixed64,10,opt,name=Price,proto3" json:"Price,omitempty"`
	Cost                 float64  `protobuf:"fixed64,11,opt,name=Cost,proto3" json:"Cost,omitempty"`
	Weight               int32    `protobuf:"zigzag32,12,opt,name=Weight,proto3" json:"Weight,omitempty"`
	Bulk                 int32    `protobuf:"zigzag32,13,opt,name=Bulk,proto3" json:"Bulk,omitempty"`
	Stock                int32    `protobuf:"zigzag32,14,opt,name=Stock,proto3" json:"Stock,omitempty"`
	SaleNum              int32    `protobuf:"zigzag32,15,opt,name=SaleNum,proto3" json:"SaleNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSku) Reset()         { *m = SSku{} }
func (m *SSku) String() string { return proto.CompactTextString(m) }
func (*SSku) ProtoMessage()    {}
func (*SSku) Descriptor() ([]byte, []int) {
	return fileDescriptor_item_service_170a5c38934a4a6b, []int{3}
}
func (m *SSku) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSku.Unmarshal(m, b)
}
func (m *SSku) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSku.Marshal(b, m, deterministic)
}
func (dst *SSku) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSku.Merge(dst, src)
}
func (m *SSku) XXX_Size() int {
	return xxx_messageInfo_SSku.Size(m)
}
func (m *SSku) XXX_DiscardUnknown() {
	xxx_messageInfo_SSku.DiscardUnknown(m)
}

var xxx_messageInfo_SSku proto.InternalMessageInfo

func (m *SSku) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SSku) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *SSku) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *SSku) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SSku) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SSku) GetSpecData() string {
	if m != nil {
		return m.SpecData
	}
	return ""
}

func (m *SSku) GetSpecWord() string {
	if m != nil {
		return m.SpecWord
	}
	return ""
}

func (m *SSku) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SSku) GetRetailPrice() float64 {
	if m != nil {
		return m.RetailPrice
	}
	return 0
}

func (m *SSku) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *SSku) GetCost() float64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *SSku) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *SSku) GetBulk() int32 {
	if m != nil {
		return m.Bulk
	}
	return 0
}

func (m *SSku) GetStock() int32 {
	if m != nil {
		return m.Stock
	}
	return 0
}

func (m *SSku) GetSaleNum() int32 {
	if m != nil {
		return m.SaleNum
	}
	return 0
}

// 统一的商品对象
type SUnifiedItem struct {
	ItemId               int64             `protobuf:"zigzag64,1,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	ProductId            int32             `protobuf:"zigzag32,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	CatId                int32             `protobuf:"zigzag32,3,opt,name=CatId,proto3" json:"CatId,omitempty"`
	VendorId             int32             `protobuf:"zigzag32,4,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	BrandId              int32             `protobuf:"zigzag32,5,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	Title                string            `protobuf:"bytes,6,opt,name=Title,proto3" json:"Title,omitempty"`
	Code                 string            `protobuf:"bytes,7,opt,name=Code,proto3" json:"Code,omitempty"`
	Image                string            `protobuf:"bytes,8,opt,name=Image,proto3" json:"Image,omitempty"`
	Price                float64           `protobuf:"fixed64,9,opt,name=Price,proto3" json:"Price,omitempty"`
	PriceRange           string            `protobuf:"bytes,10,opt,name=PriceRange,proto3" json:"PriceRange,omitempty"`
	StockNum             int32             `protobuf:"zigzag32,11,opt,name=StockNum,proto3" json:"StockNum,omitempty"`
	ShelveState          int32             `protobuf:"zigzag32,12,opt,name=ShelveState,proto3" json:"ShelveState,omitempty"`
	ReviewState          int32             `protobuf:"zigzag32,13,opt,name=ReviewState,proto3" json:"ReviewState,omitempty"`
	UpdateTime           int64             `protobuf:"zigzag64,14,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	SkuArray             []*SSku           `protobuf:"bytes,15,rep,name=SkuArray,proto3" json:"SkuArray,omitempty"`
	Data                 map[string]string `protobuf:"bytes,16,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SUnifiedItem) Reset()         { *m = SUnifiedItem{} }
func (m *SUnifiedItem) String() string { return proto.CompactTextString(m) }
func (*SUnifiedItem) ProtoMessage()    {}
func (*SUnifiedItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_item_service_170a5c38934a4a6b, []int{4}
}
func (m *SUnifiedItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SUnifiedItem.Unmarshal(m, b)
}
func (m *SUnifiedItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SUnifiedItem.Marshal(b, m, deterministic)
}
func (dst *SUnifiedItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SUnifiedItem.Merge(dst, src)
}
func (m *SUnifiedItem) XXX_Size() int {
	return xxx_messageInfo_SUnifiedItem.Size(m)
}
func (m *SUnifiedItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SUnifiedItem.DiscardUnknown(m)
}

var xxx_messageInfo_SUnifiedItem proto.InternalMessageInfo

func (m *SUnifiedItem) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *SUnifiedItem) GetProductId() int32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *SUnifiedItem) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *SUnifiedItem) GetVendorId() int32 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SUnifiedItem) GetBrandId() int32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *SUnifiedItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SUnifiedItem) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SUnifiedItem) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SUnifiedItem) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *SUnifiedItem) GetPriceRange() string {
	if m != nil {
		return m.PriceRange
	}
	return ""
}

func (m *SUnifiedItem) GetStockNum() int32 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *SUnifiedItem) GetShelveState() int32 {
	if m != nil {
		return m.ShelveState
	}
	return 0
}

func (m *SUnifiedItem) GetReviewState() int32 {
	if m != nil {
		return m.ReviewState
	}
	return 0
}

func (m *SUnifiedItem) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *SUnifiedItem) GetSkuArray() []*SSku {
	if m != nil {
		return m.SkuArray
	}
	return nil
}

func (m *SUnifiedItem) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*SkuRequest)(nil), "SkuRequest")
	proto.RegisterType((*ItemDetailRequest)(nil), "ItemDetailRequest")
	proto.RegisterType((*SOldItem)(nil), "SOldItem")
	proto.RegisterMapType((map[string]string)(nil), "SOldItem.DataEntry")
	proto.RegisterType((*SSku)(nil), "SSku")
	proto.RegisterType((*SUnifiedItem)(nil), "SUnifiedItem")
	proto.RegisterMapType((map[string]string)(nil), "SUnifiedItem.DataEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ItemServiceClient is the client API for ItemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ItemServiceClient interface {
	// 获取SKU
	GetSku(ctx context.Context, in *SkuRequest, opts ...grpc.CallOption) (*SSku, error)
	// 获取商品的Sku-JSON格式,itemId
	GetItemSkuJson(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*String, error)
	// 获取商品详细数据
	GetItemDetailData(ctx context.Context, in *ItemDetailRequest, opts ...grpc.CallOption) (*String, error)
}

type itemServiceClient struct {
	cc *grpc.ClientConn
}

func NewItemServiceClient(cc *grpc.ClientConn) ItemServiceClient {
	return &itemServiceClient{cc}
}

func (c *itemServiceClient) GetSku(ctx context.Context, in *SkuRequest, opts ...grpc.CallOption) (*SSku, error) {
	out := new(SSku)
	err := c.cc.Invoke(ctx, "/ItemService/GetSku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetItemSkuJson(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/ItemService/GetItemSkuJson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) GetItemDetailData(ctx context.Context, in *ItemDetailRequest, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/ItemService/GetItemDetailData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItemServiceServer is the server API for ItemService service.
type ItemServiceServer interface {
	// 获取SKU
	GetSku(context.Context, *SkuRequest) (*SSku, error)
	// 获取商品的Sku-JSON格式,itemId
	GetItemSkuJson(context.Context, *Int64) (*String, error)
	// 获取商品详细数据
	GetItemDetailData(context.Context, *ItemDetailRequest) (*String, error)
}

func RegisterItemServiceServer(s *grpc.Server, srv ItemServiceServer) {
	s.RegisterService(&_ItemService_serviceDesc, srv)
}

func _ItemService_GetSku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SkuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetSku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetSku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetSku(ctx, req.(*SkuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetItemSkuJson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItemSkuJson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItemSkuJson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItemSkuJson(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_GetItemDetailData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).GetItemDetailData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ItemService/GetItemDetailData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).GetItemDetailData(ctx, req.(*ItemDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ItemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ItemService",
	HandlerType: (*ItemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSku",
			Handler:    _ItemService_GetSku_Handler,
		},
		{
			MethodName: "GetItemSkuJson",
			Handler:    _ItemService_GetItemSkuJson_Handler,
		},
		{
			MethodName: "GetItemDetailData",
			Handler:    _ItemService_GetItemDetailData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "item_service.proto",
}

func init() { proto.RegisterFile("item_service.proto", fileDescriptor_item_service_170a5c38934a4a6b) }

var fileDescriptor_item_service_170a5c38934a4a6b = []byte{
	// 874 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4b, 0x73, 0x1b, 0x45,
	0x10, 0x8e, 0xac, 0xe7, 0x8e, 0xe4, 0x87, 0x26, 0x21, 0x19, 0x44, 0x30, 0x8a, 0x38, 0xe0, 0x2a,
	0xaa, 0xf6, 0x60, 0x28, 0xa0, 0xc2, 0x29, 0x76, 0x42, 0x6a, 0x39, 0x80, 0x6b, 0xd7, 0x21, 0x55,
	0x5c, 0xa8, 0x8d, 0xb6, 0x91, 0xb7, 0xf6, 0x25, 0x66, 0x67, 0x0d, 0xfe, 0x03, 0x5c, 0xf9, 0x85,
	0xfc, 0x09, 0x7e, 0x01, 0xd5, 0xdd, 0xab, 0xdd, 0x91, 0xec, 0xf0, 0xa8, 0xca, 0xc9, 0xf3, 0x7d,
	0x3d, 0xfd, 0x50, 0x4f, 0x7f, 0xed, 0x15, 0x32, 0x36, 0x90, 0xfd, 0x54, 0x82, 0xbe, 0x8e, 0x97,
	0xe0, 0xae, 0x75, 0x61, 0x8a, 0xd9, 0x64, 0x95, 0x16, 0x6f, 0xc2, 0x94, 0xd1, 0xe2, 0xa9, 0x10,
	0x41, 0x52, 0xf9, 0xf0, 0x4b, 0x05, 0xa5, 0x91, 0x0f, 0xc5, 0x00, 0x3d, 0xbc, 0x48, 0x75, 0xe6,
	0x9d, 0x13, 0xe9, 0xd7, 0x48, 0x3e, 0x10, 0xfd, 0x32, 0xa9, 0xbc, 0x48, 0xed, 0x11, 0xcd, 0x60,
	0xf1, 0x4c, 0x4c, 0x3d, 0x03, 0xd9, 0x73, 0x30, 0x61, 0x9c, 0xfe, 0x87, 0x10, 0xf1, 0xe5, 0xcd,
	0x1a, 0x28, 0xc4, 0xd4, 0x67, 0xb0, 0xf8, 0x73, 0x28, 0x46, 0xc1, 0xf7, 0x69, 0x84, 0x71, 0xd0,
	0xd5, 0xdb, 0x72, 0x65, 0x24, 0x1f, 0x0b, 0xe7, 0x42, 0x17, 0x51, 0xb5, 0x34, 0x4d, 0x05, 0x2d,
	0x21, 0x67, 0x62, 0x74, 0xa1, 0x8b, 0xec, 0x9b, 0x34, 0x5c, 0xa9, 0x2e, 0xc5, 0x6e, 0x30, 0x26,
	0x3d, 0x0f, 0xd1, 0xab, 0xc7, 0x49, 0x09, 0xa0, 0xc7, 0x0f, 0x90, 0x47, 0x85, 0xf6, 0x22, 0xd5,
	0xa7, 0x70, 0x0d, 0x96, 0x4a, 0x0c, 0xcf, 0x74, 0x98, 0x47, 0x5e, 0xa4, 0x06, 0xe4, 0xb3, 0x81,
	0x58, 0x5d, 0x70, 0x55, 0xac, 0xbd, 0x48, 0x0d, 0xb9, 0x3a, 0x46, 0x58, 0x1d, 0x9e, 0x38, 0xcf,
	0x88, 0x7c, 0x5a, 0x42, 0x1e, 0x0b, 0xf1, 0xe2, 0xb7, 0xb5, 0x86, 0xb2, 0xbc, 0x8c, 0x23, 0xe5,
	0x90, 0xd9, 0x62, 0xb0, 0xc2, 0xcb, 0xd8, 0xa4, 0xa0, 0xc4, 0xbc, 0x73, 0xe2, 0xf8, 0x0c, 0xd0,
	0x2b, 0xb8, 0x2a, 0xb4, 0x61, 0xd3, 0x98, 0x4c, 0x16, 0x23, 0xa5, 0xe8, 0x9d, 0x17, 0x11, 0xa8,
	0x09, 0x59, 0xe8, 0x8c, 0x91, 0xbc, 0x2c, 0x5c, 0x81, 0xda, 0xe7, 0x48, 0x04, 0xb0, 0x3a, 0xaf,
	0xbc, 0xd0, 0x50, 0x42, 0x6e, 0xd4, 0x01, 0x57, 0xd7, 0x10, 0x98, 0xe7, 0x42, 0xc7, 0x4b, 0xf0,
	0xc3, 0x7c, 0x05, 0xea, 0x90, 0xf3, 0xb4, 0x0c, 0x76, 0x2a, 0x30, 0xc5, 0x32, 0xf9, 0xae, 0xca,
	0xd4, 0x11, 0xf7, 0x76, 0x83, 0xb1, 0x53, 0x41, 0x98, 0x02, 0x9a, 0xa6, 0xdc, 0xa9, 0x1a, 0x52,
	0xa7, 0x92, 0x0a, 0x0d, 0x92, 0x0c, 0x35, 0xc2, 0x0a, 0x03, 0x9a, 0xa2, 0xfb, 0x3c, 0x45, 0x04,
	0xf8, 0xb7, 0x94, 0x46, 0x3d, 0x98, 0x77, 0x4e, 0x3a, 0x3e, 0x9d, 0xf1, 0x26, 0x55, 0xa1, 0xde,
	0x23, 0x92, 0x81, 0x9c, 0x8b, 0xb1, 0x4f, 0xb3, 0xc6, 0xb6, 0x87, 0x64, 0xb3, 0x29, 0xcc, 0xfc,
	0x1a, 0xe2, 0xd5, 0x95, 0x51, 0x8f, 0x38, 0x33, 0x23, 0xcc, 0x71, 0x56, 0xa5, 0x89, 0x52, 0xc4,
	0xd2, 0x19, 0xa3, 0x05, 0x57, 0x90, 0x5e, 0x43, 0x60, 0x42, 0x03, 0xea, 0x7d, 0x32, 0xd9, 0x14,
	0xe7, 0xbb, 0x8e, 0xe1, 0x57, 0xbe, 0x31, 0xe3, 0x1b, 0x16, 0x25, 0x17, 0x62, 0xc2, 0xd0, 0x87,
	0x2c, 0xd4, 0x89, 0xfa, 0x80, 0x3a, 0xb8, 0xc5, 0x51, 0x9f, 0x0a, 0x6d, 0xb0, 0x1d, 0x8f, 0xeb,
	0x3e, 0x31, 0xc4, 0xee, 0x9f, 0x6b, 0x08, 0x0d, 0x5c, 0xc6, 0x19, 0xa8, 0x0f, 0xa9, 0x29, 0x16,
	0x83, 0xf6, 0x57, 0xeb, 0x68, 0x63, 0x3f, 0x66, 0x7b, 0xcb, 0xd4, 0xba, 0xc8, 0xb8, 0x1b, 0x1f,
	0x51, 0x37, 0x5a, 0x42, 0x3e, 0x11, 0xa3, 0x20, 0xa9, 0x9e, 0x69, 0x1d, 0xde, 0xa8, 0xf9, 0xbc,
	0x7b, 0x32, 0x3e, 0xed, 0xbb, 0x01, 0x6a, 0xbd, 0xa1, 0xe5, 0x27, 0xa2, 0xf7, 0x3c, 0x34, 0xa1,
	0x7a, 0x42, 0xe6, 0xfb, 0xee, 0x46, 0x89, 0x2e, 0xb2, 0x2f, 0x72, 0xa3, 0x6f, 0x7c, 0xba, 0x30,
	0xfb, 0x52, 0x38, 0x0d, 0x25, 0x8f, 0x44, 0x37, 0x81, 0x1b, 0xd2, 0xa8, 0xe3, 0xe3, 0x11, 0x9f,
	0xeb, 0x3a, 0x4c, 0x2b, 0xd6, 0xb6, 0xe3, 0x33, 0x78, 0xba, 0xf7, 0x55, 0x67, 0xf1, 0xd7, 0x9e,
	0xe8, 0x61, 0xd2, 0xf6, 0xed, 0x3b, 0xf6, 0xdb, 0xb7, 0x8a, 0xdf, 0x7b, 0xbb, 0xe2, 0xbb, 0xbb,
	0x8a, 0x6f, 0x34, 0xd3, 0xb3, 0x35, 0xd3, 0xcc, 0x7f, 0xdf, 0x9e, 0x7f, 0x9c, 0xe0, 0x35, 0x2c,
	0xe9, 0x67, 0x0e, 0xc8, 0xd0, 0xe0, 0x8d, 0xed, 0x75, 0xa1, 0x59, 0xd3, 0xb5, 0x0d, 0x71, 0xa3,
	0xb0, 0x91, 0xa5, 0xb0, 0x9d, 0xf9, 0x73, 0x6e, 0xcf, 0x5f, 0x33, 0xb7, 0xc2, 0x9e, 0xdb, 0xcd,
	0x84, 0x8f, 0xad, 0x09, 0x6f, 0x27, 0x75, 0x72, 0xe7, 0xa4, 0xee, 0x5b, 0x93, 0x8a, 0xbd, 0x43,
	0xd5, 0xd5, 0xfa, 0x65, 0x60, 0xeb, 0xef, 0x70, 0x4b, 0x7f, 0x8b, 0x3f, 0x7a, 0x62, 0x12, 0xbc,
	0xca, 0xe3, 0x9f, 0x63, 0xf8, 0x9f, 0x8b, 0x75, 0xba, 0xd3, 0x66, 0x5e, 0x6a, 0xdd, 0xb7, 0x2d,
	0x4f, 0xde, 0xaa, 0x77, 0x2e, 0xcf, 0xfe, 0xf6, 0xf2, 0x6c, 0x9e, 0x6c, 0x60, 0x3f, 0xd9, 0xa6,
	0xc9, 0xc3, 0xbb, 0xd6, 0xd8, 0xc8, 0x7e, 0xc6, 0xa6, 0xb1, 0x8e, 0xdd, 0xd8, 0xed, 0xf5, 0x25,
	0xfe, 0x71, 0x7d, 0x8d, 0x77, 0xd6, 0xd7, 0x8e, 0xfc, 0x27, 0xff, 0x2a, 0xff, 0xfd, 0xdb, 0xf2,
	0xdf, 0x16, 0xe8, 0xc1, 0x2d, 0x81, 0xda, 0x12, 0x3c, 0xbc, 0x5b, 0x82, 0x9f, 0xd6, 0x12, 0x3c,
	0x22, 0xf3, 0x23, 0xd7, 0x7e, 0xb7, 0x77, 0x26, 0xc3, 0xd3, 0xdf, 0x3b, 0x62, 0x8c, 0x11, 0x03,
	0xfe, 0x12, 0x90, 0xc7, 0x62, 0xf0, 0x12, 0x0c, 0xea, 0x72, 0xec, 0xb6, 0xff, 0xfe, 0x67, 0x5c,
	0xdd, 0xe2, 0x9e, 0xfc, 0x58, 0x1c, 0xbc, 0x04, 0x43, 0x1e, 0x49, 0xf5, 0x6d, 0x59, 0xe4, 0x72,
	0xe0, 0x7a, 0xb9, 0xf9, 0xe2, 0xf3, 0xd9, 0xd0, 0x0d, 0x8c, 0x8e, 0xf3, 0xd5, 0xe2, 0x9e, 0x3c,
	0x15, 0xd3, 0xfa, 0x12, 0x7f, 0x01, 0x90, 0xa6, 0xa4, 0x7b, 0xeb, 0x93, 0xc0, 0xf2, 0x39, 0x73,
	0x7e, 0x1c, 0xba, 0x5f, 0xd3, 0x97, 0xc7, 0x9b, 0x01, 0xfd, 0xf9, 0xec, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x23, 0xcd, 0x8c, 0x04, 0xa4, 0x08, 0x00, 0x00,
}
