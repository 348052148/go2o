// Code generated by protoc-gen-go. DO NOT EDIT.
// source: member_service.proto

package proto // import "../core/service/proto"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// * 凭据
type ECredentials int32

const (
	ECredentials__1 ECredentials = 0
	// * 用户名
	ECredentials_User ECredentials = 1
	// * 用户代码
	ECredentials_Code ECredentials = 2
	// * 邮箱
	ECredentials_Email ECredentials = 3
	// * 手机号码
	ECredentials_Phone ECredentials = 4
	// * 邀请码
	ECredentials_InviteCode ECredentials = 6
)

var ECredentials_name = map[int32]string{
	0: "_1",
	1: "User",
	2: "Code",
	3: "Email",
	4: "Phone",
	6: "InviteCode",
}
var ECredentials_value = map[string]int32{
	"_1":         0,
	"User":       1,
	"Code":       2,
	"Email":      3,
	"Phone":      4,
	"InviteCode": 6,
}

func (x ECredentials) String() string {
	return proto.EnumName(ECredentials_name, int32(x))
}
func (ECredentials) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{0}
}

type RegisterMemberRequest struct {
	User                 string            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Pwd                  string            `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Flag                 int32             `protobuf:"zigzag32,3,opt,name=flag,proto3" json:"flag,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string            `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string            `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Avatar               string            `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Extend               map[string]string `protobuf:"bytes,8,rep,name=extend,proto3" json:"extend,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegisterMemberRequest) Reset()         { *m = RegisterMemberRequest{} }
func (m *RegisterMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterMemberRequest) ProtoMessage()    {}
func (*RegisterMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{0}
}
func (m *RegisterMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterMemberRequest.Unmarshal(m, b)
}
func (m *RegisterMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterMemberRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterMemberRequest.Merge(dst, src)
}
func (m *RegisterMemberRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterMemberRequest.Size(m)
}
func (m *RegisterMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterMemberRequest proto.InternalMessageInfo

func (m *RegisterMemberRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *RegisterMemberRequest) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *RegisterMemberRequest) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *RegisterMemberRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterMemberRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RegisterMemberRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterMemberRequest) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *RegisterMemberRequest) GetExtend() map[string]string {
	if m != nil {
		return m.Extend
	}
	return nil
}

type LoginRequest struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Pwd                  string   `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Update               bool     `protobuf:"varint,3,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{1}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *LoginRequest) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *LoginRequest) GetUpdate() bool {
	if m != nil {
		return m.Update
	}
	return false
}

type CheckTradePwdRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	TradePwd             string   `protobuf:"bytes,2,opt,name=tradePwd,proto3" json:"tradePwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTradePwdRequest) Reset()         { *m = CheckTradePwdRequest{} }
func (m *CheckTradePwdRequest) String() string { return proto.CompactTextString(m) }
func (*CheckTradePwdRequest) ProtoMessage()    {}
func (*CheckTradePwdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{2}
}
func (m *CheckTradePwdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckTradePwdRequest.Unmarshal(m, b)
}
func (m *CheckTradePwdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckTradePwdRequest.Marshal(b, m, deterministic)
}
func (dst *CheckTradePwdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTradePwdRequest.Merge(dst, src)
}
func (m *CheckTradePwdRequest) XXX_Size() int {
	return xxx_messageInfo_CheckTradePwdRequest.Size(m)
}
func (m *CheckTradePwdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTradePwdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTradePwdRequest proto.InternalMessageInfo

func (m *CheckTradePwdRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *CheckTradePwdRequest) GetTradePwd() string {
	if m != nil {
		return m.TradePwd
	}
	return ""
}

type SwapMemberRequest struct {
	Cred                 ECredentials `protobuf:"varint,1,opt,name=cred,proto3,enum=ECredentials" json:"cred,omitempty"`
	Value                string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SwapMemberRequest) Reset()         { *m = SwapMemberRequest{} }
func (m *SwapMemberRequest) String() string { return proto.CompactTextString(m) }
func (*SwapMemberRequest) ProtoMessage()    {}
func (*SwapMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{3}
}
func (m *SwapMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwapMemberRequest.Unmarshal(m, b)
}
func (m *SwapMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwapMemberRequest.Marshal(b, m, deterministic)
}
func (dst *SwapMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwapMemberRequest.Merge(dst, src)
}
func (m *SwapMemberRequest) XXX_Size() int {
	return xxx_messageInfo_SwapMemberRequest.Size(m)
}
func (m *SwapMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwapMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwapMemberRequest proto.InternalMessageInfo

func (m *SwapMemberRequest) GetCred() ECredentials {
	if m != nil {
		return m.Cred
	}
	return ECredentials__1
}

func (m *SwapMemberRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SMemberLevelListResponse struct {
	List                 []*SMemberLevel `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SMemberLevelListResponse) Reset()         { *m = SMemberLevelListResponse{} }
func (m *SMemberLevelListResponse) String() string { return proto.CompactTextString(m) }
func (*SMemberLevelListResponse) ProtoMessage()    {}
func (*SMemberLevelListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{4}
}
func (m *SMemberLevelListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMemberLevelListResponse.Unmarshal(m, b)
}
func (m *SMemberLevelListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMemberLevelListResponse.Marshal(b, m, deterministic)
}
func (dst *SMemberLevelListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMemberLevelListResponse.Merge(dst, src)
}
func (m *SMemberLevelListResponse) XXX_Size() int {
	return xxx_messageInfo_SMemberLevelListResponse.Size(m)
}
func (m *SMemberLevelListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SMemberLevelListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SMemberLevelListResponse proto.InternalMessageInfo

func (m *SMemberLevelListResponse) GetList() []*SMemberLevel {
	if m != nil {
		return m.List
	}
	return nil
}

type SubmitTrustInfoRequest struct {
	MemberId             int64         `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Info                 *STrustedInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubmitTrustInfoRequest) Reset()         { *m = SubmitTrustInfoRequest{} }
func (m *SubmitTrustInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTrustInfoRequest) ProtoMessage()    {}
func (*SubmitTrustInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{5}
}
func (m *SubmitTrustInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTrustInfoRequest.Unmarshal(m, b)
}
func (m *SubmitTrustInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTrustInfoRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitTrustInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTrustInfoRequest.Merge(dst, src)
}
func (m *SubmitTrustInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTrustInfoRequest.Size(m)
}
func (m *SubmitTrustInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTrustInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTrustInfoRequest proto.InternalMessageInfo

func (m *SubmitTrustInfoRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *SubmitTrustInfoRequest) GetInfo() *STrustedInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ReviewTrustInfoRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	ReviewPass           bool     `protobuf:"varint,2,opt,name=reviewPass,proto3" json:"reviewPass,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewTrustInfoRequest) Reset()         { *m = ReviewTrustInfoRequest{} }
func (m *ReviewTrustInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewTrustInfoRequest) ProtoMessage()    {}
func (*ReviewTrustInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{6}
}
func (m *ReviewTrustInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewTrustInfoRequest.Unmarshal(m, b)
}
func (m *ReviewTrustInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewTrustInfoRequest.Marshal(b, m, deterministic)
}
func (dst *ReviewTrustInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewTrustInfoRequest.Merge(dst, src)
}
func (m *ReviewTrustInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewTrustInfoRequest.Size(m)
}
func (m *ReviewTrustInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewTrustInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewTrustInfoRequest proto.InternalMessageInfo

func (m *ReviewTrustInfoRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ReviewTrustInfoRequest) GetReviewPass() bool {
	if m != nil {
		return m.ReviewPass
	}
	return false
}

func (m *ReviewTrustInfoRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type LockRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Minutes              int32    `protobuf:"zigzag32,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockRequest) Reset()         { *m = LockRequest{} }
func (m *LockRequest) String() string { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()    {}
func (*LockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{7}
}
func (m *LockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockRequest.Unmarshal(m, b)
}
func (m *LockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockRequest.Marshal(b, m, deterministic)
}
func (dst *LockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockRequest.Merge(dst, src)
}
func (m *LockRequest) XXX_Size() int {
	return xxx_messageInfo_LockRequest.Size(m)
}
func (m *LockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockRequest proto.InternalMessageInfo

func (m *LockRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *LockRequest) GetMinutes() int32 {
	if m != nil {
		return m.Minutes
	}
	return 0
}

func (m *LockRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type GrantFlagRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Flag                 int32    `protobuf:"zigzag32,2,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrantFlagRequest) Reset()         { *m = GrantFlagRequest{} }
func (m *GrantFlagRequest) String() string { return proto.CompactTextString(m) }
func (*GrantFlagRequest) ProtoMessage()    {}
func (*GrantFlagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{8}
}
func (m *GrantFlagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrantFlagRequest.Unmarshal(m, b)
}
func (m *GrantFlagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrantFlagRequest.Marshal(b, m, deterministic)
}
func (dst *GrantFlagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantFlagRequest.Merge(dst, src)
}
func (m *GrantFlagRequest) XXX_Size() int {
	return xxx_messageInfo_GrantFlagRequest.Size(m)
}
func (m *GrantFlagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantFlagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GrantFlagRequest proto.InternalMessageInfo

func (m *GrantFlagRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *GrantFlagRequest) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

type SendCodeRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Operation            string   `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	MsgType              string   `protobuf:"bytes,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCodeRequest) Reset()         { *m = SendCodeRequest{} }
func (m *SendCodeRequest) String() string { return proto.CompactTextString(m) }
func (*SendCodeRequest) ProtoMessage()    {}
func (*SendCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{9}
}
func (m *SendCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCodeRequest.Unmarshal(m, b)
}
func (m *SendCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCodeRequest.Marshal(b, m, deterministic)
}
func (dst *SendCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCodeRequest.Merge(dst, src)
}
func (m *SendCodeRequest) XXX_Size() int {
	return xxx_messageInfo_SendCodeRequest.Size(m)
}
func (m *SendCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendCodeRequest proto.InternalMessageInfo

func (m *SendCodeRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *SendCodeRequest) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *SendCodeRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

type CompareCodeRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompareCodeRequest) Reset()         { *m = CompareCodeRequest{} }
func (m *CompareCodeRequest) String() string { return proto.CompactTextString(m) }
func (*CompareCodeRequest) ProtoMessage()    {}
func (*CompareCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{10}
}
func (m *CompareCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompareCodeRequest.Unmarshal(m, b)
}
func (m *CompareCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompareCodeRequest.Marshal(b, m, deterministic)
}
func (dst *CompareCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompareCodeRequest.Merge(dst, src)
}
func (m *CompareCodeRequest) XXX_Size() int {
	return xxx_messageInfo_CompareCodeRequest.Size(m)
}
func (m *CompareCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompareCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompareCodeRequest proto.InternalMessageInfo

func (m *CompareCodeRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *CompareCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type SReceiptsCodeListResponse struct {
	List                 []*SReceiptsCode `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SReceiptsCodeListResponse) Reset()         { *m = SReceiptsCodeListResponse{} }
func (m *SReceiptsCodeListResponse) String() string { return proto.CompactTextString(m) }
func (*SReceiptsCodeListResponse) ProtoMessage()    {}
func (*SReceiptsCodeListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{11}
}
func (m *SReceiptsCodeListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SReceiptsCodeListResponse.Unmarshal(m, b)
}
func (m *SReceiptsCodeListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SReceiptsCodeListResponse.Marshal(b, m, deterministic)
}
func (dst *SReceiptsCodeListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SReceiptsCodeListResponse.Merge(dst, src)
}
func (m *SReceiptsCodeListResponse) XXX_Size() int {
	return xxx_messageInfo_SReceiptsCodeListResponse.Size(m)
}
func (m *SReceiptsCodeListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SReceiptsCodeListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SReceiptsCodeListResponse proto.InternalMessageInfo

func (m *SReceiptsCodeListResponse) GetList() []*SReceiptsCode {
	if m != nil {
		return m.List
	}
	return nil
}

type ReceiptsCodeSaveRequest struct {
	MemberId             int64          `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Code                 *SReceiptsCode `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReceiptsCodeSaveRequest) Reset()         { *m = ReceiptsCodeSaveRequest{} }
func (m *ReceiptsCodeSaveRequest) String() string { return proto.CompactTextString(m) }
func (*ReceiptsCodeSaveRequest) ProtoMessage()    {}
func (*ReceiptsCodeSaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{12}
}
func (m *ReceiptsCodeSaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptsCodeSaveRequest.Unmarshal(m, b)
}
func (m *ReceiptsCodeSaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptsCodeSaveRequest.Marshal(b, m, deterministic)
}
func (dst *ReceiptsCodeSaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptsCodeSaveRequest.Merge(dst, src)
}
func (m *ReceiptsCodeSaveRequest) XXX_Size() int {
	return xxx_messageInfo_ReceiptsCodeSaveRequest.Size(m)
}
func (m *ReceiptsCodeSaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptsCodeSaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptsCodeSaveRequest proto.InternalMessageInfo

func (m *ReceiptsCodeSaveRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ReceiptsCodeSaveRequest) GetCode() *SReceiptsCode {
	if m != nil {
		return m.Code
	}
	return nil
}

type BankCardListResponse struct {
	List                 []*SBankcard `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BankCardListResponse) Reset()         { *m = BankCardListResponse{} }
func (m *BankCardListResponse) String() string { return proto.CompactTextString(m) }
func (*BankCardListResponse) ProtoMessage()    {}
func (*BankCardListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{13}
}
func (m *BankCardListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankCardListResponse.Unmarshal(m, b)
}
func (m *BankCardListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankCardListResponse.Marshal(b, m, deterministic)
}
func (dst *BankCardListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankCardListResponse.Merge(dst, src)
}
func (m *BankCardListResponse) XXX_Size() int {
	return xxx_messageInfo_BankCardListResponse.Size(m)
}
func (m *BankCardListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BankCardListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BankCardListResponse proto.InternalMessageInfo

func (m *BankCardListResponse) GetList() []*SBankcard {
	if m != nil {
		return m.List
	}
	return nil
}

type BankCardSaveRequest struct {
	MemberId             int64      `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Card                 *SBankcard `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BankCardSaveRequest) Reset()         { *m = BankCardSaveRequest{} }
func (m *BankCardSaveRequest) String() string { return proto.CompactTextString(m) }
func (*BankCardSaveRequest) ProtoMessage()    {}
func (*BankCardSaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{14}
}
func (m *BankCardSaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankCardSaveRequest.Unmarshal(m, b)
}
func (m *BankCardSaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankCardSaveRequest.Marshal(b, m, deterministic)
}
func (dst *BankCardSaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankCardSaveRequest.Merge(dst, src)
}
func (m *BankCardSaveRequest) XXX_Size() int {
	return xxx_messageInfo_BankCardSaveRequest.Size(m)
}
func (m *BankCardSaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankCardSaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankCardSaveRequest proto.InternalMessageInfo

func (m *BankCardSaveRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *BankCardSaveRequest) GetCard() *SBankcard {
	if m != nil {
		return m.Card
	}
	return nil
}

type UpdateLevelRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Level                int32    `protobuf:"zigzag32,2,opt,name=level,proto3" json:"level,omitempty"`
	Review               bool     `protobuf:"varint,3,opt,name=review,proto3" json:"review,omitempty"`
	PaymentOrderId       int64    `protobuf:"zigzag64,4,opt,name=paymentOrderId,proto3" json:"paymentOrderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLevelRequest) Reset()         { *m = UpdateLevelRequest{} }
func (m *UpdateLevelRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLevelRequest) ProtoMessage()    {}
func (*UpdateLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{15}
}
func (m *UpdateLevelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLevelRequest.Unmarshal(m, b)
}
func (m *UpdateLevelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLevelRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateLevelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLevelRequest.Merge(dst, src)
}
func (m *UpdateLevelRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLevelRequest.Size(m)
}
func (m *UpdateLevelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLevelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLevelRequest proto.InternalMessageInfo

func (m *UpdateLevelRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *UpdateLevelRequest) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *UpdateLevelRequest) GetReview() bool {
	if m != nil {
		return m.Review
	}
	return false
}

func (m *UpdateLevelRequest) GetPaymentOrderId() int64 {
	if m != nil {
		return m.PaymentOrderId
	}
	return 0
}

type ChangePhoneRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePhoneRequest) Reset()         { *m = ChangePhoneRequest{} }
func (m *ChangePhoneRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePhoneRequest) ProtoMessage()    {}
func (*ChangePhoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{16}
}
func (m *ChangePhoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePhoneRequest.Unmarshal(m, b)
}
func (m *ChangePhoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePhoneRequest.Marshal(b, m, deterministic)
}
func (dst *ChangePhoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePhoneRequest.Merge(dst, src)
}
func (m *ChangePhoneRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePhoneRequest.Size(m)
}
func (m *ChangePhoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePhoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePhoneRequest proto.InternalMessageInfo

func (m *ChangePhoneRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ChangePhoneRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ChangeUserRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Usr                  string   `protobuf:"bytes,2,opt,name=usr,proto3" json:"usr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeUserRequest) Reset()         { *m = ChangeUserRequest{} }
func (m *ChangeUserRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeUserRequest) ProtoMessage()    {}
func (*ChangeUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{17}
}
func (m *ChangeUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeUserRequest.Unmarshal(m, b)
}
func (m *ChangeUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeUserRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeUserRequest.Merge(dst, src)
}
func (m *ChangeUserRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeUserRequest.Size(m)
}
func (m *ChangeUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeUserRequest proto.InternalMessageInfo

func (m *ChangeUserRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ChangeUserRequest) GetUsr() string {
	if m != nil {
		return m.Usr
	}
	return ""
}

type ModifyPwdRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Old                  string   `protobuf:"bytes,2,opt,name=old,proto3" json:"old,omitempty"`
	Pwd                  string   `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModifyPwdRequest) Reset()         { *m = ModifyPwdRequest{} }
func (m *ModifyPwdRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyPwdRequest) ProtoMessage()    {}
func (*ModifyPwdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{18}
}
func (m *ModifyPwdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyPwdRequest.Unmarshal(m, b)
}
func (m *ModifyPwdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyPwdRequest.Marshal(b, m, deterministic)
}
func (dst *ModifyPwdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyPwdRequest.Merge(dst, src)
}
func (m *ModifyPwdRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyPwdRequest.Size(m)
}
func (m *ModifyPwdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyPwdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyPwdRequest proto.InternalMessageInfo

func (m *ModifyPwdRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ModifyPwdRequest) GetOld() string {
	if m != nil {
		return m.Old
	}
	return ""
}

func (m *ModifyPwdRequest) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type ChangeInviterRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	InviterId            int64    `protobuf:"zigzag64,2,opt,name=inviterId,proto3" json:"inviterId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeInviterRequest) Reset()         { *m = ChangeInviterRequest{} }
func (m *ChangeInviterRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeInviterRequest) ProtoMessage()    {}
func (*ChangeInviterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{19}
}
func (m *ChangeInviterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeInviterRequest.Unmarshal(m, b)
}
func (m *ChangeInviterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeInviterRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeInviterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeInviterRequest.Merge(dst, src)
}
func (m *ChangeInviterRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeInviterRequest.Size(m)
}
func (m *ChangeInviterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeInviterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeInviterRequest proto.InternalMessageInfo

func (m *ChangeInviterRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ChangeInviterRequest) GetInviterId() int64 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

type OrderQuantityMapResponse struct {
	Data                 map[int32]int32 `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"zigzag32,1,opt,name=key,proto3" protobuf_val:"zigzag32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrderQuantityMapResponse) Reset()         { *m = OrderQuantityMapResponse{} }
func (m *OrderQuantityMapResponse) String() string { return proto.CompactTextString(m) }
func (*OrderQuantityMapResponse) ProtoMessage()    {}
func (*OrderQuantityMapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{20}
}
func (m *OrderQuantityMapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderQuantityMapResponse.Unmarshal(m, b)
}
func (m *OrderQuantityMapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderQuantityMapResponse.Marshal(b, m, deterministic)
}
func (dst *OrderQuantityMapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderQuantityMapResponse.Merge(dst, src)
}
func (m *OrderQuantityMapResponse) XXX_Size() int {
	return xxx_messageInfo_OrderQuantityMapResponse.Size(m)
}
func (m *OrderQuantityMapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderQuantityMapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderQuantityMapResponse proto.InternalMessageInfo

func (m *OrderQuantityMapResponse) GetData() map[int32]int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTokenRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Reset_               bool     `protobuf:"varint,2,opt,name=reset,proto3" json:"reset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenRequest) Reset()         { *m = GetTokenRequest{} }
func (m *GetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenRequest) ProtoMessage()    {}
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{21}
}
func (m *GetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenRequest.Unmarshal(m, b)
}
func (m *GetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenRequest.Marshal(b, m, deterministic)
}
func (dst *GetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenRequest.Merge(dst, src)
}
func (m *GetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenRequest.Size(m)
}
func (m *GetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenRequest proto.InternalMessageInfo

func (m *GetTokenRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *GetTokenRequest) GetReset_() bool {
	if m != nil {
		return m.Reset_
	}
	return false
}

type PremiumRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	V                    int32    `protobuf:"zigzag32,2,opt,name=v,proto3" json:"v,omitempty"`
	Expires              int64    `protobuf:"zigzag64,3,opt,name=expires,proto3" json:"expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PremiumRequest) Reset()         { *m = PremiumRequest{} }
func (m *PremiumRequest) String() string { return proto.CompactTextString(m) }
func (*PremiumRequest) ProtoMessage()    {}
func (*PremiumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{22}
}
func (m *PremiumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PremiumRequest.Unmarshal(m, b)
}
func (m *PremiumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PremiumRequest.Marshal(b, m, deterministic)
}
func (dst *PremiumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PremiumRequest.Merge(dst, src)
}
func (m *PremiumRequest) XXX_Size() int {
	return xxx_messageInfo_PremiumRequest.Size(m)
}
func (m *PremiumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PremiumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PremiumRequest proto.InternalMessageInfo

func (m *PremiumRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *PremiumRequest) GetV() int32 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *PremiumRequest) GetExpires() int64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

type CheckTokenRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTokenRequest) Reset()         { *m = CheckTokenRequest{} }
func (m *CheckTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CheckTokenRequest) ProtoMessage()    {}
func (*CheckTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{23}
}
func (m *CheckTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckTokenRequest.Unmarshal(m, b)
}
func (m *CheckTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckTokenRequest.Marshal(b, m, deterministic)
}
func (dst *CheckTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTokenRequest.Merge(dst, src)
}
func (m *CheckTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CheckTokenRequest.Size(m)
}
func (m *CheckTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTokenRequest proto.InternalMessageInfo

func (m *CheckTokenRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *CheckTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AddressListResponse struct {
	List                 []*SAddress `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddressListResponse) Reset()         { *m = AddressListResponse{} }
func (m *AddressListResponse) String() string { return proto.CompactTextString(m) }
func (*AddressListResponse) ProtoMessage()    {}
func (*AddressListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{24}
}
func (m *AddressListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressListResponse.Unmarshal(m, b)
}
func (m *AddressListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressListResponse.Marshal(b, m, deterministic)
}
func (dst *AddressListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressListResponse.Merge(dst, src)
}
func (m *AddressListResponse) XXX_Size() int {
	return xxx_messageInfo_AddressListResponse.Size(m)
}
func (m *AddressListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddressListResponse proto.InternalMessageInfo

func (m *AddressListResponse) GetList() []*SAddress {
	if m != nil {
		return m.List
	}
	return nil
}

type GetAddressRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	AddrId               int64    `protobuf:"zigzag64,2,opt,name=addrId,proto3" json:"addrId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressRequest) Reset()         { *m = GetAddressRequest{} }
func (m *GetAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressRequest) ProtoMessage()    {}
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{25}
}
func (m *GetAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressRequest.Unmarshal(m, b)
}
func (m *GetAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressRequest.Marshal(b, m, deterministic)
}
func (dst *GetAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressRequest.Merge(dst, src)
}
func (m *GetAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressRequest.Size(m)
}
func (m *GetAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressRequest proto.InternalMessageInfo

func (m *GetAddressRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *GetAddressRequest) GetAddrId() int64 {
	if m != nil {
		return m.AddrId
	}
	return 0
}

type DepthRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Depth                int32    `protobuf:"zigzag32,2,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepthRequest) Reset()         { *m = DepthRequest{} }
func (m *DepthRequest) String() string { return proto.CompactTextString(m) }
func (*DepthRequest) ProtoMessage()    {}
func (*DepthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{26}
}
func (m *DepthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepthRequest.Unmarshal(m, b)
}
func (m *DepthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepthRequest.Marshal(b, m, deterministic)
}
func (dst *DepthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepthRequest.Merge(dst, src)
}
func (m *DepthRequest) XXX_Size() int {
	return xxx_messageInfo_DepthRequest.Size(m)
}
func (m *DepthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepthRequest proto.InternalMessageInfo

func (m *DepthRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *DepthRequest) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

type InviterIdListResponse struct {
	List                 []int64  `protobuf:"zigzag64,1,rep,packed,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InviterIdListResponse) Reset()         { *m = InviterIdListResponse{} }
func (m *InviterIdListResponse) String() string { return proto.CompactTextString(m) }
func (*InviterIdListResponse) ProtoMessage()    {}
func (*InviterIdListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{27}
}
func (m *InviterIdListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviterIdListResponse.Unmarshal(m, b)
}
func (m *InviterIdListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviterIdListResponse.Marshal(b, m, deterministic)
}
func (dst *InviterIdListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviterIdListResponse.Merge(dst, src)
}
func (m *InviterIdListResponse) XXX_Size() int {
	return xxx_messageInfo_InviterIdListResponse.Size(m)
}
func (m *InviterIdListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InviterIdListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InviterIdListResponse proto.InternalMessageInfo

func (m *InviterIdListResponse) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

type InviteQuantityRequest struct {
	MemberId             int64             `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Data                 map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InviteQuantityRequest) Reset()         { *m = InviteQuantityRequest{} }
func (m *InviteQuantityRequest) String() string { return proto.CompactTextString(m) }
func (*InviteQuantityRequest) ProtoMessage()    {}
func (*InviteQuantityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{28}
}
func (m *InviteQuantityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteQuantityRequest.Unmarshal(m, b)
}
func (m *InviteQuantityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteQuantityRequest.Marshal(b, m, deterministic)
}
func (dst *InviteQuantityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteQuantityRequest.Merge(dst, src)
}
func (m *InviteQuantityRequest) XXX_Size() int {
	return xxx_messageInfo_InviteQuantityRequest.Size(m)
}
func (m *InviteQuantityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteQuantityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InviteQuantityRequest proto.InternalMessageInfo

func (m *InviteQuantityRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *InviteQuantityRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type MemberIdListResponse struct {
	List                 []int64  `protobuf:"zigzag64,1,rep,packed,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberIdListResponse) Reset()         { *m = MemberIdListResponse{} }
func (m *MemberIdListResponse) String() string { return proto.CompactTextString(m) }
func (*MemberIdListResponse) ProtoMessage()    {}
func (*MemberIdListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{29}
}
func (m *MemberIdListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberIdListResponse.Unmarshal(m, b)
}
func (m *MemberIdListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberIdListResponse.Marshal(b, m, deterministic)
}
func (dst *MemberIdListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberIdListResponse.Merge(dst, src)
}
func (m *MemberIdListResponse) XXX_Size() int {
	return xxx_messageInfo_MemberIdListResponse.Size(m)
}
func (m *MemberIdListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberIdListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MemberIdListResponse proto.InternalMessageInfo

func (m *MemberIdListResponse) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

type AccountChangeRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Account              int32    `protobuf:"zigzag32,2,opt,name=account,proto3" json:"account,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Amount               int32    `protobuf:"zigzag32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	OuterNo              string   `protobuf:"bytes,5,opt,name=outerNo,proto3" json:"outerNo,omitempty"`
	Remark               string   `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountChangeRequest) Reset()         { *m = AccountChangeRequest{} }
func (m *AccountChangeRequest) String() string { return proto.CompactTextString(m) }
func (*AccountChangeRequest) ProtoMessage()    {}
func (*AccountChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{30}
}
func (m *AccountChangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountChangeRequest.Unmarshal(m, b)
}
func (m *AccountChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountChangeRequest.Marshal(b, m, deterministic)
}
func (dst *AccountChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountChangeRequest.Merge(dst, src)
}
func (m *AccountChangeRequest) XXX_Size() int {
	return xxx_messageInfo_AccountChangeRequest.Size(m)
}
func (m *AccountChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountChangeRequest proto.InternalMessageInfo

func (m *AccountChangeRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *AccountChangeRequest) GetAccount() int32 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *AccountChangeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AccountChangeRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AccountChangeRequest) GetOuterNo() string {
	if m != nil {
		return m.OuterNo
	}
	return ""
}

func (m *AccountChangeRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type AccountAdjustRequest struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Account              int32    `protobuf:"zigzag32,2,opt,name=account,proto3" json:"account,omitempty"`
	Value                int32    `protobuf:"zigzag32,3,opt,name=value,proto3" json:"value,omitempty"`
	RelateUser           int64    `protobuf:"zigzag64,4,opt,name=relateUser,proto3" json:"relateUser,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountAdjustRequest) Reset()         { *m = AccountAdjustRequest{} }
func (m *AccountAdjustRequest) String() string { return proto.CompactTextString(m) }
func (*AccountAdjustRequest) ProtoMessage()    {}
func (*AccountAdjustRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{31}
}
func (m *AccountAdjustRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountAdjustRequest.Unmarshal(m, b)
}
func (m *AccountAdjustRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountAdjustRequest.Marshal(b, m, deterministic)
}
func (dst *AccountAdjustRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAdjustRequest.Merge(dst, src)
}
func (m *AccountAdjustRequest) XXX_Size() int {
	return xxx_messageInfo_AccountAdjustRequest.Size(m)
}
func (m *AccountAdjustRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAdjustRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAdjustRequest proto.InternalMessageInfo

func (m *AccountAdjustRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *AccountAdjustRequest) GetAccount() int32 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *AccountAdjustRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *AccountAdjustRequest) GetRelateUser() int64 {
	if m != nil {
		return m.RelateUser
	}
	return 0
}

func (m *AccountAdjustRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type B4EAuthRequest struct {
	MemberId             int64             `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Action               string            `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Data                 map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *B4EAuthRequest) Reset()         { *m = B4EAuthRequest{} }
func (m *B4EAuthRequest) String() string { return proto.CompactTextString(m) }
func (*B4EAuthRequest) ProtoMessage()    {}
func (*B4EAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{32}
}
func (m *B4EAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_B4EAuthRequest.Unmarshal(m, b)
}
func (m *B4EAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_B4EAuthRequest.Marshal(b, m, deterministic)
}
func (dst *B4EAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_B4EAuthRequest.Merge(dst, src)
}
func (m *B4EAuthRequest) XXX_Size() int {
	return xxx_messageInfo_B4EAuthRequest.Size(m)
}
func (m *B4EAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_B4EAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_B4EAuthRequest proto.InternalMessageInfo

func (m *B4EAuthRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *B4EAuthRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *B4EAuthRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type PagingAccountInfoRequest struct {
	MemberId             int64          `protobuf:"zigzag64,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	AccountType          int32          `protobuf:"zigzag32,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Params               *SPagingParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PagingAccountInfoRequest) Reset()         { *m = PagingAccountInfoRequest{} }
func (m *PagingAccountInfoRequest) String() string { return proto.CompactTextString(m) }
func (*PagingAccountInfoRequest) ProtoMessage()    {}
func (*PagingAccountInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{33}
}
func (m *PagingAccountInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingAccountInfoRequest.Unmarshal(m, b)
}
func (m *PagingAccountInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingAccountInfoRequest.Marshal(b, m, deterministic)
}
func (dst *PagingAccountInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingAccountInfoRequest.Merge(dst, src)
}
func (m *PagingAccountInfoRequest) XXX_Size() int {
	return xxx_messageInfo_PagingAccountInfoRequest.Size(m)
}
func (m *PagingAccountInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingAccountInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PagingAccountInfoRequest proto.InternalMessageInfo

func (m *PagingAccountInfoRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *PagingAccountInfoRequest) GetAccountType() int32 {
	if m != nil {
		return m.AccountType
	}
	return 0
}

func (m *PagingAccountInfoRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

// * 等级
type SMemberLevel struct {
	ID                   int32    `protobuf:"zigzag32,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	RequireExp           int32    `protobuf:"zigzag32,3,opt,name=RequireExp,proto3" json:"RequireExp,omitempty"`
	ProgramSignal        string   `protobuf:"bytes,4,opt,name=ProgramSignal,proto3" json:"ProgramSignal,omitempty"`
	IsOfficial           int32    `protobuf:"zigzag32,5,opt,name=IsOfficial,proto3" json:"IsOfficial,omitempty"`
	Enabled              int32    `protobuf:"zigzag32,6,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	AllowUpgrade         int32    `protobuf:"zigzag32,7,opt,name=AllowUpgrade,proto3" json:"AllowUpgrade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMemberLevel) Reset()         { *m = SMemberLevel{} }
func (m *SMemberLevel) String() string { return proto.CompactTextString(m) }
func (*SMemberLevel) ProtoMessage()    {}
func (*SMemberLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{34}
}
func (m *SMemberLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMemberLevel.Unmarshal(m, b)
}
func (m *SMemberLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMemberLevel.Marshal(b, m, deterministic)
}
func (dst *SMemberLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMemberLevel.Merge(dst, src)
}
func (m *SMemberLevel) XXX_Size() int {
	return xxx_messageInfo_SMemberLevel.Size(m)
}
func (m *SMemberLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_SMemberLevel.DiscardUnknown(m)
}

var xxx_messageInfo_SMemberLevel proto.InternalMessageInfo

func (m *SMemberLevel) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SMemberLevel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SMemberLevel) GetRequireExp() int32 {
	if m != nil {
		return m.RequireExp
	}
	return 0
}

func (m *SMemberLevel) GetProgramSignal() string {
	if m != nil {
		return m.ProgramSignal
	}
	return ""
}

func (m *SMemberLevel) GetIsOfficial() int32 {
	if m != nil {
		return m.IsOfficial
	}
	return 0
}

func (m *SMemberLevel) GetEnabled() int32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *SMemberLevel) GetAllowUpgrade() int32 {
	if m != nil {
		return m.AllowUpgrade
	}
	return 0
}

// * 会员
type SMember struct {
	// *
	Id int64 `protobuf:"zigzag64,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 用户名
	User string `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	// *
	Pwd string `protobuf:"bytes,3,opt,name=Pwd,proto3" json:"Pwd,omitempty"`
	// *
	TradePwd string `protobuf:"bytes,4,opt,name=TradePwd,proto3" json:"TradePwd,omitempty"`
	// *
	Exp int64 `protobuf:"zigzag64,5,opt,name=Exp,proto3" json:"Exp,omitempty"`
	// *
	Level int32 `protobuf:"zigzag32,6,opt,name=Level,proto3" json:"Level,omitempty"`
	// * 高级用户级别
	PremiumUser int32 `protobuf:"zigzag32,7,opt,name=PremiumUser,proto3" json:"PremiumUser,omitempty"`
	// * 高级用户过期时间
	PremiumExpires int64 `protobuf:"zigzag64,8,opt,name=PremiumExpires,proto3" json:"PremiumExpires,omitempty"`
	// *
	InviteCode string `protobuf:"bytes,9,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	// *
	RegIp string `protobuf:"bytes,10,opt,name=RegIp,proto3" json:"RegIp,omitempty"`
	// *
	RegFrom string `protobuf:"bytes,11,opt,name=RegFrom,proto3" json:"RegFrom,omitempty"`
	// *
	State int32 `protobuf:"zigzag32,12,opt,name=State,proto3" json:"State,omitempty"`
	// * 会员标志
	Flag int32 `protobuf:"zigzag32,13,opt,name=Flag,proto3" json:"Flag,omitempty"`
	// *
	Code string `protobuf:"bytes,14,opt,name=Code,proto3" json:"Code,omitempty"`
	// *
	Avatar string `protobuf:"bytes,15,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	// *
	Phone string `protobuf:"bytes,16,opt,name=Phone,proto3" json:"Phone,omitempty"`
	// *
	Email string `protobuf:"bytes,17,opt,name=Email,proto3" json:"Email,omitempty"`
	// * 昵称
	Name string `protobuf:"bytes,18,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 真实姓名
	RealName string `protobuf:"bytes,19,opt,name=RealName,proto3" json:"RealName,omitempty"`
	// 用户会员密钥
	DynamicToken string `protobuf:"bytes,20,opt,name=DynamicToken,proto3" json:"DynamicToken,omitempty"`
	// * 注册时间
	RegTime int64 `protobuf:"zigzag64,21,opt,name=RegTime,proto3" json:"RegTime,omitempty"`
	// * 最后登录时间
	LastLoginTime        int64    `protobuf:"zigzag64,22,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMember) Reset()         { *m = SMember{} }
func (m *SMember) String() string { return proto.CompactTextString(m) }
func (*SMember) ProtoMessage()    {}
func (*SMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{35}
}
func (m *SMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMember.Unmarshal(m, b)
}
func (m *SMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMember.Marshal(b, m, deterministic)
}
func (dst *SMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMember.Merge(dst, src)
}
func (m *SMember) XXX_Size() int {
	return xxx_messageInfo_SMember.Size(m)
}
func (m *SMember) XXX_DiscardUnknown() {
	xxx_messageInfo_SMember.DiscardUnknown(m)
}

var xxx_messageInfo_SMember proto.InternalMessageInfo

func (m *SMember) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SMember) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SMember) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *SMember) GetTradePwd() string {
	if m != nil {
		return m.TradePwd
	}
	return ""
}

func (m *SMember) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *SMember) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SMember) GetPremiumUser() int32 {
	if m != nil {
		return m.PremiumUser
	}
	return 0
}

func (m *SMember) GetPremiumExpires() int64 {
	if m != nil {
		return m.PremiumExpires
	}
	return 0
}

func (m *SMember) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *SMember) GetRegIp() string {
	if m != nil {
		return m.RegIp
	}
	return ""
}

func (m *SMember) GetRegFrom() string {
	if m != nil {
		return m.RegFrom
	}
	return ""
}

func (m *SMember) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SMember) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *SMember) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SMember) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *SMember) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SMember) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SMember) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *SMember) GetDynamicToken() string {
	if m != nil {
		return m.DynamicToken
	}
	return ""
}

func (m *SMember) GetRegTime() int64 {
	if m != nil {
		return m.RegTime
	}
	return 0
}

func (m *SMember) GetLastLoginTime() int64 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

// * 资料
type SProfile struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Sex                  int32    `protobuf:"zigzag32,4,opt,name=Sex,proto3" json:"Sex,omitempty"`
	BirthDay             string   `protobuf:"bytes,5,opt,name=BirthDay,proto3" json:"BirthDay,omitempty"`
	Phone                string   `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Address              string   `protobuf:"bytes,7,opt,name=Address,proto3" json:"Address,omitempty"`
	Im                   string   `protobuf:"bytes,8,opt,name=Im,proto3" json:"Im,omitempty"`
	Email                string   `protobuf:"bytes,9,opt,name=Email,proto3" json:"Email,omitempty"`
	Province             int32    `protobuf:"zigzag32,10,opt,name=Province,proto3" json:"Province,omitempty"`
	City                 int32    `protobuf:"zigzag32,11,opt,name=City,proto3" json:"City,omitempty"`
	District             int32    `protobuf:"zigzag32,12,opt,name=District,proto3" json:"District,omitempty"`
	Remark               string   `protobuf:"bytes,13,opt,name=Remark,proto3" json:"Remark,omitempty"`
	Ext1                 string   `protobuf:"bytes,14,opt,name=Ext1,proto3" json:"Ext1,omitempty"`
	Ext2                 string   `protobuf:"bytes,15,opt,name=Ext2,proto3" json:"Ext2,omitempty"`
	Ext3                 string   `protobuf:"bytes,16,opt,name=Ext3,proto3" json:"Ext3,omitempty"`
	Ext4                 string   `protobuf:"bytes,17,opt,name=Ext4,proto3" json:"Ext4,omitempty"`
	Ext5                 string   `protobuf:"bytes,18,opt,name=Ext5,proto3" json:"Ext5,omitempty"`
	Ext6                 string   `protobuf:"bytes,19,opt,name=Ext6,proto3" json:"Ext6,omitempty"`
	UpdateTime           int64    `protobuf:"zigzag64,20,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SProfile) Reset()         { *m = SProfile{} }
func (m *SProfile) String() string { return proto.CompactTextString(m) }
func (*SProfile) ProtoMessage()    {}
func (*SProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{36}
}
func (m *SProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SProfile.Unmarshal(m, b)
}
func (m *SProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SProfile.Marshal(b, m, deterministic)
}
func (dst *SProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SProfile.Merge(dst, src)
}
func (m *SProfile) XXX_Size() int {
	return xxx_messageInfo_SProfile.Size(m)
}
func (m *SProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_SProfile.DiscardUnknown(m)
}

var xxx_messageInfo_SProfile proto.InternalMessageInfo

func (m *SProfile) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *SProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SProfile) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *SProfile) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *SProfile) GetBirthDay() string {
	if m != nil {
		return m.BirthDay
	}
	return ""
}

func (m *SProfile) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SProfile) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SProfile) GetIm() string {
	if m != nil {
		return m.Im
	}
	return ""
}

func (m *SProfile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SProfile) GetProvince() int32 {
	if m != nil {
		return m.Province
	}
	return 0
}

func (m *SProfile) GetCity() int32 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *SProfile) GetDistrict() int32 {
	if m != nil {
		return m.District
	}
	return 0
}

func (m *SProfile) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *SProfile) GetExt1() string {
	if m != nil {
		return m.Ext1
	}
	return ""
}

func (m *SProfile) GetExt2() string {
	if m != nil {
		return m.Ext2
	}
	return ""
}

func (m *SProfile) GetExt3() string {
	if m != nil {
		return m.Ext3
	}
	return ""
}

func (m *SProfile) GetExt4() string {
	if m != nil {
		return m.Ext4
	}
	return ""
}

func (m *SProfile) GetExt5() string {
	if m != nil {
		return m.Ext5
	}
	return ""
}

func (m *SProfile) GetExt6() string {
	if m != nil {
		return m.Ext6
	}
	return ""
}

func (m *SProfile) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// * 账户
type SAccount struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	Integral             int64    `protobuf:"zigzag64,2,opt,name=Integral,proto3" json:"Integral,omitempty"`
	FreezeIntegral       int64    `protobuf:"zigzag64,3,opt,name=FreezeIntegral,proto3" json:"FreezeIntegral,omitempty"`
	Balance              float64  `protobuf:"fixed64,4,opt,name=Balance,proto3" json:"Balance,omitempty"`
	FreezeBalance        float64  `protobuf:"fixed64,5,opt,name=FreezeBalance,proto3" json:"FreezeBalance,omitempty"`
	ExpiredBalance       float64  `protobuf:"fixed64,6,opt,name=ExpiredBalance,proto3" json:"ExpiredBalance,omitempty"`
	WalletBalance        float64  `protobuf:"fixed64,7,opt,name=WalletBalance,proto3" json:"WalletBalance,omitempty"`
	FreezeWallet         float64  `protobuf:"fixed64,8,opt,name=FreezeWallet,proto3" json:"FreezeWallet,omitempty"`
	ExpiredWallet        float64  `protobuf:"fixed64,9,opt,name=ExpiredWallet,proto3" json:"ExpiredWallet,omitempty"`
	TotalWalletAmount    float64  `protobuf:"fixed64,10,opt,name=TotalWalletAmount,proto3" json:"TotalWalletAmount,omitempty"`
	FlowBalance          float64  `protobuf:"fixed64,11,opt,name=FlowBalance,proto3" json:"FlowBalance,omitempty"`
	GrowBalance          float64  `protobuf:"fixed64,12,opt,name=GrowBalance,proto3" json:"GrowBalance,omitempty"`
	GrowAmount           float64  `protobuf:"fixed64,13,opt,name=GrowAmount,proto3" json:"GrowAmount,omitempty"`
	GrowEarnings         float64  `protobuf:"fixed64,14,opt,name=GrowEarnings,proto3" json:"GrowEarnings,omitempty"`
	GrowTotalEarnings    float64  `protobuf:"fixed64,15,opt,name=GrowTotalEarnings,proto3" json:"GrowTotalEarnings,omitempty"`
	TotalExpense         float64  `protobuf:"fixed64,16,opt,name=TotalExpense,proto3" json:"TotalExpense,omitempty"`
	TotalCharge          float64  `protobuf:"fixed64,17,opt,name=TotalCharge,proto3" json:"TotalCharge,omitempty"`
	TotalPay             float64  `protobuf:"fixed64,18,opt,name=TotalPay,proto3" json:"TotalPay,omitempty"`
	PriorityPay          int64    `protobuf:"zigzag64,19,opt,name=PriorityPay,proto3" json:"PriorityPay,omitempty"`
	UpdateTime           int64    `protobuf:"zigzag64,20,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SAccount) Reset()         { *m = SAccount{} }
func (m *SAccount) String() string { return proto.CompactTextString(m) }
func (*SAccount) ProtoMessage()    {}
func (*SAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{37}
}
func (m *SAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SAccount.Unmarshal(m, b)
}
func (m *SAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SAccount.Marshal(b, m, deterministic)
}
func (dst *SAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SAccount.Merge(dst, src)
}
func (m *SAccount) XXX_Size() int {
	return xxx_messageInfo_SAccount.Size(m)
}
func (m *SAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_SAccount.DiscardUnknown(m)
}

var xxx_messageInfo_SAccount proto.InternalMessageInfo

func (m *SAccount) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *SAccount) GetIntegral() int64 {
	if m != nil {
		return m.Integral
	}
	return 0
}

func (m *SAccount) GetFreezeIntegral() int64 {
	if m != nil {
		return m.FreezeIntegral
	}
	return 0
}

func (m *SAccount) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *SAccount) GetFreezeBalance() float64 {
	if m != nil {
		return m.FreezeBalance
	}
	return 0
}

func (m *SAccount) GetExpiredBalance() float64 {
	if m != nil {
		return m.ExpiredBalance
	}
	return 0
}

func (m *SAccount) GetWalletBalance() float64 {
	if m != nil {
		return m.WalletBalance
	}
	return 0
}

func (m *SAccount) GetFreezeWallet() float64 {
	if m != nil {
		return m.FreezeWallet
	}
	return 0
}

func (m *SAccount) GetExpiredWallet() float64 {
	if m != nil {
		return m.ExpiredWallet
	}
	return 0
}

func (m *SAccount) GetTotalWalletAmount() float64 {
	if m != nil {
		return m.TotalWalletAmount
	}
	return 0
}

func (m *SAccount) GetFlowBalance() float64 {
	if m != nil {
		return m.FlowBalance
	}
	return 0
}

func (m *SAccount) GetGrowBalance() float64 {
	if m != nil {
		return m.GrowBalance
	}
	return 0
}

func (m *SAccount) GetGrowAmount() float64 {
	if m != nil {
		return m.GrowAmount
	}
	return 0
}

func (m *SAccount) GetGrowEarnings() float64 {
	if m != nil {
		return m.GrowEarnings
	}
	return 0
}

func (m *SAccount) GetGrowTotalEarnings() float64 {
	if m != nil {
		return m.GrowTotalEarnings
	}
	return 0
}

func (m *SAccount) GetTotalExpense() float64 {
	if m != nil {
		return m.TotalExpense
	}
	return 0
}

func (m *SAccount) GetTotalCharge() float64 {
	if m != nil {
		return m.TotalCharge
	}
	return 0
}

func (m *SAccount) GetTotalPay() float64 {
	if m != nil {
		return m.TotalPay
	}
	return 0
}

func (m *SAccount) GetPriorityPay() int64 {
	if m != nil {
		return m.PriorityPay
	}
	return 0
}

func (m *SAccount) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type SComplexMember struct {
	Name           string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Avatar         string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Phone          string `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Exp            int32  `protobuf:"zigzag32,4,opt,name=Exp,proto3" json:"Exp,omitempty"`
	Level          int32  `protobuf:"zigzag32,5,opt,name=Level,proto3" json:"Level,omitempty"`
	LevelName      string `protobuf:"bytes,6,opt,name=LevelName,proto3" json:"LevelName,omitempty"`
	InviteCode     string `protobuf:"bytes,7,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
	TrustAuthState int32  `protobuf:"zigzag32,8,opt,name=TrustAuthState,proto3" json:"TrustAuthState,omitempty"`
	PremiumUser    int32  `protobuf:"zigzag32,9,opt,name=PremiumUser,proto3" json:"PremiumUser,omitempty"`
	Flag           int32  `protobuf:"zigzag32,10,opt,name=Flag,proto3" json:"Flag,omitempty"`
	UpdateTime     int64  `protobuf:"zigzag64,11,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	// * 交易密码是否已设置
	TradePwdHasSet       bool     `protobuf:"varint,12,opt,name=TradePwdHasSet,proto3" json:"TradePwdHasSet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SComplexMember) Reset()         { *m = SComplexMember{} }
func (m *SComplexMember) String() string { return proto.CompactTextString(m) }
func (*SComplexMember) ProtoMessage()    {}
func (*SComplexMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{38}
}
func (m *SComplexMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SComplexMember.Unmarshal(m, b)
}
func (m *SComplexMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SComplexMember.Marshal(b, m, deterministic)
}
func (dst *SComplexMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SComplexMember.Merge(dst, src)
}
func (m *SComplexMember) XXX_Size() int {
	return xxx_messageInfo_SComplexMember.Size(m)
}
func (m *SComplexMember) XXX_DiscardUnknown() {
	xxx_messageInfo_SComplexMember.DiscardUnknown(m)
}

var xxx_messageInfo_SComplexMember proto.InternalMessageInfo

func (m *SComplexMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SComplexMember) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *SComplexMember) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SComplexMember) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *SComplexMember) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SComplexMember) GetLevelName() string {
	if m != nil {
		return m.LevelName
	}
	return ""
}

func (m *SComplexMember) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *SComplexMember) GetTrustAuthState() int32 {
	if m != nil {
		return m.TrustAuthState
	}
	return 0
}

func (m *SComplexMember) GetPremiumUser() int32 {
	if m != nil {
		return m.PremiumUser
	}
	return 0
}

func (m *SComplexMember) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *SComplexMember) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *SComplexMember) GetTradePwdHasSet() bool {
	if m != nil {
		return m.TradePwdHasSet
	}
	return false
}

type SMemberRelation struct {
	MemberId             int64    `protobuf:"zigzag64,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	CardId               string   `protobuf:"bytes,2,opt,name=CardId,proto3" json:"CardId,omitempty"`
	InviterId            int64    `protobuf:"zigzag64,3,opt,name=InviterId,proto3" json:"InviterId,omitempty"`
	InviterStr           string   `protobuf:"bytes,4,opt,name=InviterStr,proto3" json:"InviterStr,omitempty"`
	RegisterMchId        int32    `protobuf:"zigzag32,5,opt,name=RegisterMchId,proto3" json:"RegisterMchId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMemberRelation) Reset()         { *m = SMemberRelation{} }
func (m *SMemberRelation) String() string { return proto.CompactTextString(m) }
func (*SMemberRelation) ProtoMessage()    {}
func (*SMemberRelation) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{39}
}
func (m *SMemberRelation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMemberRelation.Unmarshal(m, b)
}
func (m *SMemberRelation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMemberRelation.Marshal(b, m, deterministic)
}
func (dst *SMemberRelation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMemberRelation.Merge(dst, src)
}
func (m *SMemberRelation) XXX_Size() int {
	return xxx_messageInfo_SMemberRelation.Size(m)
}
func (m *SMemberRelation) XXX_DiscardUnknown() {
	xxx_messageInfo_SMemberRelation.DiscardUnknown(m)
}

var xxx_messageInfo_SMemberRelation proto.InternalMessageInfo

func (m *SMemberRelation) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *SMemberRelation) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *SMemberRelation) GetInviterId() int64 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

func (m *SMemberRelation) GetInviterStr() string {
	if m != nil {
		return m.InviterStr
	}
	return ""
}

func (m *SMemberRelation) GetRegisterMchId() int32 {
	if m != nil {
		return m.RegisterMchId
	}
	return 0
}

// * 实名认证信息
type STrustedInfo struct {
	// * 真实姓名
	RealName string `protobuf:"bytes,1,opt,name=RealName,proto3" json:"RealName,omitempty"`
	// * 国家代码,如:CN
	CountryCode string `protobuf:"bytes,2,opt,name=CountryCode,proto3" json:"CountryCode,omitempty"`
	// * 证件类型
	CardType int32 `protobuf:"zigzag32,3,opt,name=CardType,proto3" json:"CardType,omitempty"`
	// * 证件号码
	CardId string `protobuf:"bytes,4,opt,name=CardId,proto3" json:"CardId,omitempty"`
	// * 证件正面照
	CardImage string `protobuf:"bytes,5,opt,name=CardImage,proto3" json:"CardImage,omitempty"`
	// * 证件反面照
	CardReverseImage string `protobuf:"bytes,6,opt,name=CardReverseImage,proto3" json:"CardReverseImage,omitempty"`
	// * 认证人脸照
	TrustImage string `protobuf:"bytes,7,opt,name=TrustImage,proto3" json:"TrustImage,omitempty"`
	// * 是否人工审核
	ManualReview int32 `protobuf:"zigzag32,8,opt,name=ManualReview,proto3" json:"ManualReview,omitempty"`
	// * 审核状态
	ReviewState int32 `protobuf:"zigzag32,9,opt,name=ReviewState,proto3" json:"ReviewState,omitempty"`
	// * 审核时间
	ReviewTime int64 `protobuf:"zigzag64,10,opt,name=ReviewTime,proto3" json:"ReviewTime,omitempty"`
	// * 备注
	Remark               string   `protobuf:"bytes,11,opt,name=Remark,proto3" json:"Remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *STrustedInfo) Reset()         { *m = STrustedInfo{} }
func (m *STrustedInfo) String() string { return proto.CompactTextString(m) }
func (*STrustedInfo) ProtoMessage()    {}
func (*STrustedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{40}
}
func (m *STrustedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_STrustedInfo.Unmarshal(m, b)
}
func (m *STrustedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_STrustedInfo.Marshal(b, m, deterministic)
}
func (dst *STrustedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_STrustedInfo.Merge(dst, src)
}
func (m *STrustedInfo) XXX_Size() int {
	return xxx_messageInfo_STrustedInfo.Size(m)
}
func (m *STrustedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_STrustedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_STrustedInfo proto.InternalMessageInfo

func (m *STrustedInfo) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *STrustedInfo) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *STrustedInfo) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

func (m *STrustedInfo) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *STrustedInfo) GetCardImage() string {
	if m != nil {
		return m.CardImage
	}
	return ""
}

func (m *STrustedInfo) GetCardReverseImage() string {
	if m != nil {
		return m.CardReverseImage
	}
	return ""
}

func (m *STrustedInfo) GetTrustImage() string {
	if m != nil {
		return m.TrustImage
	}
	return ""
}

func (m *STrustedInfo) GetManualReview() int32 {
	if m != nil {
		return m.ManualReview
	}
	return 0
}

func (m *STrustedInfo) GetReviewState() int32 {
	if m != nil {
		return m.ReviewState
	}
	return 0
}

func (m *STrustedInfo) GetReviewTime() int64 {
	if m != nil {
		return m.ReviewTime
	}
	return 0
}

func (m *STrustedInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type SAddress struct {
	ID int64 `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// * 收货人姓名
	ConsigneeName string `protobuf:"bytes,2,opt,name=ConsigneeName,proto3" json:"ConsigneeName,omitempty"`
	// * 收货人电话
	ConsigneePhone       string   `protobuf:"bytes,3,opt,name=ConsigneePhone,proto3" json:"ConsigneePhone,omitempty"`
	Province             int32    `protobuf:"zigzag32,4,opt,name=Province,proto3" json:"Province,omitempty"`
	City                 int32    `protobuf:"zigzag32,5,opt,name=City,proto3" json:"City,omitempty"`
	District             int32    `protobuf:"zigzag32,6,opt,name=District,proto3" json:"District,omitempty"`
	Area                 string   `protobuf:"bytes,7,opt,name=Area,proto3" json:"Area,omitempty"`
	DetailAddress        string   `protobuf:"bytes,8,opt,name=DetailAddress,proto3" json:"DetailAddress,omitempty"`
	IsDefault            int32    `protobuf:"zigzag32,9,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SAddress) Reset()         { *m = SAddress{} }
func (m *SAddress) String() string { return proto.CompactTextString(m) }
func (*SAddress) ProtoMessage()    {}
func (*SAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{41}
}
func (m *SAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SAddress.Unmarshal(m, b)
}
func (m *SAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SAddress.Marshal(b, m, deterministic)
}
func (dst *SAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SAddress.Merge(dst, src)
}
func (m *SAddress) XXX_Size() int {
	return xxx_messageInfo_SAddress.Size(m)
}
func (m *SAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_SAddress.DiscardUnknown(m)
}

var xxx_messageInfo_SAddress proto.InternalMessageInfo

func (m *SAddress) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SAddress) GetConsigneeName() string {
	if m != nil {
		return m.ConsigneeName
	}
	return ""
}

func (m *SAddress) GetConsigneePhone() string {
	if m != nil {
		return m.ConsigneePhone
	}
	return ""
}

func (m *SAddress) GetProvince() int32 {
	if m != nil {
		return m.Province
	}
	return 0
}

func (m *SAddress) GetCity() int32 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *SAddress) GetDistrict() int32 {
	if m != nil {
		return m.District
	}
	return 0
}

func (m *SAddress) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *SAddress) GetDetailAddress() string {
	if m != nil {
		return m.DetailAddress
	}
	return ""
}

func (m *SAddress) GetIsDefault() int32 {
	if m != nil {
		return m.IsDefault
	}
	return 0
}

// * 收款码
type SReceiptsCode struct {
	// * 账户标识,如:alipay
	Identity string `protobuf:"bytes,1,opt,name=Identity,proto3" json:"Identity,omitempty"`
	// * 账户名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// * 账号
	AccountId string `protobuf:"bytes,3,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	// * 收款码地址
	CodeUrl string `protobuf:"bytes,4,opt,name=CodeUrl,proto3" json:"CodeUrl,omitempty"`
	// * 是否启用
	State                int32    `protobuf:"zigzag32,5,opt,name=State,proto3" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SReceiptsCode) Reset()         { *m = SReceiptsCode{} }
func (m *SReceiptsCode) String() string { return proto.CompactTextString(m) }
func (*SReceiptsCode) ProtoMessage()    {}
func (*SReceiptsCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{42}
}
func (m *SReceiptsCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SReceiptsCode.Unmarshal(m, b)
}
func (m *SReceiptsCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SReceiptsCode.Marshal(b, m, deterministic)
}
func (dst *SReceiptsCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SReceiptsCode.Merge(dst, src)
}
func (m *SReceiptsCode) XXX_Size() int {
	return xxx_messageInfo_SReceiptsCode.Size(m)
}
func (m *SReceiptsCode) XXX_DiscardUnknown() {
	xxx_messageInfo_SReceiptsCode.DiscardUnknown(m)
}

var xxx_messageInfo_SReceiptsCode proto.InternalMessageInfo

func (m *SReceiptsCode) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *SReceiptsCode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SReceiptsCode) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *SReceiptsCode) GetCodeUrl() string {
	if m != nil {
		return m.CodeUrl
	}
	return ""
}

func (m *SReceiptsCode) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

// * 会员银行卡
type SBankcard struct {
	// * 编号
	Id int64 `protobuf:"zigzag64,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 银行名称
	BankName string `protobuf:"bytes,2,opt,name=BankName,proto3" json:"BankName,omitempty"`
	// * 账户名
	AccountName string `protobuf:"bytes,3,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	// * 账号
	Account string `protobuf:"bytes,4,opt,name=Account,proto3" json:"Account,omitempty"`
	// * 网点名称
	Network string `protobuf:"bytes,5,opt,name=Network,proto3" json:"Network,omitempty"`
	// * 状态
	State                int32    `protobuf:"zigzag32,6,opt,name=State,proto3" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SBankcard) Reset()         { *m = SBankcard{} }
func (m *SBankcard) String() string { return proto.CompactTextString(m) }
func (*SBankcard) ProtoMessage()    {}
func (*SBankcard) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{43}
}
func (m *SBankcard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SBankcard.Unmarshal(m, b)
}
func (m *SBankcard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SBankcard.Marshal(b, m, deterministic)
}
func (dst *SBankcard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SBankcard.Merge(dst, src)
}
func (m *SBankcard) XXX_Size() int {
	return xxx_messageInfo_SBankcard.Size(m)
}
func (m *SBankcard) XXX_DiscardUnknown() {
	xxx_messageInfo_SBankcard.DiscardUnknown(m)
}

var xxx_messageInfo_SBankcard proto.InternalMessageInfo

func (m *SBankcard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SBankcard) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *SBankcard) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *SBankcard) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *SBankcard) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *SBankcard) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

// 会员等级信息
type SMemberLevelInfo struct {
	// * 等级
	Level int32 `protobuf:"zigzag32,1,opt,name=Level,proto3" json:"Level,omitempty"`
	// * 等级名称
	LevelName string `protobuf:"bytes,2,opt,name=LevelName,proto3" json:"LevelName,omitempty"`
	// * 经验值
	Exp int32 `protobuf:"zigzag32,3,opt,name=Exp,proto3" json:"Exp,omitempty"`
	// * 编程符号
	ProgramSignal string `protobuf:"bytes,4,opt,name=ProgramSignal,proto3" json:"ProgramSignal,omitempty"`
	// * 下一级等级,返回-1表示最高级别
	NextLevel int32 `protobuf:"zigzag32,5,opt,name=NextLevel,proto3" json:"NextLevel,omitempty"`
	// * 下一等级名称
	NextLevelName string `protobuf:"bytes,6,opt,name=NextLevelName,proto3" json:"NextLevelName,omitempty"`
	// * 编程符号
	NextProgramSignal string `protobuf:"bytes,7,opt,name=NextProgramSignal,proto3" json:"NextProgramSignal,omitempty"`
	// * 需要经验值
	RequireExp           int32    `protobuf:"zigzag32,8,opt,name=RequireExp,proto3" json:"RequireExp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMemberLevelInfo) Reset()         { *m = SMemberLevelInfo{} }
func (m *SMemberLevelInfo) String() string { return proto.CompactTextString(m) }
func (*SMemberLevelInfo) ProtoMessage()    {}
func (*SMemberLevelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{44}
}
func (m *SMemberLevelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMemberLevelInfo.Unmarshal(m, b)
}
func (m *SMemberLevelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMemberLevelInfo.Marshal(b, m, deterministic)
}
func (dst *SMemberLevelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMemberLevelInfo.Merge(dst, src)
}
func (m *SMemberLevelInfo) XXX_Size() int {
	return xxx_messageInfo_SMemberLevelInfo.Size(m)
}
func (m *SMemberLevelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SMemberLevelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SMemberLevelInfo proto.InternalMessageInfo

func (m *SMemberLevelInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SMemberLevelInfo) GetLevelName() string {
	if m != nil {
		return m.LevelName
	}
	return ""
}

func (m *SMemberLevelInfo) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *SMemberLevelInfo) GetProgramSignal() string {
	if m != nil {
		return m.ProgramSignal
	}
	return ""
}

func (m *SMemberLevelInfo) GetNextLevel() int32 {
	if m != nil {
		return m.NextLevel
	}
	return 0
}

func (m *SMemberLevelInfo) GetNextLevelName() string {
	if m != nil {
		return m.NextLevelName
	}
	return ""
}

func (m *SMemberLevelInfo) GetNextProgramSignal() string {
	if m != nil {
		return m.NextProgramSignal
	}
	return ""
}

func (m *SMemberLevelInfo) GetRequireExp() int32 {
	if m != nil {
		return m.RequireExp
	}
	return 0
}

// * 订单汇总信息
type SMemberOrderSummary struct {
	// * 待付款订单数量
	AwaitPayment int32 `protobuf:"zigzag32,1,opt,name=AwaitPayment,proto3" json:"AwaitPayment,omitempty"`
	// * 待发货订单数量
	AwaitShipment int32 `protobuf:"zigzag32,2,opt,name=AwaitShipment,proto3" json:"AwaitShipment,omitempty"`
	// * 待收货订单数量
	AwaitReceive int32 `protobuf:"zigzag32,3,opt,name=AwaitReceive,proto3" json:"AwaitReceive,omitempty"`
	// * 已完成订单数量
	Completed            int32    `protobuf:"zigzag32,4,opt,name=Completed,proto3" json:"Completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMemberOrderSummary) Reset()         { *m = SMemberOrderSummary{} }
func (m *SMemberOrderSummary) String() string { return proto.CompactTextString(m) }
func (*SMemberOrderSummary) ProtoMessage()    {}
func (*SMemberOrderSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_member_service_b7eddf4d0dd0d1e3, []int{45}
}
func (m *SMemberOrderSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMemberOrderSummary.Unmarshal(m, b)
}
func (m *SMemberOrderSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMemberOrderSummary.Marshal(b, m, deterministic)
}
func (dst *SMemberOrderSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMemberOrderSummary.Merge(dst, src)
}
func (m *SMemberOrderSummary) XXX_Size() int {
	return xxx_messageInfo_SMemberOrderSummary.Size(m)
}
func (m *SMemberOrderSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_SMemberOrderSummary.DiscardUnknown(m)
}

var xxx_messageInfo_SMemberOrderSummary proto.InternalMessageInfo

func (m *SMemberOrderSummary) GetAwaitPayment() int32 {
	if m != nil {
		return m.AwaitPayment
	}
	return 0
}

func (m *SMemberOrderSummary) GetAwaitShipment() int32 {
	if m != nil {
		return m.AwaitShipment
	}
	return 0
}

func (m *SMemberOrderSummary) GetAwaitReceive() int32 {
	if m != nil {
		return m.AwaitReceive
	}
	return 0
}

func (m *SMemberOrderSummary) GetCompleted() int32 {
	if m != nil {
		return m.Completed
	}
	return 0
}

func init() {
	proto.RegisterType((*RegisterMemberRequest)(nil), "RegisterMemberRequest")
	proto.RegisterMapType((map[string]string)(nil), "RegisterMemberRequest.ExtendEntry")
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*CheckTradePwdRequest)(nil), "CheckTradePwdRequest")
	proto.RegisterType((*SwapMemberRequest)(nil), "SwapMemberRequest")
	proto.RegisterType((*SMemberLevelListResponse)(nil), "SMemberLevelListResponse")
	proto.RegisterType((*SubmitTrustInfoRequest)(nil), "SubmitTrustInfoRequest")
	proto.RegisterType((*ReviewTrustInfoRequest)(nil), "ReviewTrustInfoRequest")
	proto.RegisterType((*LockRequest)(nil), "LockRequest")
	proto.RegisterType((*GrantFlagRequest)(nil), "GrantFlagRequest")
	proto.RegisterType((*SendCodeRequest)(nil), "SendCodeRequest")
	proto.RegisterType((*CompareCodeRequest)(nil), "CompareCodeRequest")
	proto.RegisterType((*SReceiptsCodeListResponse)(nil), "SReceiptsCodeListResponse")
	proto.RegisterType((*ReceiptsCodeSaveRequest)(nil), "ReceiptsCodeSaveRequest")
	proto.RegisterType((*BankCardListResponse)(nil), "BankCardListResponse")
	proto.RegisterType((*BankCardSaveRequest)(nil), "BankCardSaveRequest")
	proto.RegisterType((*UpdateLevelRequest)(nil), "UpdateLevelRequest")
	proto.RegisterType((*ChangePhoneRequest)(nil), "ChangePhoneRequest")
	proto.RegisterType((*ChangeUserRequest)(nil), "ChangeUserRequest")
	proto.RegisterType((*ModifyPwdRequest)(nil), "ModifyPwdRequest")
	proto.RegisterType((*ChangeInviterRequest)(nil), "ChangeInviterRequest")
	proto.RegisterType((*OrderQuantityMapResponse)(nil), "OrderQuantityMapResponse")
	proto.RegisterMapType((map[int32]int32)(nil), "OrderQuantityMapResponse.DataEntry")
	proto.RegisterType((*GetTokenRequest)(nil), "GetTokenRequest")
	proto.RegisterType((*PremiumRequest)(nil), "PremiumRequest")
	proto.RegisterType((*CheckTokenRequest)(nil), "CheckTokenRequest")
	proto.RegisterType((*AddressListResponse)(nil), "AddressListResponse")
	proto.RegisterType((*GetAddressRequest)(nil), "GetAddressRequest")
	proto.RegisterType((*DepthRequest)(nil), "DepthRequest")
	proto.RegisterType((*InviterIdListResponse)(nil), "InviterIdListResponse")
	proto.RegisterType((*InviteQuantityRequest)(nil), "InviteQuantityRequest")
	proto.RegisterMapType((map[string]string)(nil), "InviteQuantityRequest.DataEntry")
	proto.RegisterType((*MemberIdListResponse)(nil), "MemberIdListResponse")
	proto.RegisterType((*AccountChangeRequest)(nil), "AccountChangeRequest")
	proto.RegisterType((*AccountAdjustRequest)(nil), "AccountAdjustRequest")
	proto.RegisterType((*B4EAuthRequest)(nil), "B4EAuthRequest")
	proto.RegisterMapType((map[string]string)(nil), "B4EAuthRequest.DataEntry")
	proto.RegisterType((*PagingAccountInfoRequest)(nil), "PagingAccountInfoRequest")
	proto.RegisterType((*SMemberLevel)(nil), "SMemberLevel")
	proto.RegisterType((*SMember)(nil), "SMember")
	proto.RegisterType((*SProfile)(nil), "SProfile")
	proto.RegisterType((*SAccount)(nil), "SAccount")
	proto.RegisterType((*SComplexMember)(nil), "SComplexMember")
	proto.RegisterType((*SMemberRelation)(nil), "SMemberRelation")
	proto.RegisterType((*STrustedInfo)(nil), "STrustedInfo")
	proto.RegisterType((*SAddress)(nil), "SAddress")
	proto.RegisterType((*SReceiptsCode)(nil), "SReceiptsCode")
	proto.RegisterType((*SBankcard)(nil), "SBankcard")
	proto.RegisterType((*SMemberLevelInfo)(nil), "SMemberLevelInfo")
	proto.RegisterType((*SMemberOrderSummary)(nil), "SMemberOrderSummary")
	proto.RegisterEnum("ECredentials", ECredentials_name, ECredentials_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MemberServiceClient is the client API for MemberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemberServiceClient interface {
	// *
	// 注册会员
	// @param user 登陆用户名
	// @param pwd 登陆密码,md5运算后的字符串
	// @param flag 用户自定义标志
	// @param phone 手机号码
	// @param email 邮箱
	// @param avatar 头像
	// @param extend 扩展数据
	// @return 注册结果，返回user_code
	RegisterMemberV2(ctx context.Context, in *RegisterMemberRequest, opts ...grpc.CallOption) (*Result, error)
	// 登录，返回结果(Result)和会员编号(Id);
	// Result值为：-1:会员不存在; -2:账号密码不正确; -3:账号被停用
	CheckLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Result, error)
	// * 检查交易密码
	CheckTradePwd(ctx context.Context, in *CheckTradePwdRequest, opts ...grpc.CallOption) (*Result, error)
	// * 交换会员编号
	SwapMemberId(ctx context.Context, in *SwapMemberRequest, opts ...grpc.CallOption) (*Int64, error)
	// * 等级列表
	MemberLevelList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SMemberLevelListResponse, error)
	// 获取实名信息,memberId
	GetTrustInfo(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*STrustedInfo, error)
	// * 提交实名信息
	SubmitTrustInfo(ctx context.Context, in *SubmitTrustInfoRequest, opts ...grpc.CallOption) (*Result, error)
	// * 审核实名认证,若重复审核将返回错误 *
	ReviewTrustedInfo(ctx context.Context, in *ReviewTrustInfoRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取会员等级信息,id
	GetMemberLevel(ctx context.Context, in *Int32, opts ...grpc.CallOption) (*SMemberLevel, error)
	// * 保存等级
	SaveMemberLevel(ctx context.Context, in *SMemberLevel, opts ...grpc.CallOption) (*Result, error)
	// 根据SIGN获取等级,sign
	GetLevelBySign(ctx context.Context, in *String, opts ...grpc.CallOption) (*SMemberLevel, error)
	// 根据会员编号获取会员信息
	GetMember(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SMember, error)
	// 根据用户名获取会员信息
	GetMemberByUser(ctx context.Context, in *String, opts ...grpc.CallOption) (*SMember, error)
	// 根据会员编号获取会员资料
	GetProfile(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProfile, error)
	// * 激活会员,memberId
	Active(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// * 锁定,minutes锁定分钟数,默认:-1永久锁定
	Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*Result, error)
	// * 解锁会员
	Unlock(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// * 标志赋值, 如果flag小于零, 则异或运算
	GrantFlag(ctx context.Context, in *GrantFlagRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取会员汇总信息,memberId
	Complex(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SComplexMember, error)
	// * 发送会员验证码消息, 并返回验证码, 验证码通过data.code获取
	SendCode(ctx context.Context, in *SendCodeRequest, opts ...grpc.CallOption) (*Result, error)
	// * 比较验证码是否正确
	CompareCode(ctx context.Context, in *CompareCodeRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取收款码
	ReceiptsCodes(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SReceiptsCodeListResponse, error)
	// * 保存收款码
	SaveReceiptsCode(ctx context.Context, in *ReceiptsCodeSaveRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取银行卡
	BankCards(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*BankCardListResponse, error)
	// * 保存银行卡
	SaveBankcard(ctx context.Context, in *BankCardSaveRequest, opts ...grpc.CallOption) (*Result, error)
	// 检查资料是否完成
	CheckProfileComplete(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error)
	// * 获取会员等级信息
	MemberLevelInfo(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SMemberLevelInfo, error)
	// 更改会员等级
	UpdateLevel(ctx context.Context, in *UpdateLevelRequest, opts ...grpc.CallOption) (*Result, error)
	// 更改手机号码，不验证手机格式
	ChangePhone(ctx context.Context, in *ChangePhoneRequest, opts ...grpc.CallOption) (*Result, error)
	// 更改用户名
	ChangeUser(ctx context.Context, in *ChangeUserRequest, opts ...grpc.CallOption) (*Result, error)
	// * 更改密码
	ModifyPwd(ctx context.Context, in *ModifyPwdRequest, opts ...grpc.CallOption) (*Result, error)
	// * 更改交易密码
	ModifyTradePwd(ctx context.Context, in *ModifyPwdRequest, opts ...grpc.CallOption) (*Result, error)
	// * 更改邀请人
	ChangeInviterId(ctx context.Context, in *ChangeInviterRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取会员的订单状态及其数量
	OrdersQuantity(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*OrderQuantityMapResponse, error)
	// 升级为高级会员
	Premium(ctx context.Context, in *PremiumRequest, opts ...grpc.CallOption) (*Result, error)
	// 获取会员的会员Token,reset表示是否重置token
	GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*String, error)
	// 检查会员的会话Token是否正确，如正确返回: 1
	CheckToken(ctx context.Context, in *CheckTokenRequest, opts ...grpc.CallOption) (*Bool, error)
	// 移除会员的Token,memberId
	RemoveToken(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Empty, error)
	// 获取会员的收货地址,memberId
	GetAddressList(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*AddressListResponse, error)
	// 获取地址，如果addrId为0，则返回默认地址
	GetAddress(ctx context.Context, in *GetAddressRequest, opts ...grpc.CallOption) (*SAddress, error)
	// 获取会员账户信息,memberId
	GetAccount(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SAccount, error)
	// 获取自己的邀请人会员编号数组
	InviterArray(ctx context.Context, in *DepthRequest, opts ...grpc.CallOption) (*InviterIdListResponse, error)
	// 获取邀请会员的数量
	InviteMembersQuantity(ctx context.Context, in *DepthRequest, opts ...grpc.CallOption) (*Int32, error)
	// 按条件获取荐指定等级会员的数量
	QueryInviteQuantity(ctx context.Context, in *InviteQuantityRequest, opts ...grpc.CallOption) (*Int64, error)
	// 按条件获取荐指定等级会员的列表
	QueryInviteArray(ctx context.Context, in *InviteQuantityRequest, opts ...grpc.CallOption) (*MemberIdListResponse, error)
	// 账户充值,amount精确到分
	AccountCharge(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error)
	// 账户消耗,amount精确到分
	AccountConsume(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error)
	// 账户抵扣,amount精确到分
	AccountDiscount(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error)
	// 账户退款,amount精确到分
	AccountRefund(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error)
	// 账户人工调整
	AccountAdjust(ctx context.Context, in *AccountAdjustRequest, opts ...grpc.CallOption) (*Result, error)
	// !银行四要素认证
	B4EAuth(ctx context.Context, in *B4EAuthRequest, opts ...grpc.CallOption) (*Result, error)
	// * 获取指定账户的流水记录
	PagingAccountLog(ctx context.Context, in *PagingAccountInfoRequest, opts ...grpc.CallOption) (*SPagingResult, error)
}

type memberServiceClient struct {
	cc *grpc.ClientConn
}

func NewMemberServiceClient(cc *grpc.ClientConn) MemberServiceClient {
	return &memberServiceClient{cc}
}

func (c *memberServiceClient) RegisterMemberV2(ctx context.Context, in *RegisterMemberRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/RegisterMemberV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) CheckLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/CheckLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) CheckTradePwd(ctx context.Context, in *CheckTradePwdRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/CheckTradePwd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) SwapMemberId(ctx context.Context, in *SwapMemberRequest, opts ...grpc.CallOption) (*Int64, error) {
	out := new(Int64)
	err := c.cc.Invoke(ctx, "/MemberService/SwapMemberId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) MemberLevelList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SMemberLevelListResponse, error) {
	out := new(SMemberLevelListResponse)
	err := c.cc.Invoke(ctx, "/MemberService/MemberLevelList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetTrustInfo(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*STrustedInfo, error) {
	out := new(STrustedInfo)
	err := c.cc.Invoke(ctx, "/MemberService/GetTrustInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) SubmitTrustInfo(ctx context.Context, in *SubmitTrustInfoRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/SubmitTrustInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ReviewTrustedInfo(ctx context.Context, in *ReviewTrustInfoRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/ReviewTrustedInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetMemberLevel(ctx context.Context, in *Int32, opts ...grpc.CallOption) (*SMemberLevel, error) {
	out := new(SMemberLevel)
	err := c.cc.Invoke(ctx, "/MemberService/GetMemberLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) SaveMemberLevel(ctx context.Context, in *SMemberLevel, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/SaveMemberLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetLevelBySign(ctx context.Context, in *String, opts ...grpc.CallOption) (*SMemberLevel, error) {
	out := new(SMemberLevel)
	err := c.cc.Invoke(ctx, "/MemberService/GetLevelBySign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetMember(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SMember, error) {
	out := new(SMember)
	err := c.cc.Invoke(ctx, "/MemberService/GetMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetMemberByUser(ctx context.Context, in *String, opts ...grpc.CallOption) (*SMember, error) {
	out := new(SMember)
	err := c.cc.Invoke(ctx, "/MemberService/GetMemberByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetProfile(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SProfile, error) {
	out := new(SProfile)
	err := c.cc.Invoke(ctx, "/MemberService/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) Active(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/Active", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) Unlock(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/Unlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GrantFlag(ctx context.Context, in *GrantFlagRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/GrantFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) Complex(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SComplexMember, error) {
	out := new(SComplexMember)
	err := c.cc.Invoke(ctx, "/MemberService/Complex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) SendCode(ctx context.Context, in *SendCodeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/SendCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) CompareCode(ctx context.Context, in *CompareCodeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/CompareCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ReceiptsCodes(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SReceiptsCodeListResponse, error) {
	out := new(SReceiptsCodeListResponse)
	err := c.cc.Invoke(ctx, "/MemberService/ReceiptsCodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) SaveReceiptsCode(ctx context.Context, in *ReceiptsCodeSaveRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/SaveReceiptsCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) BankCards(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*BankCardListResponse, error) {
	out := new(BankCardListResponse)
	err := c.cc.Invoke(ctx, "/MemberService/BankCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) SaveBankcard(ctx context.Context, in *BankCardSaveRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/SaveBankcard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) CheckProfileComplete(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/CheckProfileComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) MemberLevelInfo(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SMemberLevelInfo, error) {
	out := new(SMemberLevelInfo)
	err := c.cc.Invoke(ctx, "/MemberService/MemberLevelInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) UpdateLevel(ctx context.Context, in *UpdateLevelRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/UpdateLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ChangePhone(ctx context.Context, in *ChangePhoneRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/ChangePhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ChangeUser(ctx context.Context, in *ChangeUserRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/ChangeUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ModifyPwd(ctx context.Context, in *ModifyPwdRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/ModifyPwd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ModifyTradePwd(ctx context.Context, in *ModifyPwdRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/ModifyTradePwd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) ChangeInviterId(ctx context.Context, in *ChangeInviterRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/ChangeInviterId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) OrdersQuantity(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*OrderQuantityMapResponse, error) {
	out := new(OrderQuantityMapResponse)
	err := c.cc.Invoke(ctx, "/MemberService/OrdersQuantity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) Premium(ctx context.Context, in *PremiumRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/Premium", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/MemberService/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) CheckToken(ctx context.Context, in *CheckTokenRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/MemberService/CheckToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) RemoveToken(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/MemberService/RemoveToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetAddressList(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/MemberService/GetAddressList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetAddress(ctx context.Context, in *GetAddressRequest, opts ...grpc.CallOption) (*SAddress, error) {
	out := new(SAddress)
	err := c.cc.Invoke(ctx, "/MemberService/GetAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) GetAccount(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SAccount, error) {
	out := new(SAccount)
	err := c.cc.Invoke(ctx, "/MemberService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) InviterArray(ctx context.Context, in *DepthRequest, opts ...grpc.CallOption) (*InviterIdListResponse, error) {
	out := new(InviterIdListResponse)
	err := c.cc.Invoke(ctx, "/MemberService/InviterArray", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) InviteMembersQuantity(ctx context.Context, in *DepthRequest, opts ...grpc.CallOption) (*Int32, error) {
	out := new(Int32)
	err := c.cc.Invoke(ctx, "/MemberService/InviteMembersQuantity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) QueryInviteQuantity(ctx context.Context, in *InviteQuantityRequest, opts ...grpc.CallOption) (*Int64, error) {
	out := new(Int64)
	err := c.cc.Invoke(ctx, "/MemberService/QueryInviteQuantity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) QueryInviteArray(ctx context.Context, in *InviteQuantityRequest, opts ...grpc.CallOption) (*MemberIdListResponse, error) {
	out := new(MemberIdListResponse)
	err := c.cc.Invoke(ctx, "/MemberService/QueryInviteArray", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) AccountCharge(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/AccountCharge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) AccountConsume(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/AccountConsume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) AccountDiscount(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/AccountDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) AccountRefund(ctx context.Context, in *AccountChangeRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/AccountRefund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) AccountAdjust(ctx context.Context, in *AccountAdjustRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/AccountAdjust", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) B4EAuth(ctx context.Context, in *B4EAuthRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/MemberService/B4EAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberServiceClient) PagingAccountLog(ctx context.Context, in *PagingAccountInfoRequest, opts ...grpc.CallOption) (*SPagingResult, error) {
	out := new(SPagingResult)
	err := c.cc.Invoke(ctx, "/MemberService/PagingAccountLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemberServiceServer is the server API for MemberService service.
type MemberServiceServer interface {
	// *
	// 注册会员
	// @param user 登陆用户名
	// @param pwd 登陆密码,md5运算后的字符串
	// @param flag 用户自定义标志
	// @param phone 手机号码
	// @param email 邮箱
	// @param avatar 头像
	// @param extend 扩展数据
	// @return 注册结果，返回user_code
	RegisterMemberV2(context.Context, *RegisterMemberRequest) (*Result, error)
	// 登录，返回结果(Result)和会员编号(Id);
	// Result值为：-1:会员不存在; -2:账号密码不正确; -3:账号被停用
	CheckLogin(context.Context, *LoginRequest) (*Result, error)
	// * 检查交易密码
	CheckTradePwd(context.Context, *CheckTradePwdRequest) (*Result, error)
	// * 交换会员编号
	SwapMemberId(context.Context, *SwapMemberRequest) (*Int64, error)
	// * 等级列表
	MemberLevelList(context.Context, *Empty) (*SMemberLevelListResponse, error)
	// 获取实名信息,memberId
	GetTrustInfo(context.Context, *Int64) (*STrustedInfo, error)
	// * 提交实名信息
	SubmitTrustInfo(context.Context, *SubmitTrustInfoRequest) (*Result, error)
	// * 审核实名认证,若重复审核将返回错误 *
	ReviewTrustedInfo(context.Context, *ReviewTrustInfoRequest) (*Result, error)
	// * 获取会员等级信息,id
	GetMemberLevel(context.Context, *Int32) (*SMemberLevel, error)
	// * 保存等级
	SaveMemberLevel(context.Context, *SMemberLevel) (*Result, error)
	// 根据SIGN获取等级,sign
	GetLevelBySign(context.Context, *String) (*SMemberLevel, error)
	// 根据会员编号获取会员信息
	GetMember(context.Context, *Int64) (*SMember, error)
	// 根据用户名获取会员信息
	GetMemberByUser(context.Context, *String) (*SMember, error)
	// 根据会员编号获取会员资料
	GetProfile(context.Context, *Int64) (*SProfile, error)
	// * 激活会员,memberId
	Active(context.Context, *Int64) (*Result, error)
	// * 锁定,minutes锁定分钟数,默认:-1永久锁定
	Lock(context.Context, *LockRequest) (*Result, error)
	// * 解锁会员
	Unlock(context.Context, *Int64) (*Result, error)
	// * 标志赋值, 如果flag小于零, 则异或运算
	GrantFlag(context.Context, *GrantFlagRequest) (*Result, error)
	// * 获取会员汇总信息,memberId
	Complex(context.Context, *Int64) (*SComplexMember, error)
	// * 发送会员验证码消息, 并返回验证码, 验证码通过data.code获取
	SendCode(context.Context, *SendCodeRequest) (*Result, error)
	// * 比较验证码是否正确
	CompareCode(context.Context, *CompareCodeRequest) (*Result, error)
	// * 获取收款码
	ReceiptsCodes(context.Context, *Int64) (*SReceiptsCodeListResponse, error)
	// * 保存收款码
	SaveReceiptsCode(context.Context, *ReceiptsCodeSaveRequest) (*Result, error)
	// * 获取银行卡
	BankCards(context.Context, *Int64) (*BankCardListResponse, error)
	// * 保存银行卡
	SaveBankcard(context.Context, *BankCardSaveRequest) (*Result, error)
	// 检查资料是否完成
	CheckProfileComplete(context.Context, *Int64) (*Result, error)
	// * 获取会员等级信息
	MemberLevelInfo(context.Context, *Int64) (*SMemberLevelInfo, error)
	// 更改会员等级
	UpdateLevel(context.Context, *UpdateLevelRequest) (*Result, error)
	// 更改手机号码，不验证手机格式
	ChangePhone(context.Context, *ChangePhoneRequest) (*Result, error)
	// 更改用户名
	ChangeUser(context.Context, *ChangeUserRequest) (*Result, error)
	// * 更改密码
	ModifyPwd(context.Context, *ModifyPwdRequest) (*Result, error)
	// * 更改交易密码
	ModifyTradePwd(context.Context, *ModifyPwdRequest) (*Result, error)
	// * 更改邀请人
	ChangeInviterId(context.Context, *ChangeInviterRequest) (*Result, error)
	// * 获取会员的订单状态及其数量
	OrdersQuantity(context.Context, *Int64) (*OrderQuantityMapResponse, error)
	// 升级为高级会员
	Premium(context.Context, *PremiumRequest) (*Result, error)
	// 获取会员的会员Token,reset表示是否重置token
	GetToken(context.Context, *GetTokenRequest) (*String, error)
	// 检查会员的会话Token是否正确，如正确返回: 1
	CheckToken(context.Context, *CheckTokenRequest) (*Bool, error)
	// 移除会员的Token,memberId
	RemoveToken(context.Context, *Int64) (*Empty, error)
	// 获取会员的收货地址,memberId
	GetAddressList(context.Context, *Int64) (*AddressListResponse, error)
	// 获取地址，如果addrId为0，则返回默认地址
	GetAddress(context.Context, *GetAddressRequest) (*SAddress, error)
	// 获取会员账户信息,memberId
	GetAccount(context.Context, *Int64) (*SAccount, error)
	// 获取自己的邀请人会员编号数组
	InviterArray(context.Context, *DepthRequest) (*InviterIdListResponse, error)
	// 获取邀请会员的数量
	InviteMembersQuantity(context.Context, *DepthRequest) (*Int32, error)
	// 按条件获取荐指定等级会员的数量
	QueryInviteQuantity(context.Context, *InviteQuantityRequest) (*Int64, error)
	// 按条件获取荐指定等级会员的列表
	QueryInviteArray(context.Context, *InviteQuantityRequest) (*MemberIdListResponse, error)
	// 账户充值,amount精确到分
	AccountCharge(context.Context, *AccountChangeRequest) (*Result, error)
	// 账户消耗,amount精确到分
	AccountConsume(context.Context, *AccountChangeRequest) (*Result, error)
	// 账户抵扣,amount精确到分
	AccountDiscount(context.Context, *AccountChangeRequest) (*Result, error)
	// 账户退款,amount精确到分
	AccountRefund(context.Context, *AccountChangeRequest) (*Result, error)
	// 账户人工调整
	AccountAdjust(context.Context, *AccountAdjustRequest) (*Result, error)
	// !银行四要素认证
	B4EAuth(context.Context, *B4EAuthRequest) (*Result, error)
	// * 获取指定账户的流水记录
	PagingAccountLog(context.Context, *PagingAccountInfoRequest) (*SPagingResult, error)
}

func RegisterMemberServiceServer(s *grpc.Server, srv MemberServiceServer) {
	s.RegisterService(&_MemberService_serviceDesc, srv)
}

func _MemberService_RegisterMemberV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).RegisterMemberV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/RegisterMemberV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).RegisterMemberV2(ctx, req.(*RegisterMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_CheckLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).CheckLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/CheckLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).CheckLogin(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_CheckTradePwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTradePwdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).CheckTradePwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/CheckTradePwd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).CheckTradePwd(ctx, req.(*CheckTradePwdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_SwapMemberId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwapMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).SwapMemberId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/SwapMemberId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).SwapMemberId(ctx, req.(*SwapMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_MemberLevelList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).MemberLevelList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/MemberLevelList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).MemberLevelList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetTrustInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetTrustInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetTrustInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetTrustInfo(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_SubmitTrustInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTrustInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).SubmitTrustInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/SubmitTrustInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).SubmitTrustInfo(ctx, req.(*SubmitTrustInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ReviewTrustedInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewTrustInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ReviewTrustedInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ReviewTrustedInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ReviewTrustedInfo(ctx, req.(*ReviewTrustInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetMemberLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int32)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetMemberLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetMemberLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetMemberLevel(ctx, req.(*Int32))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_SaveMemberLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMemberLevel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).SaveMemberLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/SaveMemberLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).SaveMemberLevel(ctx, req.(*SMemberLevel))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetLevelBySign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetLevelBySign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetLevelBySign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetLevelBySign(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetMember(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetMemberByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetMemberByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetMemberByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetMemberByUser(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetProfile(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_Active_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Active(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/Active",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Active(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Lock(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_Unlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Unlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/Unlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Unlock(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GrantFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantFlagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GrantFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GrantFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GrantFlag(ctx, req.(*GrantFlagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_Complex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Complex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/Complex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Complex(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_SendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).SendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/SendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).SendCode(ctx, req.(*SendCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_CompareCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompareCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).CompareCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/CompareCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).CompareCode(ctx, req.(*CompareCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ReceiptsCodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ReceiptsCodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ReceiptsCodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ReceiptsCodes(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_SaveReceiptsCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiptsCodeSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).SaveReceiptsCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/SaveReceiptsCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).SaveReceiptsCode(ctx, req.(*ReceiptsCodeSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_BankCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).BankCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/BankCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).BankCards(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_SaveBankcard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankCardSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).SaveBankcard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/SaveBankcard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).SaveBankcard(ctx, req.(*BankCardSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_CheckProfileComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).CheckProfileComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/CheckProfileComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).CheckProfileComplete(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_MemberLevelInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).MemberLevelInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/MemberLevelInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).MemberLevelInfo(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_UpdateLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLevelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).UpdateLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/UpdateLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).UpdateLevel(ctx, req.(*UpdateLevelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ChangePhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ChangePhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ChangePhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ChangePhone(ctx, req.(*ChangePhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ChangeUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ChangeUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ChangeUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ChangeUser(ctx, req.(*ChangeUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ModifyPwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyPwdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ModifyPwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ModifyPwd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ModifyPwd(ctx, req.(*ModifyPwdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ModifyTradePwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyPwdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ModifyTradePwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ModifyTradePwd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ModifyTradePwd(ctx, req.(*ModifyPwdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_ChangeInviterId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeInviterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).ChangeInviterId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/ChangeInviterId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).ChangeInviterId(ctx, req.(*ChangeInviterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_OrdersQuantity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).OrdersQuantity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/OrdersQuantity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).OrdersQuantity(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_Premium_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PremiumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).Premium(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/Premium",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).Premium(ctx, req.(*PremiumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetToken(ctx, req.(*GetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_CheckToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).CheckToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/CheckToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).CheckToken(ctx, req.(*CheckTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_RemoveToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).RemoveToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/RemoveToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).RemoveToken(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetAddressList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetAddressList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetAddressList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetAddressList(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetAddress(ctx, req.(*GetAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).GetAccount(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_InviterArray_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).InviterArray(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/InviterArray",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).InviterArray(ctx, req.(*DepthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_InviteMembersQuantity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).InviteMembersQuantity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/InviteMembersQuantity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).InviteMembersQuantity(ctx, req.(*DepthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_QueryInviteQuantity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteQuantityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).QueryInviteQuantity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/QueryInviteQuantity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).QueryInviteQuantity(ctx, req.(*InviteQuantityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_QueryInviteArray_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteQuantityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).QueryInviteArray(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/QueryInviteArray",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).QueryInviteArray(ctx, req.(*InviteQuantityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_AccountCharge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).AccountCharge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/AccountCharge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).AccountCharge(ctx, req.(*AccountChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_AccountConsume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).AccountConsume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/AccountConsume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).AccountConsume(ctx, req.(*AccountChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_AccountDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).AccountDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/AccountDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).AccountDiscount(ctx, req.(*AccountChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_AccountRefund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).AccountRefund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/AccountRefund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).AccountRefund(ctx, req.(*AccountChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_AccountAdjust_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountAdjustRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).AccountAdjust(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/AccountAdjust",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).AccountAdjust(ctx, req.(*AccountAdjustRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_B4EAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(B4EAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).B4EAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/B4EAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).B4EAuth(ctx, req.(*B4EAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberService_PagingAccountLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PagingAccountInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServiceServer).PagingAccountLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MemberService/PagingAccountLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServiceServer).PagingAccountLog(ctx, req.(*PagingAccountInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemberService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MemberService",
	HandlerType: (*MemberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterMemberV2",
			Handler:    _MemberService_RegisterMemberV2_Handler,
		},
		{
			MethodName: "CheckLogin",
			Handler:    _MemberService_CheckLogin_Handler,
		},
		{
			MethodName: "CheckTradePwd",
			Handler:    _MemberService_CheckTradePwd_Handler,
		},
		{
			MethodName: "SwapMemberId",
			Handler:    _MemberService_SwapMemberId_Handler,
		},
		{
			MethodName: "MemberLevelList",
			Handler:    _MemberService_MemberLevelList_Handler,
		},
		{
			MethodName: "GetTrustInfo",
			Handler:    _MemberService_GetTrustInfo_Handler,
		},
		{
			MethodName: "SubmitTrustInfo",
			Handler:    _MemberService_SubmitTrustInfo_Handler,
		},
		{
			MethodName: "ReviewTrustedInfo",
			Handler:    _MemberService_ReviewTrustedInfo_Handler,
		},
		{
			MethodName: "GetMemberLevel",
			Handler:    _MemberService_GetMemberLevel_Handler,
		},
		{
			MethodName: "SaveMemberLevel",
			Handler:    _MemberService_SaveMemberLevel_Handler,
		},
		{
			MethodName: "GetLevelBySign",
			Handler:    _MemberService_GetLevelBySign_Handler,
		},
		{
			MethodName: "GetMember",
			Handler:    _MemberService_GetMember_Handler,
		},
		{
			MethodName: "GetMemberByUser",
			Handler:    _MemberService_GetMemberByUser_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _MemberService_GetProfile_Handler,
		},
		{
			MethodName: "Active",
			Handler:    _MemberService_Active_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _MemberService_Lock_Handler,
		},
		{
			MethodName: "Unlock",
			Handler:    _MemberService_Unlock_Handler,
		},
		{
			MethodName: "GrantFlag",
			Handler:    _MemberService_GrantFlag_Handler,
		},
		{
			MethodName: "Complex",
			Handler:    _MemberService_Complex_Handler,
		},
		{
			MethodName: "SendCode",
			Handler:    _MemberService_SendCode_Handler,
		},
		{
			MethodName: "CompareCode",
			Handler:    _MemberService_CompareCode_Handler,
		},
		{
			MethodName: "ReceiptsCodes",
			Handler:    _MemberService_ReceiptsCodes_Handler,
		},
		{
			MethodName: "SaveReceiptsCode",
			Handler:    _MemberService_SaveReceiptsCode_Handler,
		},
		{
			MethodName: "BankCards",
			Handler:    _MemberService_BankCards_Handler,
		},
		{
			MethodName: "SaveBankcard",
			Handler:    _MemberService_SaveBankcard_Handler,
		},
		{
			MethodName: "CheckProfileComplete",
			Handler:    _MemberService_CheckProfileComplete_Handler,
		},
		{
			MethodName: "MemberLevelInfo",
			Handler:    _MemberService_MemberLevelInfo_Handler,
		},
		{
			MethodName: "UpdateLevel",
			Handler:    _MemberService_UpdateLevel_Handler,
		},
		{
			MethodName: "ChangePhone",
			Handler:    _MemberService_ChangePhone_Handler,
		},
		{
			MethodName: "ChangeUser",
			Handler:    _MemberService_ChangeUser_Handler,
		},
		{
			MethodName: "ModifyPwd",
			Handler:    _MemberService_ModifyPwd_Handler,
		},
		{
			MethodName: "ModifyTradePwd",
			Handler:    _MemberService_ModifyTradePwd_Handler,
		},
		{
			MethodName: "ChangeInviterId",
			Handler:    _MemberService_ChangeInviterId_Handler,
		},
		{
			MethodName: "OrdersQuantity",
			Handler:    _MemberService_OrdersQuantity_Handler,
		},
		{
			MethodName: "Premium",
			Handler:    _MemberService_Premium_Handler,
		},
		{
			MethodName: "GetToken",
			Handler:    _MemberService_GetToken_Handler,
		},
		{
			MethodName: "CheckToken",
			Handler:    _MemberService_CheckToken_Handler,
		},
		{
			MethodName: "RemoveToken",
			Handler:    _MemberService_RemoveToken_Handler,
		},
		{
			MethodName: "GetAddressList",
			Handler:    _MemberService_GetAddressList_Handler,
		},
		{
			MethodName: "GetAddress",
			Handler:    _MemberService_GetAddress_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _MemberService_GetAccount_Handler,
		},
		{
			MethodName: "InviterArray",
			Handler:    _MemberService_InviterArray_Handler,
		},
		{
			MethodName: "InviteMembersQuantity",
			Handler:    _MemberService_InviteMembersQuantity_Handler,
		},
		{
			MethodName: "QueryInviteQuantity",
			Handler:    _MemberService_QueryInviteQuantity_Handler,
		},
		{
			MethodName: "QueryInviteArray",
			Handler:    _MemberService_QueryInviteArray_Handler,
		},
		{
			MethodName: "AccountCharge",
			Handler:    _MemberService_AccountCharge_Handler,
		},
		{
			MethodName: "AccountConsume",
			Handler:    _MemberService_AccountConsume_Handler,
		},
		{
			MethodName: "AccountDiscount",
			Handler:    _MemberService_AccountDiscount_Handler,
		},
		{
			MethodName: "AccountRefund",
			Handler:    _MemberService_AccountRefund_Handler,
		},
		{
			MethodName: "AccountAdjust",
			Handler:    _MemberService_AccountAdjust_Handler,
		},
		{
			MethodName: "B4EAuth",
			Handler:    _MemberService_B4EAuth_Handler,
		},
		{
			MethodName: "PagingAccountLog",
			Handler:    _MemberService_PagingAccountLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "member_service.proto",
}

func init() {
	proto.RegisterFile("member_service.proto", fileDescriptor_member_service_b7eddf4d0dd0d1e3)
}

var fileDescriptor_member_service_b7eddf4d0dd0d1e3 = []byte{
	// 3219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0x4b, 0x73, 0x23, 0xc7,
	0x91, 0x26, 0x40, 0x10, 0x04, 0x92, 0x2f, 0xa0, 0xc8, 0xa1, 0x30, 0xd0, 0x48, 0x1a, 0xf5, 0x4a,
	0x23, 0x69, 0x24, 0xf5, 0xac, 0xe6, 0xa5, 0x5d, 0x6d, 0x6c, 0x68, 0xf9, 0x1a, 0x2e, 0x22, 0x38,
	0x23, 0xa8, 0x31, 0xb3, 0x8a, 0xdd, 0x3d, 0x28, 0x6a, 0xd0, 0x45, 0xb0, 0x97, 0x8d, 0x6e, 0x6c,
	0x77, 0x81, 0x24, 0x7c, 0x72, 0x84, 0x23, 0x7c, 0x92, 0x23, 0x7c, 0xf6, 0xc9, 0x8f, 0x93, 0x23,
	0x74, 0xf3, 0xbf, 0xf0, 0xd1, 0x07, 0x1f, 0x7d, 0xf6, 0xcf, 0x70, 0x64, 0x56, 0x55, 0x77, 0x35,
	0x00, 0xce, 0x60, 0xc2, 0xbe, 0x90, 0x95, 0x5f, 0x67, 0x67, 0x65, 0x65, 0x65, 0x65, 0x66, 0x75,
	0x02, 0x76, 0x86, 0x62, 0xf8, 0x52, 0x24, 0xdf, 0xa7, 0x22, 0xb9, 0x08, 0xfa, 0xc2, 0x1d, 0x25,
	0xb1, 0x8c, 0xdb, 0x6b, 0x52, 0x4e, 0x46, 0x9a, 0x70, 0x7e, 0x5d, 0x86, 0x1b, 0x9e, 0x18, 0x04,
	0xa9, 0x14, 0xc9, 0x53, 0xe2, 0xf6, 0xc4, 0xff, 0x8f, 0x45, 0x2a, 0x19, 0x83, 0xca, 0x38, 0x15,
	0x49, 0xab, 0x74, 0xbb, 0xf4, 0x71, 0xdd, 0xa3, 0x31, 0x6b, 0xc0, 0xf2, 0xe8, 0xd2, 0x6f, 0x95,
	0x09, 0xc2, 0x21, 0x72, 0x9d, 0x86, 0x7c, 0xd0, 0x5a, 0xbe, 0x5d, 0xfa, 0xb8, 0xe9, 0xd1, 0x18,
	0xb1, 0x88, 0x0f, 0x45, 0xab, 0xa2, 0xde, 0xc4, 0x31, 0xdb, 0x81, 0x95, 0xd1, 0x59, 0x1c, 0x89,
	0xd6, 0x0a, 0x81, 0x8a, 0x40, 0x54, 0x0c, 0x79, 0x10, 0xb6, 0xaa, 0x0a, 0x25, 0x82, 0xed, 0x42,
	0x95, 0x5f, 0x70, 0xc9, 0x93, 0xd6, 0x2a, 0xc1, 0x9a, 0x62, 0x5f, 0x41, 0x55, 0x5c, 0x49, 0x11,
	0xf9, 0xad, 0xda, 0xed, 0xe5, 0x8f, 0xd7, 0xee, 0x3b, 0xee, 0x5c, 0xcd, 0xdd, 0x23, 0x62, 0x3a,
	0x8a, 0x64, 0x32, 0xf1, 0xf4, 0x1b, 0xed, 0x7f, 0x85, 0x35, 0x0b, 0xc6, 0x85, 0x9c, 0x8b, 0x89,
	0x5e, 0x1b, 0x0e, 0x51, 0x95, 0x0b, 0x1e, 0x8e, 0x85, 0x5e, 0x9c, 0x22, 0xbe, 0x2a, 0xff, 0x4b,
	0xc9, 0x39, 0x81, 0xf5, 0x93, 0x78, 0x10, 0x44, 0x6f, 0x66, 0x98, 0x5d, 0xa8, 0x8e, 0x47, 0x3e,
	0x97, 0x82, 0x4c, 0x53, 0xf3, 0x34, 0xe5, 0x3c, 0x83, 0x9d, 0x83, 0x33, 0xd1, 0x3f, 0x7f, 0x9e,
	0x70, 0x5f, 0x74, 0x2f, 0x7d, 0x23, 0xb5, 0x0d, 0x35, 0xb5, 0x5b, 0x1d, 0x9f, 0x24, 0x33, 0x2f,
	0xa3, 0xf1, 0x99, 0xd4, 0xec, 0x7a, 0x8a, 0x8c, 0x76, 0x4e, 0xa0, 0xd9, 0xbb, 0xe4, 0xa3, 0xe2,
	0xde, 0xbd, 0x0f, 0x95, 0x7e, 0x22, 0x94, 0xa0, 0xcd, 0xfb, 0x1b, 0xee, 0xd1, 0x41, 0x22, 0x7c,
	0x11, 0xc9, 0x80, 0x87, 0xa9, 0x47, 0x8f, 0xe6, 0xaf, 0xd7, 0xf9, 0x77, 0x68, 0xf5, 0x94, 0xa8,
	0x13, 0x71, 0x21, 0xc2, 0x93, 0x20, 0x95, 0x9e, 0x48, 0x47, 0x71, 0x94, 0x0a, 0x14, 0x8a, 0x74,
	0xab, 0x44, 0xc6, 0xdf, 0x70, 0x6d, 0x46, 0x8f, 0x1e, 0x39, 0xdf, 0xc1, 0x6e, 0x6f, 0xfc, 0x72,
	0x18, 0xc8, 0xe7, 0xc9, 0x38, 0x95, 0x9d, 0xe8, 0x34, 0x5e, 0x64, 0x79, 0xef, 0x43, 0x25, 0x88,
	0x4e, 0x63, 0xd2, 0x84, 0x04, 0xd3, 0xdb, 0xc2, 0xa7, 0xf7, 0xe9, 0x91, 0x13, 0xc2, 0xae, 0x27,
	0x2e, 0x02, 0x71, 0xf9, 0x46, 0x82, 0xdf, 0x05, 0x48, 0xe8, 0xad, 0x2e, 0x4f, 0x53, 0x12, 0x5f,
	0xf3, 0x2c, 0x04, 0xf7, 0x28, 0x11, 0x43, 0x9e, 0x9c, 0xd3, 0x1e, 0xd5, 0x3d, 0x4d, 0x39, 0xff,
	0x0b, 0x6b, 0x27, 0x71, 0xff, 0x7c, 0x91, 0x29, 0x5a, 0xb0, 0x3a, 0x0c, 0xa2, 0xb1, 0x14, 0x4a,
	0x7e, 0xd3, 0x33, 0xe4, 0xb5, 0xc2, 0xf7, 0xa1, 0x71, 0x9c, 0xf0, 0x48, 0x3e, 0x09, 0xf9, 0x60,
	0x91, 0x19, 0xcc, 0x09, 0x2b, 0xe7, 0x27, 0xcc, 0x11, 0xb0, 0xd5, 0x13, 0x91, 0x7f, 0x10, 0xfb,
	0x62, 0x11, 0x11, 0xb7, 0xa0, 0x1e, 0x8f, 0x44, 0xc2, 0x65, 0x10, 0x47, 0x7a, 0xbf, 0x73, 0x80,
	0x96, 0x90, 0x0e, 0x9e, 0x4f, 0x46, 0x42, 0x6b, 0x6a, 0x48, 0xe7, 0x10, 0xd8, 0x41, 0x3c, 0x1c,
	0xf1, 0x44, 0x2c, 0x3a, 0x13, 0x83, 0x4a, 0x3f, 0xf6, 0x8d, 0x53, 0xd1, 0xd8, 0xf9, 0x1a, 0x6e,
	0xf6, 0x3c, 0xd1, 0x17, 0xc1, 0x48, 0xa6, 0x28, 0xa7, 0xe0, 0x54, 0x4e, 0xc1, 0xa9, 0x36, 0xdd,
	0x02, 0xa7, 0xf6, 0xaa, 0xff, 0x86, 0xb7, 0x6c, 0xb4, 0xc7, 0x2f, 0x16, 0xd2, 0xc5, 0xb1, 0x74,
	0x99, 0x23, 0x9a, 0x74, 0x7b, 0x0c, 0x3b, 0xfb, 0x3c, 0x3a, 0x3f, 0xe0, 0x89, 0x5f, 0x50, 0xeb,
	0xdd, 0x82, 0x5a, 0xe0, 0xf6, 0x90, 0xab, 0xcf, 0x13, 0x5f, 0xab, 0xf4, 0x2d, 0x6c, 0x9b, 0xf7,
	0x16, 0x55, 0xe7, 0x5d, 0xa8, 0xa0, 0x00, 0xad, 0x4e, 0x41, 0x24, 0xfe, 0x75, 0x7e, 0x5e, 0x02,
	0xf6, 0x82, 0x62, 0x84, 0x3a, 0x51, 0x0b, 0x88, 0xdc, 0x81, 0x95, 0x10, 0x79, 0xb5, 0x6f, 0x28,
	0x42, 0x39, 0x1e, 0xfa, 0xb8, 0x89, 0x3c, 0x8a, 0x62, 0x77, 0x60, 0x73, 0xc4, 0x27, 0x43, 0x11,
	0xc9, 0x6f, 0x12, 0x9f, 0xe4, 0x55, 0x48, 0xde, 0x14, 0xea, 0x3c, 0x01, 0x76, 0x70, 0xc6, 0xa3,
	0x81, 0xe8, 0x62, 0x8c, 0x5e, 0x50, 0x0f, 0x15, 0xdc, 0xcb, 0x56, 0x70, 0x77, 0xf6, 0xa0, 0xa9,
	0xe4, 0xbc, 0x48, 0xf3, 0xc8, 0xf4, 0x2a, 0x31, 0x0d, 0x58, 0x1e, 0xa7, 0x89, 0x09, 0xa2, 0xe3,
	0x34, 0x71, 0x3c, 0x68, 0x3c, 0x8d, 0xfd, 0xe0, 0x74, 0xb2, 0x60, 0xa0, 0x6c, 0xc0, 0x72, 0x1c,
	0x66, 0x61, 0x38, 0x0e, 0x7d, 0x13, 0x98, 0x97, 0xb3, 0xc0, 0xec, 0x74, 0x31, 0x00, 0xa3, 0x5a,
	0x9d, 0xe8, 0x22, 0x90, 0x8b, 0x69, 0x76, 0x0b, 0xea, 0x81, 0xe2, 0xee, 0x28, 0xe9, 0xcc, 0xcb,
	0x01, 0xe7, 0x87, 0x12, 0xb4, 0xc8, 0x78, 0xdf, 0x8e, 0x79, 0x24, 0x03, 0x39, 0x79, 0xca, 0x47,
	0x99, 0x27, 0x7d, 0x09, 0x95, 0x43, 0x2e, 0xb9, 0xf6, 0xa4, 0x7f, 0x72, 0xaf, 0x63, 0x74, 0x91,
	0x4b, 0xe5, 0x2c, 0x7a, 0xa1, 0xfd, 0x25, 0xd4, 0x33, 0xc8, 0xce, 0x57, 0xcd, 0x39, 0xf9, 0xaa,
	0x69, 0xe7, 0xab, 0x03, 0xd8, 0x3a, 0x16, 0xf2, 0x79, 0x7c, 0x2e, 0xa2, 0x05, 0x37, 0x2f, 0x11,
	0xa9, 0x90, 0x3a, 0x3e, 0x2a, 0xc2, 0x79, 0x0e, 0x9b, 0xdd, 0x44, 0x0c, 0x83, 0xf1, 0x70, 0x11,
	0x19, 0xeb, 0x50, 0xba, 0xd0, 0x8a, 0x94, 0x2e, 0x30, 0xa0, 0x88, 0xab, 0x51, 0x90, 0x88, 0x94,
	0xec, 0xce, 0x3c, 0x43, 0x3a, 0x47, 0xe8, 0x12, 0x98, 0xfc, 0xde, 0x40, 0x39, 0x89, 0xbc, 0xc6,
	0xb3, 0x88, 0x70, 0x1e, 0xc2, 0xf6, 0x9e, 0xef, 0x27, 0x22, 0x4d, 0x0b, 0x87, 0xf6, 0x9d, 0xc2,
	0xa1, 0xad, 0xbb, 0x3d, 0xcd, 0xa4, 0xcf, 0xec, 0x31, 0x34, 0x8f, 0x85, 0x34, 0xd8, 0x02, 0x93,
	0x63, 0x1d, 0xe2, 0xfb, 0xf9, 0x96, 0x6b, 0xca, 0xf9, 0x0f, 0x58, 0x3f, 0x14, 0x23, 0x79, 0xb6,
	0xe0, 0x02, 0x7c, 0xe4, 0x35, 0xdb, 0x44, 0x84, 0xf3, 0x29, 0xdc, 0xe8, 0x18, 0xf7, 0x29, 0x2c,
	0x81, 0x59, 0x4b, 0x60, 0x5a, 0xef, 0xdf, 0x96, 0x0c, 0xb7, 0x71, 0x9b, 0x45, 0x26, 0x7e, 0x08,
	0x15, 0x1f, 0xfd, 0xae, 0x4c, 0xc6, 0xb8, 0xed, 0xce, 0x95, 0x60, 0x3b, 0x9d, 0xff, 0x2a, 0xa7,
	0x7b, 0x6d, 0x91, 0x74, 0x17, 0x76, 0x9e, 0xea, 0xa9, 0x5f, 0xbb, 0xa0, 0x1f, 0x4b, 0xb0, 0xb3,
	0xd7, 0xef, 0xc7, 0xe3, 0x48, 0xaa, 0x93, 0xb8, 0x60, 0xa2, 0xe5, 0xea, 0x1d, 0x93, 0x68, 0x35,
	0x49, 0x3e, 0x12, 0xc8, 0xd0, 0x64, 0x2f, 0x45, 0xd0, 0xe6, 0x0d, 0x89, 0xbd, 0x42, 0xec, 0x9a,
	0x42, 0x39, 0xf1, 0x58, 0x8a, 0xe4, 0x59, 0xac, 0x4b, 0x51, 0x43, 0x5a, 0x09, 0xbb, 0x5a, 0x48,
	0xd8, 0xbf, 0xca, 0xd5, 0xdd, 0xf3, 0xff, 0x6f, 0x8c, 0x8b, 0xfb, 0x3b, 0xd5, 0x55, 0x36, 0x5c,
	0xb6, 0x0e, 0xae, 0x2a, 0x55, 0x42, 0x2e, 0x29, 0x58, 0xea, 0xc0, 0x6c, 0x21, 0x96, 0x72, 0x2b,
	0x05, 0xe5, 0x7e, 0x2c, 0xc1, 0xe6, 0xfe, 0xc3, 0xa3, 0xbd, 0xf1, 0x62, 0xee, 0x88, 0x56, 0xe9,
	0x5b, 0x65, 0x80, 0xa6, 0xd8, 0xe7, 0xda, 0x5b, 0x96, 0xc9, 0x5b, 0x6e, 0xba, 0x45, 0x91, 0xff,
	0x38, 0x37, 0xf9, 0x69, 0x09, 0x5a, 0x5d, 0x3e, 0x08, 0xa2, 0x81, 0xb6, 0xe8, 0xa2, 0xa5, 0xdc,
	0x6d, 0x58, 0xd3, 0x06, 0xa4, 0x42, 0x45, 0xd9, 0xd4, 0x86, 0xd8, 0x1d, 0xa8, 0x8e, 0x78, 0xc2,
	0x87, 0x2a, 0xe8, 0x50, 0xc2, 0x57, 0x33, 0x75, 0x09, 0xf5, 0xf4, 0x53, 0xe7, 0xcf, 0x25, 0x58,
	0xb7, 0x4b, 0x57, 0xb6, 0x09, 0xe5, 0xce, 0xa1, 0x0e, 0xad, 0xe5, 0xce, 0x21, 0xba, 0xec, 0x33,
	0xbc, 0xbe, 0xe8, 0x1a, 0x06, 0xc7, 0xb8, 0x3d, 0xa8, 0x65, 0x90, 0x88, 0xa3, 0xab, 0x91, 0xde,
	0x39, 0x0b, 0x61, 0x1f, 0xc0, 0x46, 0x37, 0x89, 0x07, 0x09, 0x1f, 0xf6, 0x82, 0x41, 0xc4, 0x43,
	0x7d, 0xf7, 0x29, 0x82, 0x28, 0xa5, 0x93, 0x7e, 0x73, 0x7a, 0x1a, 0xf4, 0x03, 0x1e, 0xd2, 0x46,
	0x36, 0x3d, 0x0b, 0x41, 0xa7, 0x39, 0x8a, 0xf8, 0xcb, 0x50, 0xf8, 0xe4, 0x82, 0x4d, 0xcf, 0x90,
	0xcc, 0x81, 0xf5, 0xbd, 0x30, 0x8c, 0x2f, 0x5f, 0x8c, 0x06, 0x58, 0xf8, 0xd3, 0xc5, 0xa8, 0xe9,
	0x15, 0x30, 0xe7, 0x0f, 0x15, 0x58, 0xd5, 0x0b, 0xa3, 0x35, 0x19, 0x23, 0x96, 0x55, 0x5d, 0x46,
	0x8e, 0xa5, 0xd7, 0xf4, 0x42, 0xdf, 0x59, 0xba, 0x79, 0x6a, 0xec, 0x5e, 0xd2, 0x3d, 0xc3, 0x5c,
	0x4b, 0xf4, 0x02, 0x32, 0x1a, 0xb9, 0x71, 0xe9, 0x2b, 0x24, 0x12, 0x87, 0xb8, 0xcb, 0x64, 0x40,
	0xad, 0xab, 0x22, 0x70, 0xa3, 0x74, 0xe2, 0xa0, 0x09, 0x95, 0xa2, 0x36, 0x84, 0x75, 0x88, 0x26,
	0x8f, 0x74, 0x96, 0xa8, 0xa9, 0x3a, 0xa4, 0x88, 0x92, 0xb5, 0x28, 0x68, 0x61, 0xbd, 0xd6, 0xaa,
	0x93, 0x3e, 0x16, 0x82, 0xf3, 0x7b, 0x62, 0xd0, 0x19, 0xb5, 0x40, 0x79, 0x19, 0x11, 0x68, 0x43,
	0x4f, 0x0c, 0x9e, 0x24, 0xf1, 0xb0, 0xb5, 0xa6, 0xce, 0xb7, 0x26, 0x91, 0xbf, 0x27, 0xf1, 0x42,
	0xb6, 0xae, 0xf4, 0x25, 0x02, 0x2d, 0x83, 0x95, 0x78, 0x6b, 0x43, 0x95, 0xd7, 0x4f, 0xf4, 0x05,
	0x96, 0xe6, 0xdc, 0x54, 0xd6, 0xa2, 0xd9, 0x76, 0xa1, 0xba, 0xa7, 0x2e, 0xa5, 0x5b, 0xea, 0xe4,
	0x28, 0x0a, 0xa5, 0x52, 0x9d, 0xd4, 0x6a, 0x28, 0x2d, 0xba, 0xe6, 0x62, 0x7b, 0x44, 0x17, 0xdb,
	0xa6, 0x42, 0x89, 0xc8, 0x3c, 0x8b, 0x59, 0x9e, 0xd5, 0x86, 0x9a, 0x27, 0x78, 0x48, 0xf8, 0xb6,
	0xb2, 0xb9, 0xa1, 0x71, 0xd7, 0x0f, 0x27, 0x11, 0x1f, 0x06, 0x7d, 0x4a, 0x98, 0xad, 0x1d, 0x7a,
	0x5e, 0xc0, 0xf4, 0x7a, 0x9f, 0x07, 0x43, 0xd1, 0xba, 0xa1, 0x92, 0xad, 0x26, 0xd1, 0x27, 0x4f,
	0x78, 0x2a, 0xe9, 0xee, 0x4a, 0xcf, 0x77, 0xe9, 0x79, 0x11, 0x74, 0xfe, 0xb4, 0x0c, 0xb5, 0x5e,
	0x37, 0x89, 0x4f, 0x83, 0x90, 0x94, 0x79, 0x3a, 0x75, 0x02, 0x9f, 0x5a, 0xa5, 0xfd, 0xcc, 0xb1,
	0xc8, 0x8d, 0xb2, 0x5c, 0x30, 0x4a, 0x03, 0x96, 0x7b, 0xe2, 0x4a, 0x47, 0x5e, 0x1c, 0xa2, 0xe4,
	0xfd, 0x20, 0x91, 0x67, 0x87, 0x7c, 0xa2, 0x23, 0x58, 0x46, 0xe7, 0x26, 0xac, 0xda, 0x26, 0x6c,
	0xc1, 0xaa, 0xce, 0xd5, 0xfa, 0x33, 0x80, 0x21, 0xc9, 0xb9, 0x87, 0xe4, 0x34, 0x75, 0xaf, 0xdc,
	0x19, 0xe6, 0xc6, 0xae, 0xdb, 0xc6, 0x6e, 0x43, 0xad, 0x9b, 0xc4, 0x17, 0x41, 0xd4, 0x17, 0xe4,
	0x21, 0x4d, 0x2f, 0xa3, 0x69, 0x83, 0x03, 0x39, 0x21, 0x0f, 0x69, 0x7a, 0x34, 0x46, 0xfe, 0xc3,
	0x20, 0x95, 0x49, 0xd0, 0x97, 0xda, 0x43, 0x32, 0x1a, 0xd7, 0xe9, 0xa9, 0xe8, 0xbb, 0xa1, 0xd6,
	0xa9, 0x28, 0x94, 0x73, 0x74, 0x25, 0xbf, 0x30, 0x8e, 0x82, 0x63, 0x8d, 0xdd, 0xd7, 0x6e, 0x42,
	0x63, 0x8d, 0x3d, 0xd0, 0x3e, 0x42, 0x63, 0x8d, 0x3d, 0xd4, 0x1e, 0x42, 0x63, 0x8d, 0x3d, 0x32,
	0x0e, 0x82, 0x63, 0x8d, 0x3d, 0xd6, 0xce, 0x41, 0x63, 0x3c, 0x1a, 0xea, 0xaa, 0x40, 0xfb, 0xba,
	0xa3, 0xb2, 0x45, 0x8e, 0x38, 0x7f, 0x5c, 0x81, 0x5a, 0x4f, 0x47, 0xd8, 0x57, 0x6e, 0x6a, 0x1b,
	0x6a, 0x9d, 0x48, 0x8a, 0x41, 0xc2, 0x43, 0x5d, 0xe4, 0x64, 0x34, 0x9e, 0xd3, 0x27, 0x89, 0x10,
	0x3f, 0x11, 0x19, 0x87, 0xaa, 0xe6, 0xa6, 0x50, 0xdc, 0xa8, 0x7d, 0x1e, 0x72, 0xb4, 0x33, 0x6e,
	0x78, 0xc9, 0x33, 0x24, 0x7a, 0xa0, 0xe2, 0x35, 0xcf, 0x57, 0xe8, 0x79, 0x11, 0xc4, 0x79, 0xd4,
	0x91, 0xf7, 0x0d, 0x5b, 0x95, 0xd8, 0xa6, 0x50, 0x94, 0xf6, 0x1d, 0x0f, 0x43, 0x21, 0x0d, 0xdb,
	0xaa, 0x92, 0x56, 0x00, 0xf1, 0xcc, 0x28, 0xf1, 0x0a, 0x26, 0x37, 0x29, 0x79, 0x05, 0x0c, 0x25,
	0x69, 0xd9, 0x9a, 0xa9, 0xae, 0x24, 0x15, 0x40, 0xf6, 0x19, 0x34, 0x9f, 0xc7, 0x92, 0x87, 0x8a,
	0xdc, 0x53, 0xc5, 0x04, 0x10, 0xe7, 0xec, 0x03, 0x8c, 0x7b, 0x4f, 0xc2, 0xf8, 0xd2, 0xe8, 0xb6,
	0x46, 0x7c, 0x36, 0x84, 0x1c, 0xc7, 0x49, 0xce, 0xb1, 0xae, 0x38, 0x2c, 0x08, 0xb7, 0x15, 0x49,
	0x3d, 0xd5, 0x06, 0x31, 0x58, 0x08, 0xae, 0x0d, 0xa9, 0x23, 0x9e, 0x44, 0x41, 0x34, 0x48, 0xc9,
	0xed, 0x4a, 0x5e, 0x01, 0x43, 0xad, 0x91, 0x26, 0x05, 0x33, 0xc6, 0x2d, 0xa5, 0xf5, 0xcc, 0x03,
	0x94, 0xa8, 0x80, 0xab, 0x91, 0x88, 0x52, 0x15, 0xc4, 0x4a, 0x5e, 0x01, 0x43, 0xbd, 0x89, 0x3e,
	0x38, 0xe3, 0xc9, 0x40, 0x90, 0xbf, 0x96, 0x3c, 0x1b, 0xa2, 0xbc, 0x81, 0x64, 0x97, 0x4f, 0xc8,
	0x75, 0x4b, 0x5e, 0x46, 0xab, 0x7c, 0x10, 0xc4, 0x49, 0x20, 0x27, 0xf8, 0x78, 0x9b, 0x5c, 0xc8,
	0x86, 0x5e, 0xeb, 0xcc, 0x7f, 0x29, 0xc3, 0x66, 0xef, 0x20, 0x1e, 0x8e, 0x42, 0x71, 0xa5, 0xd3,
	0x9b, 0x89, 0x45, 0xa5, 0xb9, 0xb1, 0xa8, 0x3c, 0x3f, 0x40, 0x2f, 0xdb, 0xd1, 0x45, 0xa7, 0x33,
	0x1d, 0xa1, 0x0a, 0xe9, 0x6c, 0xc5, 0x4e, 0x67, 0xb7, 0xa0, 0x4e, 0x03, 0x9a, 0x4e, 0xc5, 0xa7,
	0x1c, 0x98, 0x4a, 0x51, 0xab, 0x33, 0x29, 0xea, 0x0e, 0x6c, 0xd2, 0x07, 0x2b, 0xac, 0xa5, 0x54,
	0xee, 0xa9, 0x91, 0xf0, 0x29, 0x74, 0x3a, 0x69, 0xd6, 0x67, 0x93, 0xa6, 0x49, 0x53, 0x60, 0xa5,
	0xa9, 0xa2, 0xe1, 0xd6, 0xa6, 0x0d, 0xa7, 0x66, 0x57, 0xe9, 0xfb, 0x3f, 0x79, 0xda, 0x13, 0x2a,
	0xae, 0xd5, 0xbc, 0x29, 0xd4, 0xf9, 0x7d, 0x09, 0xb6, 0x7a, 0xe6, 0x03, 0x62, 0xa8, 0x3e, 0x0a,
	0xbd, 0x2a, 0x68, 0xec, 0x42, 0xf5, 0x80, 0x27, 0x7e, 0xc7, 0x5c, 0xb4, 0x35, 0x85, 0xb6, 0xca,
	0x6e, 0x35, 0x3a, 0x56, 0xe4, 0x40, 0x6e, 0xab, 0xa4, 0x27, 0x13, 0x5d, 0x5e, 0x58, 0x08, 0x1e,
	0xca, 0xec, 0x73, 0x6e, 0xff, 0xac, 0xe3, 0xeb, 0x7d, 0x28, 0x82, 0xce, 0x5f, 0xcb, 0xb0, 0x6e,
	0x7f, 0x1f, 0x2c, 0xe4, 0xcf, 0xd2, 0x54, 0xfe, 0xbc, 0x0d, 0x6b, 0x07, 0x78, 0x70, 0x92, 0xc9,
	0x41, 0xfe, 0x51, 0xca, 0x86, 0xf0, 0x6d, 0x54, 0x3e, 0xfb, 0xf8, 0xd5, 0xf4, 0x32, 0xda, 0x5a,
	0x66, 0x65, 0x7a, 0x99, 0x34, 0x1a, 0xf2, 0x81, 0xf9, 0x9c, 0x9d, 0x03, 0xec, 0x2e, 0x34, 0x90,
	0xf0, 0xc4, 0x85, 0x48, 0x52, 0xa1, 0x98, 0x94, 0xdf, 0xcc, 0xe0, 0x68, 0x12, 0xf5, 0x3d, 0x93,
	0xb8, 0xb4, 0xfb, 0xe4, 0x08, 0x9e, 0xce, 0xa7, 0x3c, 0x1a, 0xf3, 0x50, 0x7d, 0xfb, 0xd4, 0xce,
	0x53, 0xc0, 0x70, 0x8d, 0x6a, 0xa4, 0xfc, 0x4b, 0xbb, 0x8e, 0x05, 0xa9, 0xda, 0x95, 0xbe, 0x9d,
	0xa2, 0x9b, 0x80, 0x72, 0x93, 0x1c, 0xb1, 0x92, 0xdb, 0x9a, 0x9d, 0xdc, 0x9c, 0x1f, 0xca, 0x98,
	0x44, 0xac, 0x9c, 0x7b, 0x98, 0x15, 0x94, 0x87, 0xb8, 0x5b, 0x07, 0x71, 0x94, 0x06, 0x83, 0x48,
	0x08, 0xab, 0x2c, 0x28, 0x82, 0xe8, 0x81, 0x19, 0x60, 0x1f, 0xc2, 0x29, 0xb4, 0x90, 0xab, 0x2b,
	0xd7, 0xe4, 0xea, 0x95, 0x6b, 0x72, 0x75, 0x75, 0x2a, 0x57, 0x33, 0xa8, 0xec, 0x25, 0x82, 0x6b,
	0x73, 0xd2, 0x18, 0xb5, 0x3d, 0x14, 0x92, 0x07, 0xa1, 0xa9, 0x28, 0x54, 0xf1, 0x50, 0x04, 0xc9,
	0x7f, 0xd3, 0x43, 0x71, 0xca, 0xc7, 0xa1, 0xd4, 0x86, 0xcc, 0x01, 0xe7, 0x17, 0x25, 0xd8, 0x28,
	0x7c, 0x42, 0xa4, 0xe4, 0x49, 0x5f, 0xd5, 0xa5, 0xb9, 0xfd, 0x64, 0xf4, 0xdc, 0x6a, 0xe9, 0x16,
	0xd4, 0xcd, 0xad, 0xc7, 0x94, 0xdd, 0x39, 0x80, 0x69, 0x14, 0xa5, 0xbe, 0x48, 0xcc, 0xe5, 0xc1,
	0x90, 0x79, 0xe1, 0xba, 0x62, 0x15, 0xae, 0xce, 0xef, 0x4a, 0x50, 0xcf, 0xbe, 0x21, 0xce, 0x14,
	0xfc, 0x58, 0x6f, 0xf1, 0xe8, 0xdc, 0xd2, 0x21, 0xa3, 0xd1, 0x65, 0xf4, 0xb4, 0xf4, 0x58, 0x69,
	0x62, 0x43, 0x54, 0x7b, 0xe9, 0xdb, 0xab, 0xd6, 0xc5, 0x14, 0x13, 0x2d, 0x58, 0x7d, 0x26, 0xe4,
	0x65, 0x9c, 0x5d, 0x44, 0x0d, 0x99, 0x6b, 0x59, 0xb5, 0xb5, 0xfc, 0x65, 0x19, 0x1a, 0xf6, 0x6d,
	0x8b, 0xce, 0x6c, 0x16, 0x6a, 0x4b, 0xd7, 0x86, 0xda, 0xf2, 0x74, 0xa8, 0xd5, 0x01, 0x7b, 0x39,
	0x0f, 0xd8, 0x8b, 0xdd, 0xb9, 0x6e, 0x41, 0xfd, 0x99, 0xb8, 0x92, 0x76, 0x68, 0xcf, 0x01, 0x94,
	0x91, 0x11, 0x56, 0x88, 0x2f, 0x82, 0x98, 0x53, 0x11, 0x28, 0xce, 0xa6, 0xfc, 0x6b, 0xf6, 0xc1,
	0xd4, 0x5d, 0xb1, 0x36, 0x7d, 0x57, 0x74, 0x7e, 0x53, 0x82, 0x6d, 0x6d, 0x12, 0xfa, 0x18, 0xd8,
	0x1b, 0x0f, 0x87, 0x3c, 0x99, 0xd0, 0x1d, 0xef, 0x92, 0x07, 0xb2, 0xab, 0x3e, 0xc7, 0x6a, 0xe3,
	0x14, 0x30, 0xd4, 0x97, 0xe8, 0xde, 0x59, 0x30, 0x22, 0x26, 0x75, 0x11, 0x2e, 0x82, 0x99, 0x24,
	0xf2, 0xd6, 0x0b, 0x13, 0xd9, 0x0a, 0x18, 0x45, 0x31, 0xca, 0xa9, 0x52, 0xf8, 0xfa, 0xcc, 0xe5,
	0xc0, 0xdd, 0x2e, 0xac, 0xdb, 0x3d, 0x23, 0x56, 0x85, 0xf2, 0xf7, 0x5f, 0x34, 0x96, 0x58, 0x4d,
	0xdd, 0x23, 0x1b, 0x25, 0x1c, 0xa1, 0x7f, 0x36, 0xca, 0xac, 0xae, 0xcb, 0xef, 0xc6, 0x32, 0x0e,
	0xe9, 0x40, 0x37, 0x2a, 0x6c, 0xd3, 0x4e, 0x8d, 0x8d, 0xea, 0xfd, 0x9f, 0x6d, 0xc3, 0x86, 0x5a,
	0x74, 0x4f, 0x75, 0x23, 0xd9, 0x23, 0x68, 0x14, 0xfb, 0x77, 0xff, 0x75, 0x9f, 0xed, 0xce, 0x6f,
	0xe9, 0xb5, 0x57, 0x5d, 0x4f, 0xa4, 0x78, 0x0a, 0x97, 0xd8, 0x1d, 0x00, 0xfa, 0x86, 0x48, 0x57,
	0x18, 0xb6, 0xe1, 0xda, 0xbd, 0x39, 0x9b, 0xef, 0x0b, 0xd8, 0x28, 0x34, 0xda, 0xd8, 0x0d, 0x77,
	0x5e, 0xe3, 0xcd, 0x7e, 0xe5, 0x33, 0x58, 0xcf, 0x7b, 0x69, 0x78, 0xe5, 0x71, 0x67, 0x5a, 0x6b,
	0xed, 0xaa, 0xdb, 0x89, 0xe4, 0xe3, 0x87, 0xce, 0x12, 0x7b, 0x0c, 0x5b, 0x53, 0xad, 0x32, 0x56,
	0x75, 0x8f, 0x86, 0x23, 0x39, 0x69, 0xdf, 0x74, 0xaf, 0xeb, 0xa2, 0x39, 0x4b, 0xec, 0x23, 0x58,
	0x3f, 0x16, 0x79, 0x87, 0x8c, 0x69, 0x89, 0xed, 0x62, 0xe3, 0xcb, 0x59, 0x62, 0x8f, 0x60, 0x6b,
	0xaa, 0x9b, 0xc6, 0xde, 0x72, 0xe7, 0xf7, 0xd7, 0xec, 0x55, 0x7c, 0x09, 0x4d, 0xab, 0x57, 0xa6,
	0xd3, 0xe4, 0x5b, 0xee, 0xfc, 0xfe, 0x99, 0xfd, 0xe2, 0x27, 0xb0, 0x79, 0x2c, 0xa4, 0xfd, 0x69,
	0x84, 0x54, 0x7b, 0x70, 0xbf, 0x5d, 0x6c, 0xf6, 0x39, 0x4b, 0xec, 0x53, 0xd8, 0xea, 0xf1, 0x0b,
	0x61, 0xf3, 0x16, 0x79, 0x6c, 0xb9, 0x77, 0x49, 0x2e, 0xc1, 0xfb, 0x13, 0x3c, 0x24, 0x6c, 0xd5,
	0xed, 0xc9, 0x24, 0x88, 0x06, 0xb3, 0x82, 0xdf, 0x83, 0x7a, 0xa6, 0x43, 0x66, 0x99, 0x9a, 0xe1,
	0xa2, 0xed, 0xdf, 0xca, 0x18, 0xf6, 0x27, 0x54, 0x1b, 0x65, 0xd2, 0x6c, 0xbe, 0xf7, 0x01, 0x8e,
	0x85, 0x34, 0x17, 0x5b, 0x23, 0xa9, 0xee, 0x9a, 0xbb, 0xae, 0xb3, 0xc4, 0xde, 0x86, 0xea, 0x5e,
	0x5f, 0xe2, 0x61, 0x30, 0x8f, 0x2d, 0xa5, 0xdf, 0x83, 0xca, 0x49, 0xdc, 0x3f, 0x67, 0xeb, 0xae,
	0xd5, 0x0a, 0xb4, 0x19, 0xde, 0x86, 0xea, 0x8b, 0x28, 0x44, 0x96, 0x39, 0x6f, 0x7f, 0x02, 0xf5,
	0xac, 0xc9, 0xc7, 0x9a, 0xee, 0x74, 0xc3, 0xcf, 0x66, 0xfd, 0x00, 0xe3, 0x3e, 0x15, 0xb7, 0x99,
	0xa0, 0x2d, 0xb7, 0x58, 0xef, 0x92, 0xd3, 0xd4, 0x4c, 0xc7, 0x8f, 0x35, 0xdc, 0xa9, 0xe6, 0x9f,
	0x2d, 0xee, 0x73, 0xac, 0x79, 0xb2, 0x9e, 0x1d, 0xdb, 0x76, 0x67, 0x3b, 0x78, 0x36, 0xfb, 0x23,
	0xac, 0xba, 0xf2, 0x9c, 0x96, 0x66, 0x3a, 0xb4, 0xdd, 0x6b, 0x9b, 0x76, 0xe4, 0x63, 0x0d, 0xd5,
	0xf7, 0xb2, 0xd2, 0x61, 0xcb, 0xbd, 0xa6, 0x4b, 0x57, 0x3c, 0x62, 0x75, 0xd3, 0x38, 0xcb, 0xe7,
	0xba, 0xe1, 0xce, 0x6b, 0xc2, 0x39, 0x4b, 0xec, 0x1e, 0xac, 0xa3, 0x9c, 0x2c, 0xcb, 0xed, 0xb8,
	0x73, 0xba, 0x6e, 0x45, 0xbb, 0xab, 0xee, 0xba, 0xde, 0x64, 0x13, 0xd0, 0xe6, 0x6d, 0x91, 0x5b,
	0x38, 0xbe, 0x85, 0x93, 0xd8, 0x74, 0xa7, 0x53, 0x96, 0x32, 0xac, 0xd5, 0x9e, 0x63, 0xdb, 0xee,
	0x6c, 0xb3, 0x6e, 0x7a, 0x1f, 0xf2, 0x2e, 0x1a, 0xee, 0xc3, 0x4c, 0x4f, 0xcd, 0x66, 0xff, 0x14,
	0xa3, 0x9a, 0x69, 0x96, 0x31, 0xe6, 0xce, 0x74, 0xce, 0xa6, 0xbc, 0x2b, 0x6b, 0x8b, 0xb1, 0xa6,
	0x3b, 0xdd, 0x22, 0x2b, 0xae, 0x72, 0x53, 0x3d, 0xce, 0xc2, 0xe0, 0xab, 0xf9, 0x1f, 0xc0, 0x56,
	0xa1, 0x3b, 0xd6, 0x51, 0x71, 0x73, 0xb6, 0x5f, 0x56, 0x74, 0xa2, 0x4d, 0xca, 0x64, 0xa9, 0x69,
	0x2f, 0x64, 0x96, 0xbc, 0x79, 0x6d, 0xbf, 0xcb, 0x59, 0x62, 0x1f, 0xc2, 0xaa, 0xbe, 0xe2, 0xb0,
	0x2d, 0xb7, 0xd8, 0x6d, 0xb2, 0xa5, 0x7f, 0x04, 0x35, 0xd3, 0xcf, 0x62, 0x0d, 0x77, 0xaa, 0xb5,
	0xd5, 0x36, 0x87, 0x9f, 0xcc, 0x02, 0x79, 0x77, 0x89, 0x6c, 0x38, 0xd5, 0x6a, 0x6a, 0xaf, 0xb8,
	0xfb, 0x71, 0xac, 0xc2, 0xcc, 0x9a, 0x27, 0x86, 0xf1, 0x85, 0x50, 0xbc, 0x46, 0x5d, 0x1d, 0xbf,
	0x9d, 0x25, 0xf6, 0xcf, 0x14, 0xb3, 0xac, 0x2e, 0x53, 0xc6, 0xb3, 0xe3, 0xce, 0xe9, 0x3d, 0xd1,
	0x86, 0x43, 0xfe, 0x06, 0x63, 0xee, 0x4c, 0xaf, 0xa9, 0x9d, 0x77, 0xa4, 0xb2, 0xf8, 0x64, 0xca,
	0x2a, 0x2b, 0x3e, 0x69, 0x88, 0x0e, 0xd9, 0xba, 0xb6, 0xf9, 0x5e, 0x92, 0xf0, 0x09, 0xdb, 0x70,
	0xed, 0xb6, 0x53, 0x7b, 0xd7, 0x9d, 0xdb, 0x43, 0x22, 0xe5, 0x75, 0xc3, 0x48, 0x79, 0x71, 0xbe,
	0x2d, 0x53, 0x12, 0x74, 0x78, 0xa7, 0xa9, 0xb6, 0xbf, 0x1d, 0x8b, 0x64, 0x52, 0xec, 0x12, 0xb1,
	0xdd, 0xf9, 0x6d, 0x23, 0x2b, 0x09, 0x1e, 0x40, 0xc3, 0x7a, 0x51, 0xe9, 0x79, 0xdd, 0x5b, 0x37,
	0xdc, 0x79, 0x2d, 0x22, 0x95, 0xaa, 0xf3, 0x7e, 0x50, 0x32, 0x10, 0xec, 0x86, 0x3b, 0xaf, 0x3f,
	0x64, 0x3b, 0xc5, 0x7d, 0xd8, 0x34, 0x2c, 0x71, 0x94, 0x8e, 0x87, 0x8b, 0xbc, 0xf3, 0x00, 0xb6,
	0x34, 0xcb, 0x61, 0x90, 0x2a, 0xbb, 0xbf, 0xfe, 0xa5, 0x5c, 0x37, 0x4f, 0x9c, 0x8e, 0x23, 0xff,
	0x8d, 0x5e, 0x51, 0xfd, 0xa2, 0xfc, 0x95, 0x42, 0xff, 0xc8, 0x7e, 0xe5, 0x43, 0x58, 0xd5, 0x2d,
	0x17, 0xb6, 0x35, 0xd5, 0x7c, 0xb1, 0xd9, 0xbe, 0x86, 0x46, 0xa1, 0x7b, 0x72, 0x12, 0x0f, 0xd8,
	0x4d, 0xf7, 0xba, 0x86, 0x4a, 0x3b, 0x6b, 0x81, 0x18, 0x01, 0xfb, 0xef, 0xfc, 0xcf, 0xdb, 0xae,
	0x7b, 0xaf, 0x1f, 0x27, 0xe2, 0x9e, 0xfe, 0x51, 0xd8, 0x3d, 0xfa, 0x1d, 0xd8, 0xbf, 0xd1, 0xdf,
	0x97, 0x55, 0xfa, 0xf7, 0xe0, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x1a, 0xe0, 0x08, 0x39,
	0x26, 0x00, 0x00,
}
