// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shop_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 商店,需重构
type SShop2 struct {
	ID                   int64             `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	VendorId             int64             `protobuf:"zigzag64,2,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	ShopType             int32             `protobuf:"zigzag32,3,opt,name=ShopType,proto3" json:"ShopType,omitempty"`
	Name                 string            `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	State                int32             `protobuf:"zigzag32,5,opt,name=State,proto3" json:"State,omitempty"`
	OpeningState         int32             `protobuf:"zigzag32,6,opt,name=OpeningState,proto3" json:"OpeningState,omitempty"`
	Data                 map[string]string `protobuf:"bytes,7,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SShop2) Reset()         { *m = SShop2{} }
func (m *SShop2) String() string { return proto.CompactTextString(m) }
func (*SShop2) ProtoMessage()    {}
func (*SShop2) Descriptor() ([]byte, []int) {
	return fileDescriptor_shop_service_0e6b13f5fedd4ee8, []int{0}
}
func (m *SShop2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SShop2.Unmarshal(m, b)
}
func (m *SShop2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SShop2.Marshal(b, m, deterministic)
}
func (dst *SShop2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SShop2.Merge(dst, src)
}
func (m *SShop2) XXX_Size() int {
	return xxx_messageInfo_SShop2.Size(m)
}
func (m *SShop2) XXX_DiscardUnknown() {
	xxx_messageInfo_SShop2.DiscardUnknown(m)
}

var xxx_messageInfo_SShop2 proto.InternalMessageInfo

func (m *SShop2) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SShop2) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SShop2) GetShopType() int32 {
	if m != nil {
		return m.ShopType
	}
	return 0
}

func (m *SShop2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SShop2) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SShop2) GetOpeningState() int32 {
	if m != nil {
		return m.OpeningState
	}
	return 0
}

func (m *SShop2) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

// 店铺
type SShop struct {
	// * 店铺编号
	Id int64 `protobuf:"zigzag64,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// * 商户编号
	VendorId int64 `protobuf:"zigzag64,2,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	// * 店铺名称
	ShopName string `protobuf:"bytes,3,opt,name=ShopName,proto3" json:"ShopName,omitempty"`
	// * 店铺标志
	Logo string `protobuf:"bytes,4,opt,name=Logo,proto3" json:"Logo,omitempty"`
	// * 自定义 域名
	Host string `protobuf:"bytes,5,opt,name=Host,proto3" json:"Host,omitempty"`
	// * 个性化域名
	Alias string `protobuf:"bytes,6,opt,name=Alias,proto3" json:"Alias,omitempty"`
	// * 电话
	Tel string `protobuf:"bytes,7,opt,name=Tel,proto3" json:"Tel,omitempty"`
	// * 地址
	Addr string `protobuf:"bytes,8,opt,name=Addr,proto3" json:"Addr,omitempty"`
	// * 店铺标题
	ShopTitle string `protobuf:"bytes,9,opt,name=ShopTitle,proto3" json:"ShopTitle,omitempty"`
	// * 店铺公告
	ShopNotice string `protobuf:"bytes,10,opt,name=ShopNotice,proto3" json:"ShopNotice,omitempty"`
	// * 标志
	Flag int32 `protobuf:"zigzag32,11,opt,name=Flag,proto3" json:"Flag,omitempty"`
	// * 状态
	State                int32    `protobuf:"zigzag32,12,opt,name=State,proto3" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SShop) Reset()         { *m = SShop{} }
func (m *SShop) String() string { return proto.CompactTextString(m) }
func (*SShop) ProtoMessage()    {}
func (*SShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_shop_service_0e6b13f5fedd4ee8, []int{1}
}
func (m *SShop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SShop.Unmarshal(m, b)
}
func (m *SShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SShop.Marshal(b, m, deterministic)
}
func (dst *SShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SShop.Merge(dst, src)
}
func (m *SShop) XXX_Size() int {
	return xxx_messageInfo_SShop.Size(m)
}
func (m *SShop) XXX_DiscardUnknown() {
	xxx_messageInfo_SShop.DiscardUnknown(m)
}

var xxx_messageInfo_SShop proto.InternalMessageInfo

func (m *SShop) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SShop) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SShop) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *SShop) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *SShop) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SShop) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *SShop) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *SShop) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *SShop) GetShopTitle() string {
	if m != nil {
		return m.ShopTitle
	}
	return ""
}

func (m *SShop) GetShopNotice() string {
	if m != nil {
		return m.ShopNotice
	}
	return ""
}

func (m *SShop) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *SShop) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

// 店铺
type SStore struct {
	ID                   int64    `protobuf:"zigzag64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	VendorId             int64    `protobuf:"zigzag64,2,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Alias                string   `protobuf:"bytes,4,opt,name=Alias,proto3" json:"Alias,omitempty"`
	Host                 string   `protobuf:"bytes,5,opt,name=Host,proto3" json:"Host,omitempty"`
	Logo                 string   `protobuf:"bytes,6,opt,name=Logo,proto3" json:"Logo,omitempty"`
	State                int32    `protobuf:"zigzag32,7,opt,name=State,proto3" json:"State,omitempty"`
	OpeningState         int32    `protobuf:"zigzag32,8,opt,name=OpeningState,proto3" json:"OpeningState,omitempty"`
	StorePhone           string   `protobuf:"bytes,9,opt,name=StorePhone,proto3" json:"StorePhone,omitempty"`
	StoreTitle           string   `protobuf:"bytes,10,opt,name=StoreTitle,proto3" json:"StoreTitle,omitempty"`
	StoreNotice          string   `protobuf:"bytes,11,opt,name=StoreNotice,proto3" json:"StoreNotice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SStore) Reset()         { *m = SStore{} }
func (m *SStore) String() string { return proto.CompactTextString(m) }
func (*SStore) ProtoMessage()    {}
func (*SStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_shop_service_0e6b13f5fedd4ee8, []int{2}
}
func (m *SStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SStore.Unmarshal(m, b)
}
func (m *SStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SStore.Marshal(b, m, deterministic)
}
func (dst *SStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SStore.Merge(dst, src)
}
func (m *SStore) XXX_Size() int {
	return xxx_messageInfo_SStore.Size(m)
}
func (m *SStore) XXX_DiscardUnknown() {
	xxx_messageInfo_SStore.DiscardUnknown(m)
}

var xxx_messageInfo_SStore proto.InternalMessageInfo

func (m *SStore) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SStore) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *SStore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SStore) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *SStore) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SStore) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *SStore) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SStore) GetOpeningState() int32 {
	if m != nil {
		return m.OpeningState
	}
	return 0
}

func (m *SStore) GetStorePhone() string {
	if m != nil {
		return m.StorePhone
	}
	return ""
}

func (m *SStore) GetStoreTitle() string {
	if m != nil {
		return m.StoreTitle
	}
	return ""
}

func (m *SStore) GetStoreNotice() string {
	if m != nil {
		return m.StoreNotice
	}
	return ""
}

type TurnShopRequest struct {
	ShopId               int64    `protobuf:"zigzag64,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
	On                   bool     `protobuf:"varint,2,opt,name=on,proto3" json:"on,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TurnShopRequest) Reset()         { *m = TurnShopRequest{} }
func (m *TurnShopRequest) String() string { return proto.CompactTextString(m) }
func (*TurnShopRequest) ProtoMessage()    {}
func (*TurnShopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shop_service_0e6b13f5fedd4ee8, []int{3}
}
func (m *TurnShopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TurnShopRequest.Unmarshal(m, b)
}
func (m *TurnShopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TurnShopRequest.Marshal(b, m, deterministic)
}
func (dst *TurnShopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TurnShopRequest.Merge(dst, src)
}
func (m *TurnShopRequest) XXX_Size() int {
	return xxx_messageInfo_TurnShopRequest.Size(m)
}
func (m *TurnShopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TurnShopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TurnShopRequest proto.InternalMessageInfo

func (m *TurnShopRequest) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *TurnShopRequest) GetOn() bool {
	if m != nil {
		return m.On
	}
	return false
}

func (m *TurnShopRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*SShop2)(nil), "SShop2")
	proto.RegisterMapType((map[string]string)(nil), "SShop2.DataEntry")
	proto.RegisterType((*SShop)(nil), "SShop")
	proto.RegisterType((*SStore)(nil), "SStore")
	proto.RegisterType((*TurnShopRequest)(nil), "TurnShopRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShopServiceClient is the client API for ShopService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShopServiceClient interface {
	// * 获取店铺,shopId
	GetShop(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SShop, error)
	// * 获取商户的店铺,vendorId
	GetVendorShop(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SShop, error)
	// * 获取门店,storeId
	GetStore(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SStore, error)
	// * 根据主机头获取店铺编号,host
	QueryShopByHost(ctx context.Context, in *String, opts ...grpc.CallOption) (*Int64, error)
	// 获取门店
	// rpc GetOfflineShop(1:sint32 shopId)returns(Shop)
	// 打开或关闭商店
	TurnShop(ctx context.Context, in *TurnShopRequest, opts ...grpc.CallOption) (*Result, error)
}

type shopServiceClient struct {
	cc *grpc.ClientConn
}

func NewShopServiceClient(cc *grpc.ClientConn) ShopServiceClient {
	return &shopServiceClient{cc}
}

func (c *shopServiceClient) GetShop(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SShop, error) {
	out := new(SShop)
	err := c.cc.Invoke(ctx, "/ShopService/GetShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopServiceClient) GetVendorShop(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SShop, error) {
	out := new(SShop)
	err := c.cc.Invoke(ctx, "/ShopService/GetVendorShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopServiceClient) GetStore(ctx context.Context, in *Int64, opts ...grpc.CallOption) (*SStore, error) {
	out := new(SStore)
	err := c.cc.Invoke(ctx, "/ShopService/GetStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopServiceClient) QueryShopByHost(ctx context.Context, in *String, opts ...grpc.CallOption) (*Int64, error) {
	out := new(Int64)
	err := c.cc.Invoke(ctx, "/ShopService/QueryShopByHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopServiceClient) TurnShop(ctx context.Context, in *TurnShopRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/ShopService/TurnShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShopServiceServer is the server API for ShopService service.
type ShopServiceServer interface {
	// * 获取店铺,shopId
	GetShop(context.Context, *Int64) (*SShop, error)
	// * 获取商户的店铺,vendorId
	GetVendorShop(context.Context, *Int64) (*SShop, error)
	// * 获取门店,storeId
	GetStore(context.Context, *Int64) (*SStore, error)
	// * 根据主机头获取店铺编号,host
	QueryShopByHost(context.Context, *String) (*Int64, error)
	// 获取门店
	// rpc GetOfflineShop(1:sint32 shopId)returns(Shop)
	// 打开或关闭商店
	TurnShop(context.Context, *TurnShopRequest) (*Result, error)
}

func RegisterShopServiceServer(s *grpc.Server, srv ShopServiceServer) {
	s.RegisterService(&_ShopService_serviceDesc, srv)
}

func _ShopService_GetShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServiceServer).GetShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShopService/GetShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServiceServer).GetShop(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopService_GetVendorShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServiceServer).GetVendorShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShopService/GetVendorShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServiceServer).GetVendorShop(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopService_GetStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int64)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServiceServer).GetStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShopService/GetStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServiceServer).GetStore(ctx, req.(*Int64))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopService_QueryShopByHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServiceServer).QueryShopByHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShopService/QueryShopByHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServiceServer).QueryShopByHost(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopService_TurnShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServiceServer).TurnShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ShopService/TurnShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServiceServer).TurnShop(ctx, req.(*TurnShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShopService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ShopService",
	HandlerType: (*ShopServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetShop",
			Handler:    _ShopService_GetShop_Handler,
		},
		{
			MethodName: "GetVendorShop",
			Handler:    _ShopService_GetVendorShop_Handler,
		},
		{
			MethodName: "GetStore",
			Handler:    _ShopService_GetStore_Handler,
		},
		{
			MethodName: "QueryShopByHost",
			Handler:    _ShopService_QueryShopByHost_Handler,
		},
		{
			MethodName: "TurnShop",
			Handler:    _ShopService_TurnShop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shop_service.proto",
}

func init() { proto.RegisterFile("shop_service.proto", fileDescriptor_shop_service_0e6b13f5fedd4ee8) }

var fileDescriptor_shop_service_0e6b13f5fedd4ee8 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x8d, 0x9d, 0xd4, 0x7f, 0xc6, 0xfd, 0xfd, 0xda, 0xae, 0x10, 0xb2, 0xcc, 0x1f, 0x05, 0x0b,
	0x44, 0x4e, 0x3e, 0x14, 0x04, 0x08, 0x4e, 0xad, 0x02, 0x25, 0x12, 0x02, 0xba, 0x89, 0x38, 0x70,
	0x41, 0xa6, 0x5e, 0x25, 0x16, 0x66, 0xd7, 0xd8, 0x9b, 0x4a, 0xfe, 0x2c, 0xdc, 0xf8, 0x1a, 0x7c,
	0x37, 0x84, 0x66, 0xd6, 0x76, 0x5d, 0x54, 0x10, 0x9c, 0x32, 0x6f, 0xde, 0xec, 0x66, 0xde, 0x9b,
	0x59, 0x03, 0xab, 0x37, 0xaa, 0xfc, 0x50, 0x8b, 0xea, 0x3c, 0x3f, 0x13, 0x49, 0x59, 0x29, 0xad,
	0xa2, 0x40, 0xeb, 0xa6, 0x6c, 0x41, 0xfc, 0xc3, 0x02, 0x67, 0xb9, 0xdc, 0xa8, 0xf2, 0x90, 0xfd,
	0x0f, 0xf6, 0x62, 0x1e, 0x5a, 0x53, 0x6b, 0xc6, 0xb8, 0xbd, 0x98, 0xb3, 0x08, 0xbc, 0x77, 0x42,
	0x66, 0xaa, 0x5a, 0x64, 0xa1, 0x4d, 0xd9, 0x1e, 0x23, 0x87, 0x87, 0x56, 0x4d, 0x29, 0xc2, 0xf1,
	0xd4, 0x9a, 0x1d, 0xf0, 0x1e, 0x33, 0x06, 0x93, 0xd7, 0xe9, 0x67, 0x11, 0x4e, 0xa6, 0xd6, 0xcc,
	0xe7, 0x14, 0xb3, 0x6b, 0xb0, 0xb3, 0xd4, 0xa9, 0x16, 0xe1, 0x0e, 0x15, 0x1b, 0xc0, 0x62, 0xd8,
	0x7d, 0x53, 0x0a, 0x99, 0xcb, 0xb5, 0x21, 0x1d, 0x22, 0x2f, 0xe5, 0xd8, 0x3d, 0x98, 0xcc, 0x53,
	0x9d, 0x86, 0xee, 0x74, 0x3c, 0x0b, 0x0e, 0x0f, 0x12, 0xd3, 0x6c, 0x82, 0xb9, 0xe7, 0x52, 0x57,
	0x0d, 0x27, 0x3a, 0x7a, 0x0c, 0x7e, 0x9f, 0x62, 0xfb, 0x30, 0xfe, 0x24, 0x1a, 0x92, 0xe2, 0x73,
	0x0c, 0xf1, 0xff, 0xcf, 0xd3, 0x62, 0x2b, 0x48, 0x88, 0xcf, 0x0d, 0x78, 0x6a, 0x3f, 0xb1, 0xe2,
	0xaf, 0x36, 0xec, 0xd0, 0x9d, 0xa4, 0x3f, 0xeb, 0xf5, 0x67, 0x7f, 0xa3, 0x9f, 0x74, 0x8e, 0xe9,
	0xca, 0x1e, 0xa3, 0xfe, 0x57, 0x6a, 0xad, 0x3a, 0xfd, 0x18, 0x63, 0xee, 0xa5, 0xaa, 0x35, 0xc9,
	0xf7, 0x39, 0xc5, 0xd8, 0xd3, 0x51, 0x91, 0xa7, 0x35, 0xc9, 0xf6, 0xb9, 0x01, 0xd8, 0xfb, 0x4a,
	0x14, 0xa1, 0x6b, 0x7a, 0x5f, 0x89, 0x02, 0xcf, 0x1e, 0x65, 0x59, 0x15, 0x7a, 0xe6, 0x2c, 0xc6,
	0xec, 0x26, 0xf8, 0xe4, 0x77, 0xae, 0x0b, 0x11, 0xfa, 0x44, 0x5c, 0x24, 0xd8, 0x6d, 0x00, 0xea,
	0x46, 0xe9, 0xfc, 0x4c, 0x84, 0x40, 0xf4, 0x20, 0x83, 0x37, 0xbe, 0x28, 0xd2, 0x75, 0x18, 0x90,
	0xdf, 0x14, 0x5f, 0x4c, 0x68, 0x77, 0x30, 0xa1, 0xf8, 0x9b, 0x8d, 0xeb, 0xa1, 0x55, 0x25, 0xfe,
	0x69, 0x3d, 0xba, 0x15, 0x18, 0x5f, 0x5e, 0x01, 0x23, 0x77, 0x32, 0x94, 0x7b, 0x95, 0x31, 0x9d,
	0x81, 0xce, 0xc0, 0xc0, 0xbe, 0x3d, 0xf7, 0x4f, 0x0b, 0xe4, 0x5d, 0xb1, 0x40, 0x68, 0x06, 0x0a,
	0x78, 0xbb, 0x51, 0xb2, 0xf3, 0x6a, 0x90, 0xe9, 0x79, 0xe3, 0x25, 0x0c, 0x78, 0x63, 0xe6, 0x14,
	0x02, 0x42, 0xad, 0x9b, 0x01, 0x15, 0x0c, 0x53, 0xf1, 0x29, 0xec, 0xad, 0xb6, 0x95, 0x44, 0x83,
	0xb9, 0xf8, 0xb2, 0x15, 0xb5, 0x66, 0xd7, 0xc1, 0xc1, 0x97, 0xd7, 0xef, 0x53, 0x8b, 0xd0, 0x44,
	0x25, 0xc9, 0x2e, 0x8f, 0xdb, 0x4a, 0x62, 0x5d, 0x25, 0xd2, 0x5a, 0xc9, 0xd6, 0xaa, 0x16, 0x1d,
	0x7e, 0xb7, 0x20, 0xc0, 0xfb, 0x96, 0xe6, 0xe5, 0xb2, 0x1b, 0xe0, 0x9e, 0x08, 0x4d, 0x6b, 0xea,
	0x24, 0x0b, 0xa9, 0x1f, 0x3d, 0x8c, 0x1c, 0xf3, 0x14, 0xe2, 0x11, 0xbb, 0x03, 0xff, 0x9d, 0x08,
	0x6d, 0xcc, 0xff, 0x4d, 0xc9, 0x2d, 0xf0, 0xf0, 0x3c, 0x0d, 0xb2, 0x63, 0xdd, 0xc4, 0x4c, 0x36,
	0x1e, 0xb1, 0xbb, 0xb0, 0x77, 0xba, 0x15, 0x55, 0x83, 0xd5, 0xc7, 0x0d, 0x0d, 0xc1, 0x4d, 0x96,
	0xba, 0xca, 0xe5, 0x3a, 0x6a, 0xcb, 0xe3, 0x11, 0xbb, 0x0f, 0x5e, 0xa7, 0x93, 0xed, 0x27, 0xbf,
	0x48, 0x8e, 0xdc, 0x84, 0x8b, 0x7a, 0x5b, 0xe8, 0x78, 0x74, 0xec, 0xbf, 0x77, 0x93, 0x67, 0xf4,
	0x7d, 0xf9, 0xe8, 0xd0, 0xcf, 0x83, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x64, 0xc9, 0xa2, 0x50,
	0x89, 0x04, 0x00, 0x00,
}
