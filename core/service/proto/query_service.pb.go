// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query_service.proto

package proto // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryPagingShopRequest struct {
	// 参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	// 是否只查询营业中的店铺
	OnlyBusiness         bool     `protobuf:"varint,2,opt,name=OnlyBusiness,proto3" json:"OnlyBusiness,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryPagingShopRequest) Reset()         { *m = QueryPagingShopRequest{} }
func (m *QueryPagingShopRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPagingShopRequest) ProtoMessage()    {}
func (*QueryPagingShopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_service_7fe9eb10008f31dc, []int{0}
}
func (m *QueryPagingShopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPagingShopRequest.Unmarshal(m, b)
}
func (m *QueryPagingShopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPagingShopRequest.Marshal(b, m, deterministic)
}
func (dst *QueryPagingShopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPagingShopRequest.Merge(dst, src)
}
func (m *QueryPagingShopRequest) XXX_Size() int {
	return xxx_messageInfo_QueryPagingShopRequest.Size(m)
}
func (m *QueryPagingShopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPagingShopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPagingShopRequest proto.InternalMessageInfo

func (m *QueryPagingShopRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *QueryPagingShopRequest) GetOnlyBusiness() bool {
	if m != nil {
		return m.OnlyBusiness
	}
	return false
}

type QueryPagingShopsResponse struct {
	Total                int64              `protobuf:"zigzag64,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Value                []*QueryPagingShop `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryPagingShopsResponse) Reset()         { *m = QueryPagingShopsResponse{} }
func (m *QueryPagingShopsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryPagingShopsResponse) ProtoMessage()    {}
func (*QueryPagingShopsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_service_7fe9eb10008f31dc, []int{1}
}
func (m *QueryPagingShopsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPagingShopsResponse.Unmarshal(m, b)
}
func (m *QueryPagingShopsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPagingShopsResponse.Marshal(b, m, deterministic)
}
func (dst *QueryPagingShopsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPagingShopsResponse.Merge(dst, src)
}
func (m *QueryPagingShopsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryPagingShopsResponse.Size(m)
}
func (m *QueryPagingShopsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPagingShopsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPagingShopsResponse proto.InternalMessageInfo

func (m *QueryPagingShopsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *QueryPagingShopsResponse) GetValue() []*QueryPagingShop {
	if m != nil {
		return m.Value
	}
	return nil
}

type QueryPagingShop struct {
	Id                   int64    `protobuf:"zigzag64,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Alias                string   `protobuf:"bytes,3,opt,name=Alias,proto3" json:"Alias,omitempty"`
	Host                 string   `protobuf:"bytes,4,opt,name=Host,proto3" json:"Host,omitempty"`
	Logo                 string   `protobuf:"bytes,5,opt,name=Logo,proto3" json:"Logo,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryPagingShop) Reset()         { *m = QueryPagingShop{} }
func (m *QueryPagingShop) String() string { return proto.CompactTextString(m) }
func (*QueryPagingShop) ProtoMessage()    {}
func (*QueryPagingShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_service_7fe9eb10008f31dc, []int{2}
}
func (m *QueryPagingShop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPagingShop.Unmarshal(m, b)
}
func (m *QueryPagingShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPagingShop.Marshal(b, m, deterministic)
}
func (dst *QueryPagingShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPagingShop.Merge(dst, src)
}
func (m *QueryPagingShop) XXX_Size() int {
	return xxx_messageInfo_QueryPagingShop.Size(m)
}
func (m *QueryPagingShop) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPagingShop.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPagingShop proto.InternalMessageInfo

func (m *QueryPagingShop) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *QueryPagingShop) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryPagingShop) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *QueryPagingShop) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *QueryPagingShop) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *QueryPagingShop) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type MemberOrderPagingRequest struct {
	MemberId             int64          `protobuf:"zigzag64,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	Params               *SPagingParams `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MemberOrderPagingRequest) Reset()         { *m = MemberOrderPagingRequest{} }
func (m *MemberOrderPagingRequest) String() string { return proto.CompactTextString(m) }
func (*MemberOrderPagingRequest) ProtoMessage()    {}
func (*MemberOrderPagingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_service_7fe9eb10008f31dc, []int{3}
}
func (m *MemberOrderPagingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberOrderPagingRequest.Unmarshal(m, b)
}
func (m *MemberOrderPagingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberOrderPagingRequest.Marshal(b, m, deterministic)
}
func (dst *MemberOrderPagingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberOrderPagingRequest.Merge(dst, src)
}
func (m *MemberOrderPagingRequest) XXX_Size() int {
	return xxx_messageInfo_MemberOrderPagingRequest.Size(m)
}
func (m *MemberOrderPagingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberOrderPagingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemberOrderPagingRequest proto.InternalMessageInfo

func (m *MemberOrderPagingRequest) GetMemberId() int64 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *MemberOrderPagingRequest) GetParams() *SPagingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type MemberOrderPagingResponse struct {
	Total                int64                  `protobuf:"zigzag64,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Value                []*PagedMemberSubOrder `protobuf:"bytes,2,rep,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MemberOrderPagingResponse) Reset()         { *m = MemberOrderPagingResponse{} }
func (m *MemberOrderPagingResponse) String() string { return proto.CompactTextString(m) }
func (*MemberOrderPagingResponse) ProtoMessage()    {}
func (*MemberOrderPagingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_service_7fe9eb10008f31dc, []int{4}
}
func (m *MemberOrderPagingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberOrderPagingResponse.Unmarshal(m, b)
}
func (m *MemberOrderPagingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberOrderPagingResponse.Marshal(b, m, deterministic)
}
func (dst *MemberOrderPagingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberOrderPagingResponse.Merge(dst, src)
}
func (m *MemberOrderPagingResponse) XXX_Size() int {
	return xxx_messageInfo_MemberOrderPagingResponse.Size(m)
}
func (m *MemberOrderPagingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberOrderPagingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MemberOrderPagingResponse proto.InternalMessageInfo

func (m *MemberOrderPagingResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *MemberOrderPagingResponse) GetValue() []*PagedMemberSubOrder {
	if m != nil {
		return m.Value
	}
	return nil
}

type PagedMemberSubOrder struct {
	OrderId              int64           `protobuf:"zigzag64,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	OrderNo              string          `protobuf:"bytes,2,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	ParentNo             string          `protobuf:"bytes,3,opt,name=ParentNo,proto3" json:"ParentNo,omitempty"`
	VendorId             int64           `protobuf:"zigzag64,4,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	ShopId               int64           `protobuf:"zigzag64,5,opt,name=ShopId,proto3" json:"ShopId,omitempty"`
	ShopName             string          `protobuf:"bytes,6,opt,name=ShopName,proto3" json:"ShopName,omitempty"`
	ItemAmount           float64         `protobuf:"fixed64,7,opt,name=ItemAmount,proto3" json:"ItemAmount,omitempty"`
	DiscountAmount       float64         `protobuf:"fixed64,8,opt,name=DiscountAmount,proto3" json:"DiscountAmount,omitempty"`
	ExpressFee           float64         `protobuf:"fixed64,9,opt,name=ExpressFee,proto3" json:"ExpressFee,omitempty"`
	PackageFee           float64         `protobuf:"fixed64,10,opt,name=PackageFee,proto3" json:"PackageFee,omitempty"`
	IsPaid               bool            `protobuf:"varint,11,opt,name=IsPaid,proto3" json:"IsPaid,omitempty"`
	FinalAmount          float64         `protobuf:"fixed64,12,opt,name=FinalAmount,proto3" json:"FinalAmount,omitempty"`
	State                int32           `protobuf:"zigzag32,13,opt,name=State,proto3" json:"State,omitempty"`
	StateText            string          `protobuf:"bytes,14,opt,name=StateText,proto3" json:"StateText,omitempty"`
	CreateTime           int64           `protobuf:"zigzag64,15,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Items                []*SComplexItem `protobuf:"bytes,16,rep,name=Items,proto3" json:"Items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PagedMemberSubOrder) Reset()         { *m = PagedMemberSubOrder{} }
func (m *PagedMemberSubOrder) String() string { return proto.CompactTextString(m) }
func (*PagedMemberSubOrder) ProtoMessage()    {}
func (*PagedMemberSubOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_service_7fe9eb10008f31dc, []int{5}
}
func (m *PagedMemberSubOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagedMemberSubOrder.Unmarshal(m, b)
}
func (m *PagedMemberSubOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagedMemberSubOrder.Marshal(b, m, deterministic)
}
func (dst *PagedMemberSubOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagedMemberSubOrder.Merge(dst, src)
}
func (m *PagedMemberSubOrder) XXX_Size() int {
	return xxx_messageInfo_PagedMemberSubOrder.Size(m)
}
func (m *PagedMemberSubOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PagedMemberSubOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PagedMemberSubOrder proto.InternalMessageInfo

func (m *PagedMemberSubOrder) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *PagedMemberSubOrder) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *PagedMemberSubOrder) GetParentNo() string {
	if m != nil {
		return m.ParentNo
	}
	return ""
}

func (m *PagedMemberSubOrder) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *PagedMemberSubOrder) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *PagedMemberSubOrder) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *PagedMemberSubOrder) GetItemAmount() float64 {
	if m != nil {
		return m.ItemAmount
	}
	return 0
}

func (m *PagedMemberSubOrder) GetDiscountAmount() float64 {
	if m != nil {
		return m.DiscountAmount
	}
	return 0
}

func (m *PagedMemberSubOrder) GetExpressFee() float64 {
	if m != nil {
		return m.ExpressFee
	}
	return 0
}

func (m *PagedMemberSubOrder) GetPackageFee() float64 {
	if m != nil {
		return m.PackageFee
	}
	return 0
}

func (m *PagedMemberSubOrder) GetIsPaid() bool {
	if m != nil {
		return m.IsPaid
	}
	return false
}

func (m *PagedMemberSubOrder) GetFinalAmount() float64 {
	if m != nil {
		return m.FinalAmount
	}
	return 0
}

func (m *PagedMemberSubOrder) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *PagedMemberSubOrder) GetStateText() string {
	if m != nil {
		return m.StateText
	}
	return ""
}

func (m *PagedMemberSubOrder) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *PagedMemberSubOrder) GetItems() []*SComplexItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryPagingShopRequest)(nil), "QueryPagingShopRequest")
	proto.RegisterType((*QueryPagingShopsResponse)(nil), "QueryPagingShopsResponse")
	proto.RegisterType((*QueryPagingShop)(nil), "QueryPagingShop")
	proto.RegisterType((*MemberOrderPagingRequest)(nil), "MemberOrderPagingRequest")
	proto.RegisterType((*MemberOrderPagingResponse)(nil), "MemberOrderPagingResponse")
	proto.RegisterType((*PagedMemberSubOrder)(nil), "PagedMemberSubOrder")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryServiceClient is the client API for QueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryServiceClient interface {
	// 获取分页店铺数据
	PagingShops(ctx context.Context, in *QueryPagingShopRequest, opts ...grpc.CallOption) (*QueryPagingShopsResponse, error)
	// 查询分页普通订单
	MemberNormalOrders(ctx context.Context, in *MemberOrderPagingRequest, opts ...grpc.CallOption) (*MemberOrderPagingResponse, error)
	// 查询分页批发订单
	QueryWholesaleOrders(ctx context.Context, in *MemberOrderPagingRequest, opts ...grpc.CallOption) (*MemberOrderPagingResponse, error)
	// 查询分页交易/服务类订单
	QueryTradeOrders(ctx context.Context, in *MemberOrderPagingRequest, opts ...grpc.CallOption) (*MemberOrderPagingResponse, error)
}

type queryServiceClient struct {
	cc *grpc.ClientConn
}

func NewQueryServiceClient(cc *grpc.ClientConn) QueryServiceClient {
	return &queryServiceClient{cc}
}

func (c *queryServiceClient) PagingShops(ctx context.Context, in *QueryPagingShopRequest, opts ...grpc.CallOption) (*QueryPagingShopsResponse, error) {
	out := new(QueryPagingShopsResponse)
	err := c.cc.Invoke(ctx, "/QueryService/PagingShops", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) MemberNormalOrders(ctx context.Context, in *MemberOrderPagingRequest, opts ...grpc.CallOption) (*MemberOrderPagingResponse, error) {
	out := new(MemberOrderPagingResponse)
	err := c.cc.Invoke(ctx, "/QueryService/MemberNormalOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) QueryWholesaleOrders(ctx context.Context, in *MemberOrderPagingRequest, opts ...grpc.CallOption) (*MemberOrderPagingResponse, error) {
	out := new(MemberOrderPagingResponse)
	err := c.cc.Invoke(ctx, "/QueryService/QueryWholesaleOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryServiceClient) QueryTradeOrders(ctx context.Context, in *MemberOrderPagingRequest, opts ...grpc.CallOption) (*MemberOrderPagingResponse, error) {
	out := new(MemberOrderPagingResponse)
	err := c.cc.Invoke(ctx, "/QueryService/QueryTradeOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServiceServer is the server API for QueryService service.
type QueryServiceServer interface {
	// 获取分页店铺数据
	PagingShops(context.Context, *QueryPagingShopRequest) (*QueryPagingShopsResponse, error)
	// 查询分页普通订单
	MemberNormalOrders(context.Context, *MemberOrderPagingRequest) (*MemberOrderPagingResponse, error)
	// 查询分页批发订单
	QueryWholesaleOrders(context.Context, *MemberOrderPagingRequest) (*MemberOrderPagingResponse, error)
	// 查询分页交易/服务类订单
	QueryTradeOrders(context.Context, *MemberOrderPagingRequest) (*MemberOrderPagingResponse, error)
}

func RegisterQueryServiceServer(s *grpc.Server, srv QueryServiceServer) {
	s.RegisterService(&_QueryService_serviceDesc, srv)
}

func _QueryService_PagingShops_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPagingShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).PagingShops(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QueryService/PagingShops",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).PagingShops(ctx, req.(*QueryPagingShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_MemberNormalOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberOrderPagingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).MemberNormalOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QueryService/MemberNormalOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).MemberNormalOrders(ctx, req.(*MemberOrderPagingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_QueryWholesaleOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberOrderPagingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).QueryWholesaleOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QueryService/QueryWholesaleOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).QueryWholesaleOrders(ctx, req.(*MemberOrderPagingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryService_QueryTradeOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberOrderPagingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServiceServer).QueryTradeOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QueryService/QueryTradeOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServiceServer).QueryTradeOrders(ctx, req.(*MemberOrderPagingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QueryService",
	HandlerType: (*QueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PagingShops",
			Handler:    _QueryService_PagingShops_Handler,
		},
		{
			MethodName: "MemberNormalOrders",
			Handler:    _QueryService_MemberNormalOrders_Handler,
		},
		{
			MethodName: "QueryWholesaleOrders",
			Handler:    _QueryService_QueryWholesaleOrders_Handler,
		},
		{
			MethodName: "QueryTradeOrders",
			Handler:    _QueryService_QueryTradeOrders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query_service.proto",
}

func init() { proto.RegisterFile("query_service.proto", fileDescriptor_query_service_7fe9eb10008f31dc) }

var fileDescriptor_query_service_7fe9eb10008f31dc = []byte{
	// 624 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x4e, 0xdb, 0x4c,
	0x10, 0xfd, 0x6c, 0x48, 0x20, 0x93, 0x10, 0xf8, 0x16, 0x44, 0x97, 0xa8, 0xaa, 0x2c, 0x57, 0x42,
	0x51, 0x2f, 0x7c, 0x41, 0x2f, 0x7b, 0x05, 0xb4, 0xa8, 0x51, 0x4b, 0x70, 0xed, 0x88, 0x56, 0x95,
	0xda, 0x6a, 0x83, 0x47, 0xc6, 0xaa, 0xed, 0x0d, 0xbb, 0x76, 0x05, 0xcf, 0xd1, 0xf7, 0xe9, 0x33,
	0xf5, 0x11, 0xaa, 0xdd, 0xb5, 0x43, 0xb0, 0x12, 0x6e, 0xb8, 0xf2, 0x9c, 0x33, 0xb3, 0x67, 0xc6,
	0x67, 0x7f, 0x60, 0xf7, 0xa6, 0x44, 0x71, 0xf7, 0x43, 0xa2, 0xf8, 0x95, 0x5c, 0xa1, 0x37, 0x13,
	0xbc, 0xe0, 0x83, 0x5e, 0x9c, 0xf2, 0x29, 0x4b, 0x2b, 0xb4, 0xcb, 0x45, 0x84, 0xe2, 0x61, 0x89,
	0x1b, 0xc1, 0xfe, 0x27, 0xb5, 0xd2, 0x67, 0x71, 0x92, 0xc7, 0xe1, 0x35, 0x9f, 0x05, 0x78, 0x53,
	0xa2, 0x2c, 0xc8, 0x21, 0xb4, 0x7d, 0x26, 0x58, 0x26, 0xa9, 0xe5, 0x58, 0xc3, 0xee, 0x51, 0xdf,
	0x0b, 0x4d, 0x91, 0x61, 0x83, 0x2a, 0x4b, 0x5c, 0xe8, 0x5d, 0xe4, 0xe9, 0xdd, 0x49, 0x29, 0x93,
	0x1c, 0xa5, 0xa4, 0xb6, 0x63, 0x0d, 0x37, 0x83, 0x07, 0x9c, 0xfb, 0x05, 0x68, 0xa3, 0x8b, 0x0c,
	0x50, 0xce, 0x78, 0x2e, 0x91, 0xec, 0x41, 0x6b, 0xc2, 0x0b, 0x96, 0xea, 0x36, 0x24, 0x30, 0x80,
	0x1c, 0x42, 0xeb, 0x92, 0xa5, 0x25, 0x52, 0xdb, 0x59, 0x1b, 0x76, 0x8f, 0x76, 0xbc, 0xe6, 0x94,
	0x26, 0xed, 0xfe, 0xb6, 0x60, 0xbb, 0x91, 0x22, 0x7d, 0xb0, 0x47, 0x51, 0x25, 0x67, 0x8f, 0x22,
	0x42, 0x60, 0x7d, 0xcc, 0x32, 0xd4, 0x93, 0x75, 0x02, 0x1d, 0xab, 0xae, 0xc7, 0x69, 0xc2, 0x24,
	0x5d, 0xd3, 0xa4, 0x01, 0xaa, 0xf2, 0x3d, 0x97, 0x05, 0x5d, 0x37, 0x95, 0x2a, 0x56, 0xdc, 0x47,
	0x1e, 0x73, 0xda, 0x32, 0x9c, 0x8a, 0xc9, 0x0b, 0x80, 0x53, 0x81, 0xac, 0xc0, 0x49, 0x92, 0x21,
	0x6d, 0xeb, 0x4e, 0x0b, 0x8c, 0xfb, 0x1d, 0xe8, 0x39, 0x66, 0x53, 0x14, 0x17, 0xca, 0x72, 0x33,
	0x5a, 0xed, 0xeb, 0x00, 0x36, 0x4d, 0x6e, 0x3e, 0xe3, 0x1c, 0x2f, 0x78, 0x6e, 0x3f, 0xe6, 0xb9,
	0xfb, 0x0d, 0x0e, 0x96, 0xe8, 0x3f, 0x6a, 0xe8, 0xab, 0x87, 0x86, 0xee, 0x79, 0x3e, 0x8b, 0x31,
	0x32, 0x2a, 0x61, 0x39, 0xd5, 0x42, 0xb5, 0xa9, 0x7f, 0xd7, 0x60, 0x77, 0x49, 0x9a, 0x50, 0xd8,
	0xd0, 0xc1, 0x7c, 0xf2, 0x1a, 0xce, 0x33, 0x63, 0x5e, 0xb9, 0x5c, 0x43, 0xf5, 0xbb, 0x3e, 0x13,
	0x98, 0x17, 0x63, 0x5e, 0x79, 0x3d, 0xc7, 0x2a, 0x77, 0x89, 0x79, 0xc4, 0x95, 0xe0, 0xba, 0xb1,
	0xa2, 0xc6, 0x64, 0x1f, 0xda, 0x6a, 0x33, 0x47, 0x91, 0x36, 0x9e, 0x04, 0x15, 0x52, 0x6b, 0x54,
	0xa4, 0x37, 0xb4, 0x6d, 0xf4, 0x6a, 0xac, 0xb6, 0x65, 0x54, 0x60, 0x76, 0x9c, 0xf1, 0x32, 0x2f,
	0xe8, 0x86, 0x63, 0x0d, 0xad, 0x60, 0x81, 0x21, 0x87, 0xd0, 0x7f, 0x9b, 0xc8, 0x2b, 0x15, 0x57,
	0x35, 0x9b, 0xba, 0xa6, 0xc1, 0x2a, 0x9d, 0x77, 0xb7, 0x33, 0x81, 0x52, 0x9e, 0x21, 0xd2, 0x8e,
	0xd1, 0xb9, 0x67, 0x54, 0xde, 0x67, 0x57, 0x3f, 0x59, 0x8c, 0x2a, 0x0f, 0x26, 0x7f, 0xcf, 0xa8,
	0xd9, 0x47, 0xd2, 0x67, 0x49, 0x44, 0xbb, 0xfa, 0x32, 0x54, 0x88, 0x38, 0xd0, 0x3d, 0x4b, 0x72,
	0x96, 0x56, 0xcd, 0x7b, 0x7a, 0xe1, 0x22, 0xa5, 0xf6, 0x2e, 0x2c, 0x58, 0x81, 0x74, 0xcb, 0xb1,
	0x86, 0xff, 0x07, 0x06, 0x90, 0xe7, 0xd0, 0xd1, 0xc1, 0x04, 0x6f, 0x0b, 0xda, 0xd7, 0x3f, 0x7d,
	0x4f, 0x34, 0x0e, 0xe3, 0x76, 0xf3, 0x30, 0x92, 0x97, 0xd0, 0x52, 0x1e, 0x48, 0xba, 0xa3, 0x77,
	0x7e, 0xcb, 0x0b, 0x4f, 0x79, 0x36, 0x4b, 0xf1, 0x56, 0xb1, 0x81, 0xc9, 0x1d, 0xfd, 0xb1, 0xa1,
	0xa7, 0xef, 0x51, 0x68, 0x9e, 0x07, 0x72, 0x0c, 0xdd, 0x85, 0xdb, 0x4a, 0x9e, 0x79, 0xcb, 0x9f,
	0x89, 0xc1, 0x81, 0xb7, 0xf2, 0x66, 0x9f, 0x03, 0x31, 0x07, 0x68, 0xcc, 0x45, 0xc6, 0x52, 0x7d,
	0x22, 0x24, 0x39, 0xf0, 0x56, 0x5d, 0x8d, 0xc1, 0xc0, 0x5b, 0x79, 0xaa, 0xdd, 0xff, 0xc8, 0x05,
	0xec, 0xe9, 0x56, 0x9f, 0xaf, 0x79, 0x8a, 0x92, 0xa5, 0xf8, 0x54, 0xc1, 0x0f, 0xb0, 0xa3, 0x05,
	0x27, 0x82, 0x45, 0x4f, 0x15, 0x3b, 0xe9, 0x7c, 0xdd, 0xf0, 0xde, 0xe8, 0x37, 0x75, 0xda, 0xd6,
	0x9f, 0xd7, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x95, 0xe5, 0x9b, 0xe4, 0x94, 0x05, 0x00, 0x00,
}
